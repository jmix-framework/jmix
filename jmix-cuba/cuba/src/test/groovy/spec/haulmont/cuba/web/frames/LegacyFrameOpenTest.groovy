/*
 * Copyright (c) 2008-2019 Haulmont.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

package spec.haulmont.cuba.web.frames

import io.jmix.ui.screen.OpenMode
import spec.haulmont.cuba.web.UiScreenSpec
import spec.haulmont.cuba.web.frames.screens.TestHostScreen
import spec.haulmont.cuba.web.frames.screens.TestOpenFrameScreen

@SuppressWarnings(["GroovyAccessibility", "GroovyAssignabilityCheck"])
class LegacyFrameOpenTest extends UiScreenSpec {

    def setup() {
        exportScreensPackages(['spec.haulmont.cuba.web.frames.screens'])
    }


    def "open UserBrowser in frame declaratively"() {
        showMainWindow()

        when:
        def testHostScreen = screens.create('testHostScreen', OpenMode.NEW_TAB)
        testHostScreen.show()

        then:
        testHostScreen instanceof TestHostScreen
        ((TestHostScreen) testHostScreen).userBrowse != null
        ((TestHostScreen) testHostScreen).userBrowse.usersTable != null
    }

    def "open UserBrowser in frame programmatically"() {
        showMainWindow()

        when:
        def testHostScreen = screens.create('testOpenFrame', OpenMode.NEW_TAB)
        testHostScreen.show()

        then:
        testHostScreen instanceof TestOpenFrameScreen
        ((TestOpenFrameScreen) testHostScreen).userBrowse != null
        ((TestOpenFrameScreen) testHostScreen).userBrowse.usersTable != null
    }
}