<?xml version="1.0" encoding="UTF-8"?>
<!--
  ~ Copyright 2022 Haulmont.
  ~
  ~ Licensed under the Apache License, Version 2.0 (the "License");
  ~ you may not use this file except in compliance with the License.
  ~ You may obtain a copy of the License at
  ~
  ~     http://www.apache.org/licenses/LICENSE-2.0
  ~
  ~ Unless required by applicable law or agreed to in writing, software
  ~ distributed under the License is distributed on an "AS IS" BASIS,
  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  ~ See the License for the specific language governing permissions and
  ~ limitations under the License.
  -->
<jmixCodeSnippets xmlns="http://jmix.io/schema/core/code-snippets">

    <category name="Data">

        <codeSnippet name="Load one entity by query" contextTypes="service,controller">
            <inject variable="dataManager" classQualifiedName="io.jmix.core.DataManager"/>

            <jpqlQueryParameter code="query" classCode="entityClass" paramsCode="params" text="JPQL Query"/>

            <text language="java">
                ${IS_FINAL}${entityClass} entity = dataManager.load(${entityClass}.class)
                .query(${query})
                &lt;% params.eachWithIndex{ param, i -> println '.parameter("' + param + '", paramValue' + (i == 0 ? '' : i) + ')'} %&gt;.one();
            </text>
            <text language="kotlin">
                val entity = dataManager.load(${entityClass}::class.java)
                .query(${query})
                &lt;% params.eachWithIndex{ param, i -> print '.parameter("' + param + '", paramValue' + (i == 0 ? '' : i) + ')\n    '} %&gt;.one()
            </text>

            <description>
                <![CDATA[
                Load an entity instance from the database by query using <code>DataManager</code>. If no entity found, an exception is thrown.<br>
                <a href="https://docs.jmix.io/jmix/data-access/data-manager.html#load-by-query">Jmix Documentation</a>
                ]]>
            </description>
        </codeSnippet>

        <codeSnippet name="Load optional entity by query" contextTypes="service,controller">
            <inject variable="dataManager" classQualifiedName="io.jmix.core.DataManager"/>

            <jpqlQueryParameter code="query" classCode="entityClass" paramsCode="params" text="JPQL Query"/>

            <text language="java">
                ${IS_FINAL}java.util.Optional&lt;${entityClass}&gt; entity = dataManager.load(${entityClass}.class)
                .query(${query})
                &lt;% params.eachWithIndex{ param, i -> println '.parameter("' + param + '", paramValue' + (i == 0 ? '' : i) + ')'} %&gt;.optional();
            </text>
            <text language="kotlin">
                val entity = dataManager.load(${entityClass}::class.java)
                .query(${query})
                &lt;% params.eachWithIndex{ param, i -> print '.parameter("' + param + '", paramValue' + (i == 0 ? '' : i) + ')\n    '} %&gt;.optional()
            </text>

            <description>
                <![CDATA[
                Load an entity instance from the database by query using <code>DataManager</code>. The returned entity is wrapped in <code>Optional</code>.<br>
                <a href="https://docs.jmix.io/jmix/data-access/data-manager.html#load-by-query">Jmix Documentation</a>
                ]]>
            </description>
        </codeSnippet>

        <codeSnippet name="Load list of entities by query" contextTypes="service,controller">
            <inject variable="dataManager" classQualifiedName="io.jmix.core.DataManager"/>

            <jpqlQueryParameter code="query" classCode="entityClass" paramsCode="params" text="JPQL Query"/>

            <text language="java">
                ${IS_FINAL}java.util.List&lt;${entityClass}&gt; myEntityList = dataManager.load(${entityClass}.class)
                .query(${query})
                &lt;% params.eachWithIndex{ param, i -> println '.parameter("' + param + '", paramValue' + (i == 0 ? '' : i) + ')'} %&gt;.list();
            </text>
            <text language="kotlin">
                val myEntityList = dataManager.load(${entityClass}::class.java)
                .query(${query})
                &lt;% params.eachWithIndex{ param, i -> print '.parameter("' + param + '", paramValue' + (i == 0 ? '' : i) + ')\n    '} %&gt;.list()
            </text>

            <description>
                <![CDATA[
                Load a list of entities from the database by query using <code>DataManager</code>.<br>
                <a href="https://docs.jmix.io/jmix/data-access/data-manager.html#load-by-id">Jmix Documentation</a>
                ]]>
            </description>
        </codeSnippet>

        <codeSnippet name="Load scalar or aggregate values" contextTypes="service,controller">
            <inject variable="dataManager" classQualifiedName="io.jmix.core.DataManager"/>

            <text language="java">
                ${IS_FINAL}List&lt;io.jmix.core.entity.KeyValueEntity&gt; values = dataManager.loadValues("select e.firstName, e.lastName from User e")
                .properties("firstName", "lastName")
                .list();
            </text>
            <text language="kotlin">
                val values = dataManager.loadValues("select e.firstName, e.lastName from User e")
                .properties("firstName", "lastName")
                .list()
            </text>

            <description>
                <![CDATA[
                Load a list of scalar or aggregate values in the form of key-value entities using <code>DataManager</code>.<br>
                <a href="https://docs.jmix.io/jmix/data-access/data-manager.html#load-scalars">Jmix Documentation</a>
                ]]>
            </description>
        </codeSnippet>

        <codeSnippet name="Load single scalar or aggregate value" contextTypes="service,controller">
            <inject variable="dataManager" classQualifiedName="io.jmix.core.DataManager"/>

            <text language="java">
                ${IS_FINAL}Long userCount = dataManager.loadValue("select count(e) from User e", Long.class).one();
            </text>
            <text language="kotlin">
                val userCount = dataManager.loadValue("select count(e) from User e", Long::class.java).one()
            </text>

            <description>
                <![CDATA[
                Load a single scalar or aggregate value using <code>DataManager</code>.<br>
                <a href="https://docs.jmix.io/jmix/data-access/data-manager.html#load-scalars">Jmix Documentation</a>
                ]]>
            </description>
        </codeSnippet>

    </category>

</jmixCodeSnippets>
