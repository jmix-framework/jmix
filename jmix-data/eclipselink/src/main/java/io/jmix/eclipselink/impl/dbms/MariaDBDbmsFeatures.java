/*
 * Copyright 2020 Haulmont.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

package io.jmix.eclipselink.impl.dbms;

import io.jmix.data.persistence.DbmsFeatures;
import org.springframework.beans.factory.annotation.Value;
import org.springframework.lang.Nullable;
import org.springframework.stereotype.Component;

import java.util.HashMap;
import java.util.Map;


/**
 * Specifies dbms features and sets MariaDB platform.
 * <p>
 * {@code char(36)} id columns are generated by default (supported by {@link JmixMariaDBPlatform}).
 * {@code UUID} column type may be enabled unless the following conditions are met:
 * <ul>
 *     <li>MariaDB 10.6 or earlier - UUID column type is not yet supported.</li>
 *     <li>Old databases which have been created with Liquibase 4.25 or earlier (Jmix 2.4.0 or earlier).</li>
 * </ul>
 * <p>
 * To enable {@code UUID} column support (by {@link JmixMariaDB107Platform}), follow these steps:
 * <ul>
 *     <li>Set {@code jmix.eclipselink.use-mariadb-uuid-id} application property to {@code true}.</li>
 *     <li>Add `implementation 'org.liquibase:liquibase-core:4.31.1!!'` (or later) to build.gradle.</li>
 *     <li>Use UUID with hyphens for MariaDB in Liquibase scripts (WARNING: manual editing and applying of script
 *     `io/jmix/reports/liquibase/changelog/001-reports.xml` will be required if reports add-on is used).</li>
 * </ul>
 */
@Component("mariadbDbmsFeatures")
public class MariaDBDbmsFeatures implements DbmsFeatures {

    @Value("${jmix.eclipselink.use-mariadb-uuid-id:false}")
    protected boolean useMariaDbUuidId;

    @Override
    public Map<String, String> getJpaParameters() {
        HashMap<String, String> params = new HashMap<>();
        if (useMariaDbUuidId) {
            params.put("eclipselink.target-database", "io.jmix.eclipselink.impl.dbms.JmixMariaDB107Platform");
        } else {
            params.put("eclipselink.target-database", "io.jmix.eclipselink.impl.dbms.JmixMariaDBPlatform");
        }
        return params;
    }

    @Override
    public String getTimeStampType() {
        return "DATETIME";
    }

    @Nullable
    @Override
    public String getUuidTypeClassName() {
        return null;
    }

    @Nullable
    @Override
    public String getTransactionTimeoutStatement() {
        return null;
    }

    @Override
    public String getUniqueConstraintViolationPattern() {
        return "Duplicate entry '.+' for key '(.+)'";
    }

    @Override
    public boolean isNullsLastSorting() {
        return false;
    }

    @Override
    public boolean supportsLobSortingAndFiltering() {
        return true;
    }

    @Override
    public String getTypeAndVersion() {
        return "mariadb";
    }
}
