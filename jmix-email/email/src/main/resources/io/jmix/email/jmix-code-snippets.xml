<!--
  ~ Copyright 2022 Haulmont.
  ~
  ~ Licensed under the Apache License, Version 2.0 (the "License");
  ~ you may not use this file except in compliance with the License.
  ~ You may obtain a copy of the License at
  ~
  ~     http://www.apache.org/licenses/LICENSE-2.0
  ~
  ~ Unless required by applicable law or agreed to in writing, software
  ~ distributed under the License is distributed on an "AS IS" BASIS,
  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  ~ See the License for the specific language governing permissions and
  ~ limitations under the License.
  -->

<jmixCodeSnippets xmlns="http://jmix.io/schema/core/code-snippets">

    <category name="Email">

        <codeSnippet name="Sending an email" contextTypes="service,controller">
            <inject variable="emailer" classQualifiedName="io.jmix.email.Emailer"/>

            <stringInputParameter code="address" text="Address"/>
            <stringInputParameter code="subject" text="Subject"/>
            <stringInputParameter code="body" text="Body"/>
            <optionsInputParameter code="contentType" text="Content type">
                <option name="Plain" value="text/plain; charset=UTF-8"/>
                <option name="Html" value="text/html; charset=UTF-8"/>
            </optionsInputParameter>
            <optionsInputParameter code="important" text="Important">
                <option name="True" value="true"/>
                <option name="False" value="false"/>
            </optionsInputParameter>

            <text language="java">
                ${IS_FINAL}io.jmix.email.EmailInfo emailInfo = io.jmix.email.EmailInfoBuilder.create("${address}", "${subject}", "${body}")
                    .setBodyContentType("${contentType}")
                    .setImportant(${important})
                    .build();

                try {
                    emailer.sendEmail(emailInfo);
                } catch (${IS_FINAL}io.jmix.email.EmailException e) {
                    // process error
                }
            </text>

            <text language="kotlin">
                val emailInfo = io.jmix.email.EmailInfoBuilder.create("${address}", "${subject}", "${body}")
                    .setBodyContentType("${contentType}")
                    .setImportant(${important})
                    .build()

                try {
                    emailer.sendEmail(emailInfo)
                } catch (e: io.jmix.email.EmailException) {
                    // process error
                }
            </text>

            <description>
                <![CDATA[
                    Send an email using <code>Emailer</code>.<br>
                    <a href="https://docs.jmix.io/jmix/email/api.html">Jmix Documentation</a>
                ]]>
            </description>

        </codeSnippet>

        <codeSnippet name="Sending an asynchronous email" contextTypes="service,controller">
            <inject variable="emailer" classQualifiedName="io.jmix.email.Emailer"/>

            <stringInputParameter code="address" text="Address"/>
            <stringInputParameter code="subject" text="Subject"/>
            <stringInputParameter code="body" text="Body"/>
            <optionsInputParameter code="contentType" text="Content type">
                <option name="Plain" value="text/plain; charset=UTF-8"/>
                <option name="Html" value="text/html; charset=UTF-8"/>
            </optionsInputParameter>
            <optionsInputParameter code="important" text="Important">
                <option name="True" value="true"/>
                <option name="False" value="false"/>
            </optionsInputParameter>

            <text language="java">
                ${IS_FINAL}io.jmix.email.EmailInfo emailInfo = io.jmix.email.EmailInfoBuilder.create("${address}", "${subject}", "${body}")
                    .setBodyContentType("${contentType}")
                    .setImportant(${important})
                    .build();

                try {
                    emailer.sendEmailAsync(emailInfo);
                } catch (${IS_FINAL}io.jmix.email.EmailException e) {
                    // process error
                }
            </text>

            <text language="kotlin">
                val emailInfo = io.jmix.email.EmailInfoBuilder.create("${address}", "${subject}", "${body}")
                    .setBodyContentType("${contentType}")
                    .setImportant(${important})
                    .build()

                try {
                    emailer.sendEmailAsync(emailInfo)
                } catch (e: io.jmix.email.EmailException) {
                    // process error
                }
            </text>

            <description>
                <![CDATA[
                    Send async email using <code>Emailer</code>.<br>
                    <a href="https://docs.jmix.io/jmix/email/api.html">Jmix Documentation</a>
                ]]>
            </description>

        </codeSnippet>

        <codeSnippet name="Create an attachment from File Ref" contextTypes="service,controller">
            <inject variable="fileStorage" classQualifiedName="io.jmix.core.FileStorage"/>

            <stringInputParameter code="fileName" text="File name"/>
            <stringInputParameter code="contentId" text="Content ID"/>
            <variableInputParameter code="fileRef" text="File Ref"/>

            <text language="java">
                try (${IS_FINAL}java.io.InputStream inputStream = fileStorage.openStream(${fileRef})) {
                    ${IS_FINAL}byte[] bytes = org.apache.commons.io.IOUtils.toByteArray(inputStream);
                    ${IS_FINAL}io.jmix.email.EmailAttachment emailAtt = new EmailAttachment(bytes, "${fileName}", "${contentId}");

                    // process
                } catch (${IS_FINAL}java.io.IOException e) {
                    // process error
                }
            </text>

            <text language="kotlin">
                try (val inputStream = fileStorage.openStream(${fileRef})) {
                    val bytes = org.apache.commons.io.IOUtils.toByteArray(inputStream)
                    val emailAtt = new EmailAttachment(bytes, "${fileName}", "${contentId}")

                    // process
                } catch (e: java.io.IOException) {
                    // process error
                }
            </text>

            <description>
                <![CDATA[
                    Create an email attachment from a file ref using <code>FileStorage</code> and <code>EmailAttachment</code>.<br>
                    <a href="https://docs.jmix.io/jmix/email/api.html">Jmix Documentation</a>
                ]]>
            </description>

        </codeSnippet>

        <codeSnippet name="Create an attachment from resources" contextTypes="service,controller">
            <inject variable="resources" classQualifiedName="io.jmix.core.Resources"/>

            <stringInputParameter code="fileName" text="File name"/>
            <stringInputParameter code="contentId" text="Content ID"/>
            <stringInputParameter code="path" text="Path to resource"/>

            <text language="java">
                ${IS_FINAL}java.io.InputStream resourceAsStream = resources.getResourceAsStream("${path}");
                try {
                    ${IS_FINAL}byte[] bytes = org.apache.commons.io.IOUtils.toByteArray(resourceAsStream);
                    ${IS_FINAL}io.jmix.email.EmailAttachment emailAtt = new EmailAttachment(bytes, "${fileName}", "${contentId}");

                    // process
                } catch (${IS_FINAL}java.io.IOException e) {
                    // process error
                }
            </text>

            <text language="kotlin">
                val resourceAsStream = resources.getResourceAsStream("${path}")
                try {
                    val bytes = org.apache.commons.io.IOUtils.toByteArray(resourceAsStream);
                    val emailAtt = new EmailAttachment(bytes, "${fileName}", "${contentId}")

                    // process
                } catch (e: java.io.IOException) {
                    // process error
                }
            </text>

            <description>
                <![CDATA[
                    Create an email attachment from resources using <code>Resources</code> and <code>EmailAttachment</code>.<br>
                    <a href="https://docs.jmix.io/jmix/email/api.html">Jmix Documentation</a>
                ]]>
            </description>
        </codeSnippet>

    </category>

</jmixCodeSnippets>