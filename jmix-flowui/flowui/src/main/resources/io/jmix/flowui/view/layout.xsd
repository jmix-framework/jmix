<?xml version="1.0" encoding="UTF-8"?>
<!--
  ~ Copyright 2022 Haulmont.
  ~
  ~ Licensed under the Apache License, Version 2.0 (the "License");
  ~ you may not use this file except in compliance with the License.
  ~ You may obtain a copy of the License at
  ~
  ~     http://www.apache.org/licenses/LICENSE-2.0
  ~
  ~ Unless required by applicable law or agreed to in writing, software
  ~ distributed under the License is distributed on an "AS IS" BASIS,
  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  ~ See the License for the specific language governing permissions and
  ~ limitations under the License.
  -->

<xs:schema targetNamespace="http://jmix.io/schema/flowui/layout"
           xmlns:xs="http://www.w3.org/2001/XMLSchema"
           xmlns="http://jmix.io/schema/flowui/layout"
           elementFormDefault="qualified">

    <!-- Enums -->
    <xs:simpleType name="scrollDirection">
        <xs:restriction base="xs:string">
            <xs:enumeration value="HORIZONTAL"/>
            <xs:enumeration value="VERTICAL"/>
            <xs:enumeration value="BOTH"/>
            <xs:enumeration value="NONE"/>
        </xs:restriction>
    </xs:simpleType>

    <xs:simpleType name="constraintEntityOp">
        <xs:restriction base="xs:string">
            <xs:enumeration value="NONE"/>
            <xs:enumeration value="CREATE"/>
            <xs:enumeration value="READ"/>
            <xs:enumeration value="UPDATE"/>
            <xs:enumeration value="DELETE"/>
        </xs:restriction>
    </xs:simpleType>

    <xs:simpleType name="numberingType">
        <xs:restriction base="xs:string">
            <xs:enumeration value="NUMBER"/>
            <xs:enumeration value="UPPERCASE_LETTER"/>
            <xs:enumeration value="LOWERCASE_LETTER"/>
            <xs:enumeration value="UPPERCASE_ROMAN"/>
            <xs:enumeration value="LOWERCASE_ROMAN"/>
        </xs:restriction>
    </xs:simpleType>

    <xs:simpleType name="inputTypeEnum">
        <xs:restriction base="xs:string">
            <xs:enumeration value="button"/>
            <xs:enumeration value="checkbox"/>
            <xs:enumeration value="color"/>
            <xs:enumeration value="date"/>
            <xs:enumeration value="datetime-local"/>
            <xs:enumeration value="file"/>
            <xs:enumeration value="hidden"/>
            <xs:enumeration value="image"/>
            <xs:enumeration value="month"/>
            <xs:enumeration value="number"/>
            <xs:enumeration value="password"/>
            <xs:enumeration value="radio"/>
            <xs:enumeration value="range"/>
            <xs:enumeration value="reset"/>
            <xs:enumeration value="search"/>
            <xs:enumeration value="submit"/>
            <xs:enumeration value="tel"/>
            <xs:enumeration value="text"/>
            <xs:enumeration value="time"/>
            <xs:enumeration value="url"/>
            <xs:enumeration value="week"/>
        </xs:restriction>
    </xs:simpleType>

    <xs:simpleType name="importanceTypeEnum">
        <xs:restriction base="xs:string">
            <xs:enumeration value="AUTO"/>
            <xs:enumeration value="HIGH"/>
            <xs:enumeration value="LOW"/>
        </xs:restriction>
    </xs:simpleType>

    <xs:simpleType name="vaadinIconEnum">
        <xs:union>
            <xs:simpleType>
                <xs:restriction base="xs:string"/>
            </xs:simpleType>
            <xs:simpleType>
                <xs:restriction base="xs:string">
                    <xs:enumeration value="ABACUS"/>
                    <xs:enumeration value="ABSOLUTE_POSITION"/>
                    <xs:enumeration value="ACADEMY_CAP"/>
                    <xs:enumeration value="ACCESSIBILITY"/>
                    <xs:enumeration value="ACCORDION_MENU"/>
                    <xs:enumeration value="ADD_DOCK"/>
                    <xs:enumeration value="ADJUST"/>
                    <xs:enumeration value="ADOBE_FLASH"/>
                    <xs:enumeration value="AIRPLANE"/>
                    <xs:enumeration value="ALARM"/>
                    <xs:enumeration value="ALARM"/>
                    <xs:enumeration value="ALIGN_CENTER"/>
                    <xs:enumeration value="ALIGN_JUSTIFY"/>
                    <xs:enumeration value="ALIGN_LEFT"/>
                    <xs:enumeration value="ALIGN_RIGHT"/>
                    <xs:enumeration value="ALT_A"/>
                    <xs:enumeration value="ALT"/>
                    <xs:enumeration value="AMBULANCE"/>
                    <xs:enumeration value="ANCHOR"/>
                    <xs:enumeration value="ANGLE_DOUBLE_DOWN"/>
                    <xs:enumeration value="ANGLE_DOUBLE_LEFT"/>
                    <xs:enumeration value="ANGLE_DOUBLE_RIGHT"/>
                    <xs:enumeration value="ANGLE_DOUBLE_UP"/>
                    <xs:enumeration value="ANGLE_DOWN"/>
                    <xs:enumeration value="ANGLE_LEFT"/>
                    <xs:enumeration value="ANGLE_RIGHT"/>
                    <xs:enumeration value="ANGLE_UP"/>
                    <xs:enumeration value="ARCHIVE"/>
                    <xs:enumeration value="ARCHIVES"/>
                    <xs:enumeration value="AREA_SELECT"/>
                    <xs:enumeration value="ARROW_BACKWARD"/>
                    <xs:enumeration value="ARROW_CIRCLE_DOWN_O"/>
                    <xs:enumeration value="ARROW_CIRCLE_DOWN"/>
                    <xs:enumeration value="ARROW_CIRCLE_LEFT_O"/>
                    <xs:enumeration value="ARROW_CIRCLE_LEFT"/>
                    <xs:enumeration value="ARROW_CIRCLE_RIGHT_O"/>
                    <xs:enumeration value="ARROW_CIRCLE_RIGHT"/>
                    <xs:enumeration value="ARROW_CIRCLE_UP_O"/>
                    <xs:enumeration value="ARROW_CIRCLE_UP"/>
                    <xs:enumeration value="ARROW_DOWN"/>
                    <xs:enumeration value="ARROW_FORWARD"/>
                    <xs:enumeration value="ARROW_LEFT"/>
                    <xs:enumeration value="ARROW_LONG_DOWN"/>
                    <xs:enumeration value="ARROW_LONG_LEFT"/>
                    <xs:enumeration value="ARROW_RIGHT"/>
                    <xs:enumeration value="ARROW_UP"/>
                    <xs:enumeration value="ARROWS_CROSS"/>
                    <xs:enumeration value="ARROWS_LONG_H"/>
                    <xs:enumeration value="ARROWS_LONG_RIGHT"/>
                    <xs:enumeration value="ARROWS_LONG_UP"/>
                    <xs:enumeration value="ARROWS_LONG_V"/>
                    <xs:enumeration value="ARROWS"/>
                    <xs:enumeration value="ASTERISK"/>
                    <xs:enumeration value="AT"/>
                    <xs:enumeration value="AUTOMATION"/>
                    <xs:enumeration value="BACKSPACE_A"/>
                    <xs:enumeration value="BACKSPACE"/>
                    <xs:enumeration value="BACKWARDS"/>
                    <xs:enumeration value="BAN"/>
                    <xs:enumeration value="BAR_CHART_H"/>
                    <xs:enumeration value="BAR_CHART_V"/>
                    <xs:enumeration value="BAR_CHART"/>
                    <xs:enumeration value="BARCODE"/>
                    <xs:enumeration value="BED"/>
                    <xs:enumeration value="BELL_O"/>
                    <xs:enumeration value="BELL_SLASH_O"/>
                    <xs:enumeration value="BELL_SLASH"/>
                    <xs:enumeration value="BELL"/>
                    <xs:enumeration value="BOAT"/>
                    <xs:enumeration value="BOLD"/>
                    <xs:enumeration value="BOLT"/>
                    <xs:enumeration value="BOMB"/>
                    <xs:enumeration value="BOOK_DOLLAR"/>
                    <xs:enumeration value="BOOK_PERCENT"/>
                    <xs:enumeration value="BOOK"/>
                    <xs:enumeration value="BOOKMARK_O"/>
                    <xs:enumeration value="BOOKMARK"/>
                    <xs:enumeration value="BRIEFCASE"/>
                    <xs:enumeration value="BROWSER"/>
                    <xs:enumeration value="BUG_O"/>
                    <xs:enumeration value="BUG"/>
                    <xs:enumeration value="BUILDING_O"/>
                    <xs:enumeration value="BUILDING"/>
                    <xs:enumeration value="BULLETS"/>
                    <xs:enumeration value="BULLSEYE"/>
                    <xs:enumeration value="BUS"/>
                    <xs:enumeration value="BUTTON"/>
                    <xs:enumeration value="CALC_BOOK"/>
                    <xs:enumeration value="CALC"/>
                    <xs:enumeration value="CALENDAR_BRIEFCASE"/>
                    <xs:enumeration value="CALENDAR_CLOCK"/>
                    <xs:enumeration value="CALENDAR_ENVELOPE"/>
                    <xs:enumeration value="CALENDAR_O"/>
                    <xs:enumeration value="CALENDAR_USER"/>
                    <xs:enumeration value="CALENDAR"/>
                    <xs:enumeration value="CAMERA"/>
                    <xs:enumeration value="CAR"/>
                    <xs:enumeration value="CARET_DOWN"/>
                    <xs:enumeration value="CARET_LEFT"/>
                    <xs:enumeration value="CARET_RIGHT"/>
                    <xs:enumeration value="CARET_SQUARE_DOWN_O"/>
                    <xs:enumeration value="CARET_SQUARE_LEFT_O"/>
                    <xs:enumeration value="CARET_SQUARE_RIGHT_O"/>
                    <xs:enumeration value="CARET_SQUARE_UP_O"/>
                    <xs:enumeration value="CARET_UP"/>
                    <xs:enumeration value="CART_O"/>
                    <xs:enumeration value="CART"/>
                    <xs:enumeration value="CASH"/>
                    <xs:enumeration value="CHART_3D"/>
                    <xs:enumeration value="CHART_GRID"/>
                    <xs:enumeration value="CHART_LINE"/>
                    <xs:enumeration value="CHART_TIMELINE"/>
                    <xs:enumeration value="CHART"/>
                    <xs:enumeration value="CHAT"/>
                    <xs:enumeration value="CHECK_CIRCLE_O"/>
                    <xs:enumeration value="CHECK_CIRCLE"/>
                    <xs:enumeration value="CHECK_SQUARE_O"/>
                    <xs:enumeration value="CHECK_SQUARE"/>
                    <xs:enumeration value="CHECK"/>
                    <xs:enumeration value="CHEVRON_CIRCLE_DOWN_O"/>
                    <xs:enumeration value="CHEVRON_CIRCLE_DOWN"/>
                    <xs:enumeration value="CHEVRON_CIRCLE_LEFT_O"/>
                    <xs:enumeration value="CHEVRON_CIRCLE_LEFT"/>
                    <xs:enumeration value="CHEVRON_CIRCLE_RIGHT_O"/>
                    <xs:enumeration value="CHEVRON_CIRCLE_RIGHT"/>
                    <xs:enumeration value="CHEVRON_CIRCLE_UP_O"/>
                    <xs:enumeration value="CHEVRON_CIRCLE_UP"/>
                    <xs:enumeration value="CHEVRON_DOWN_SMALL"/>
                    <xs:enumeration value="CHEVRON_DOWN"/>
                    <xs:enumeration value="CHEVRON_LEFT_SMALL"/>
                    <xs:enumeration value="CHEVRON_LEFT"/>
                    <xs:enumeration value="CHEVRON_RIGHT_SMALL"/>
                    <xs:enumeration value="CHEVRON_RIGHT"/>
                    <xs:enumeration value="CHEVRON_UP_SMALL"/>
                    <xs:enumeration value="CHEVRON_UP"/>
                    <xs:enumeration value="CHILD"/>
                    <xs:enumeration value="CIRCLE_THIN"/>
                    <xs:enumeration value="CIRCLE"/>
                    <xs:enumeration value="CLIPBOARD_CHECK"/>
                    <xs:enumeration value="CLIPBOARD_CROSS"/>
                    <xs:enumeration value="CLIPBOARD_HEART"/>
                    <xs:enumeration value="CLIPBOARD_PULSE"/>
                    <xs:enumeration value="CLIPBOARD_TEXT"/>
                    <xs:enumeration value="CLIPBOARD_USER"/>
                    <xs:enumeration value="CLIPBOARD"/>
                    <xs:enumeration value="CLOCK"/>
                    <xs:enumeration value="CLOSE_BIG"/>
                    <xs:enumeration value="CLOSE_CIRCLE_O"/>
                    <xs:enumeration value="CLOSE_CIRCLE"/>
                    <xs:enumeration value="CLOSE_SMALL"/>
                    <xs:enumeration value="CLOSE"/>
                    <xs:enumeration value="CLOUD_DOWNLOAD_O"/>
                    <xs:enumeration value="CLOUD_DOWNLOAD"/>
                    <xs:enumeration value="CLOUD_O"/>
                    <xs:enumeration value="CLOUD_UPLOAD_O"/>
                    <xs:enumeration value="CLOUD_UPLOAD"/>
                    <xs:enumeration value="CLOUD"/>
                    <xs:enumeration value="CLUSTER"/>
                    <xs:enumeration value="CODE"/>
                    <xs:enumeration value="COFFEE"/>
                    <xs:enumeration value="COG_O"/>
                    <xs:enumeration value="COG"/>
                    <xs:enumeration value="COGS"/>
                    <xs:enumeration value="COIN_PILES"/>
                    <xs:enumeration value="COINS"/>
                    <xs:enumeration value="COMBOBOX"/>
                    <xs:enumeration value="COMMENT_ELLIPSIS_O"/>
                    <xs:enumeration value="COMMENT_ELLIPSIS"/>
                    <xs:enumeration value="COMMENT_O"/>
                    <xs:enumeration value="COMMENT"/>
                    <xs:enumeration value="COMMENTS_O"/>
                    <xs:enumeration value="COMMENTS"/>
                    <xs:enumeration value="COMPILE"/>
                    <xs:enumeration value="COMPRESS_SQUARE"/>
                    <xs:enumeration value="COMPRESS"/>
                    <xs:enumeration value="CONNECT_O"/>
                    <xs:enumeration value="CONNECT"/>
                    <xs:enumeration value="CONTROLLER"/>
                    <xs:enumeration value="COPY_O"/>
                    <xs:enumeration value="COPY"/>
                    <xs:enumeration value="COPYRIGHT"/>
                    <xs:enumeration value="CORNER_LOWER_LEFT"/>
                    <xs:enumeration value="CORNER_LOWER_RIGHT"/>
                    <xs:enumeration value="CORNER_UPPER_LEFT"/>
                    <xs:enumeration value="CORNER_UPPER_RIGHT"/>
                    <xs:enumeration value="CREDIT_CARD"/>
                    <xs:enumeration value="CROP"/>
                    <xs:enumeration value="CROSS_CUTLERY"/>
                    <xs:enumeration value="CROSSHAIRS"/>
                    <xs:enumeration value="CSS"/>
                    <xs:enumeration value="CTRL_A"/>
                    <xs:enumeration value="CTRL"/>
                    <xs:enumeration value="CUBE"/>
                    <xs:enumeration value="CUBES"/>
                    <xs:enumeration value="CURLY_BRACKETS"/>
                    <xs:enumeration value="CURSOR_O"/>
                    <xs:enumeration value="CURSOR"/>
                    <xs:enumeration value="CUTLERY"/>
                    <xs:enumeration value="DASHBOARD"/>
                    <xs:enumeration value="DATABASE"/>
                    <xs:enumeration value="DATE_INPUT"/>
                    <xs:enumeration value="DEINDENT"/>
                    <xs:enumeration value="DEL_A"/>
                    <xs:enumeration value="DEL"/>
                    <xs:enumeration value="DENTAL_CHAIR"/>
                    <xs:enumeration value="DESKTOP"/>
                    <xs:enumeration value="DIAMOND_O"/>
                    <xs:enumeration value="DIAMOND"/>
                    <xs:enumeration value="DIPLOMA_SCROLL"/>
                    <xs:enumeration value="DIPLOMA"/>
                    <xs:enumeration value="DISC"/>
                    <xs:enumeration value="DOCTOR_BRIEFCASE"/>
                    <xs:enumeration value="DOCTOR"/>
                    <xs:enumeration value="DOLLAR"/>
                    <xs:enumeration value="DOT_CIRCLE"/>
                    <xs:enumeration value="DOWNLOAD_ALT"/>
                    <xs:enumeration value="DOWNLOAD"/>
                    <xs:enumeration value="DROP"/>
                    <xs:enumeration value="EDIT"/>
                    <xs:enumeration value="EJECT"/>
                    <xs:enumeration value="ELASTIC"/>
                    <xs:enumeration value="ELLIPSIS_CIRCLE_O"/>
                    <xs:enumeration value="ELLIPSIS_CIRCLE"/>
                    <xs:enumeration value="ELLIPSIS_DOTS_H"/>
                    <xs:enumeration value="ELLIPSIS_DOTS_V"/>
                    <xs:enumeration value="ELLIPSIS_H"/>
                    <xs:enumeration value="ELLIPSIS_V"/>
                    <xs:enumeration value="ENTER_ARROW"/>
                    <xs:enumeration value="ENTER"/>
                    <xs:enumeration value="ENVELOPE_O"/>
                    <xs:enumeration value="ENVELOPE_OPEN_O"/>
                    <xs:enumeration value="ENVELOPE_OPEN"/>
                    <xs:enumeration value="ENVELOPE"/>
                    <xs:enumeration value="ENVELOPES_O"/>
                    <xs:enumeration value="ENVELOPES"/>
                    <xs:enumeration value="ERASER"/>
                    <xs:enumeration value="ESC_A"/>
                    <xs:enumeration value="ESC"/>
                    <xs:enumeration value="EURO"/>
                    <xs:enumeration value="EXCHANGE"/>
                    <xs:enumeration value="EXCLAMATION_CIRCLE_O"/>
                    <xs:enumeration value="EXCLAMATION_CIRCLE"/>
                    <xs:enumeration value="EXCLAMATION"/>
                    <xs:enumeration value="EXIT_O"/>
                    <xs:enumeration value="EXIT"/>
                    <xs:enumeration value="EXPAND_FULL"/>
                    <xs:enumeration value="EXPAND_SQUARE"/>
                    <xs:enumeration value="EXPAND"/>
                    <xs:enumeration value="EXTERNAL_BROWSER"/>
                    <xs:enumeration value="EXTERNAL_LINK"/>
                    <xs:enumeration value="EYE_SLASH"/>
                    <xs:enumeration value="EYE"/>
                    <xs:enumeration value="EYEDROPPER"/>
                    <xs:enumeration value="FACEBOOK_SQUARE"/>
                    <xs:enumeration value="FACEBOOK"/>
                    <xs:enumeration value="FACTORY"/>
                    <xs:enumeration value="FAMILY"/>
                    <xs:enumeration value="FAST_BACKWARD"/>
                    <xs:enumeration value="FAST_FORWARD"/>
                    <xs:enumeration value="FEMALE"/>
                    <xs:enumeration value="FILE_ADD"/>
                    <xs:enumeration value="FILE_CODE"/>
                    <xs:enumeration value="FILE_FONT"/>
                    <xs:enumeration value="FILE_MOVIE"/>
                    <xs:enumeration value="FILE_O"/>
                    <xs:enumeration value="FILE_PICTURE"/>
                    <xs:enumeration value="FILE_PRESENTATION"/>
                    <xs:enumeration value="FILE_PROCESS"/>
                    <xs:enumeration value="FILE_REFRESH"/>
                    <xs:enumeration value="FILE_REMOVE"/>
                    <xs:enumeration value="FILE_SEARCH"/>
                    <xs:enumeration value="FILE_SOUND"/>
                    <xs:enumeration value="FILE_START"/>
                    <xs:enumeration value="FILE_TABLE"/>
                    <xs:enumeration value="FILE_TEXT_O"/>
                    <xs:enumeration value="FILE_TEXT"/>
                    <xs:enumeration value="FILE_TREE_SMALL"/>
                    <xs:enumeration value="FILE_TREE_SUB"/>
                    <xs:enumeration value="FILE_TREE"/>
                    <xs:enumeration value="FILE_ZIP"/>
                    <xs:enumeration value="FILE"/>
                    <xs:enumeration value="FILL"/>
                    <xs:enumeration value="FILM"/>
                    <xs:enumeration value="FILTER"/>
                    <xs:enumeration value="FIRE"/>
                    <xs:enumeration value="FLAG_CHECKERED"/>
                    <xs:enumeration value="FLAG_O"/>
                    <xs:enumeration value="FLAG"/>
                    <xs:enumeration value="FLASH"/>
                    <xs:enumeration value="FLASK"/>
                    <xs:enumeration value="FLIGHT_LANDING"/>
                    <xs:enumeration value="FLIGHT_TAKEOFF"/>
                    <xs:enumeration value="FLIP_H"/>
                    <xs:enumeration value="FLIP_V"/>
                    <xs:enumeration value="FOLDER_ADD"/>
                    <xs:enumeration value="FOLDER_O"/>
                    <xs:enumeration value="FOLDER_OPEN_O"/>
                    <xs:enumeration value="FOLDER_OPEN"/>
                    <xs:enumeration value="FOLDER_REMOVE"/>
                    <xs:enumeration value="FOLDER_SEARCH"/>
                    <xs:enumeration value="FOLDER"/>
                    <xs:enumeration value="FONT"/>
                    <xs:enumeration value="FORM"/>
                    <xs:enumeration value="FORWARD"/>
                    <xs:enumeration value="FROWN_O"/>
                    <xs:enumeration value="FUNCTION"/>
                    <xs:enumeration value="FUNNEL"/>
                    <xs:enumeration value="GAMEPAD"/>
                    <xs:enumeration value="GAVEL"/>
                    <xs:enumeration value="GIFT"/>
                    <xs:enumeration value="GLASS"/>
                    <xs:enumeration value="GLASSES"/>
                    <xs:enumeration value="GLOBE_WIRE"/>
                    <xs:enumeration value="GLOBE"/>
                    <xs:enumeration value="GOLF"/>
                    <xs:enumeration value="GOOGLE_PLUS_SQUARE"/>
                    <xs:enumeration value="GOOGLE_PLUS"/>
                    <xs:enumeration value="GRAB"/>
                    <xs:enumeration value="GRID_BEVEL"/>
                    <xs:enumeration value="GRID_BIG_O"/>
                    <xs:enumeration value="GRID_BIG"/>
                    <xs:enumeration value="GRID_H"/>
                    <xs:enumeration value="GRID_SMALL_O"/>
                    <xs:enumeration value="GRID_SMALL"/>
                    <xs:enumeration value="GRID_V"/>
                    <xs:enumeration value="GRID"/>
                    <xs:enumeration value="GROUP"/>
                    <xs:enumeration value="HAMMER"/>
                    <xs:enumeration value="HAND"/>
                    <xs:enumeration value="HANDLE_CORNER"/>
                    <xs:enumeration value="HANDS_UP"/>
                    <xs:enumeration value="HANDSHAKE"/>
                    <xs:enumeration value="HARDDRIVE_O"/>
                    <xs:enumeration value="HARDDRIVE"/>
                    <xs:enumeration value="HASH"/>
                    <xs:enumeration value="HEADER"/>
                    <xs:enumeration value="HEADPHONES"/>
                    <xs:enumeration value="HEADSET"/>
                    <xs:enumeration value="HEALTH_CARD"/>
                    <xs:enumeration value="HEART_O"/>
                    <xs:enumeration value="HEART"/>
                    <xs:enumeration value="HOME_O"/>
                    <xs:enumeration value="HOME"/>
                    <xs:enumeration value="HOSPITAL"/>
                    <xs:enumeration value="HOURGLASS_EMPTY"/>
                    <xs:enumeration value="HOURGLASS_END"/>
                    <xs:enumeration value="HOURGLASS_START"/>
                    <xs:enumeration value="HOURGLASS"/>
                    <xs:enumeration value="INBOX"/>
                    <xs:enumeration value="INDENT"/>
                    <xs:enumeration value="INFO_CIRCLE_O"/>
                    <xs:enumeration value="INFO_CIRCLE"/>
                    <xs:enumeration value="INFO"/>
                    <xs:enumeration value="INPUT"/>
                    <xs:enumeration value="INSERT"/>
                    <xs:enumeration value="INSTITUTION"/>
                    <xs:enumeration value="INVOICE"/>
                    <xs:enumeration value="ITALIC"/>
                    <xs:enumeration value="KEY_O"/>
                    <xs:enumeration value="KEY"/>
                    <xs:enumeration value="KEYBOARD_O"/>
                    <xs:enumeration value="KEYBOARD"/>
                    <xs:enumeration value="LAPTOP"/>
                    <xs:enumeration value="LAYOUT"/>
                    <xs:enumeration value="LEVEL_DOWN_BOLD"/>
                    <xs:enumeration value="LEVEL_DOWN"/>
                    <xs:enumeration value="LEVEL_LEFT_BOLD"/>
                    <xs:enumeration value="LEVEL_LEFT"/>
                    <xs:enumeration value="LEVEL_RIGHT_BOLD"/>
                    <xs:enumeration value="LEVEL_RIGHT"/>
                    <xs:enumeration value="LEVEL_UP_BOLD"/>
                    <xs:enumeration value="LEVEL_LEVEL_UPUP_BOLD"/>
                    <xs:enumeration value="LIFEBUOY"/>
                    <xs:enumeration value="LIGHTBULB"/>
                    <xs:enumeration value="LINE_BAR_CHART"/>
                    <xs:enumeration value="LINE_CHART"/>
                    <xs:enumeration value="LINE_H"/>
                    <xs:enumeration value="LINE_V"/>
                    <xs:enumeration value="LINES_LIST"/>
                    <xs:enumeration value="LINES"/>
                    <xs:enumeration value="LINK"/>
                    <xs:enumeration value="LIST_OL"/>
                    <xs:enumeration value="LIST_SELECT"/>
                    <xs:enumeration value="LIST_UL"/>
                    <xs:enumeration value="LIST"/>
                    <xs:enumeration value="LOCATION_ARROW_CIRCLE_O"/>
                    <xs:enumeration value="LOCATION_ARROW_CIRCLE"/>
                    <xs:enumeration value="LOCATION_ARROW"/>
                    <xs:enumeration value="LOCK"/>
                    <xs:enumeration value="MAGIC"/>
                    <xs:enumeration value="MAGNET"/>
                    <xs:enumeration value="MAILBOX"/>
                    <xs:enumeration value="MALE"/>
                    <xs:enumeration value="MAP_MARKER"/>
                    <xs:enumeration value="MARGIN_BOTTOM"/>
                    <xs:enumeration value="MARGIN_LEFT"/>
                    <xs:enumeration value="MARGIN_RIGHT"/>
                    <xs:enumeration value="MARGIN_TOP"/>
                    <xs:enumeration value="MARGIN"/>
                    <xs:enumeration value="MEDAL"/>
                    <xs:enumeration value="MEGAPHONE"/>
                    <xs:enumeration value="MEH_O"/>
                    <xs:enumeration value="MENU"/>
                    <xs:enumeration value="MICROPHONE"/>
                    <xs:enumeration value="MINUS_CIRCLE_O"/>
                    <xs:enumeration value="MINUS_CIRCLE"/>
                    <xs:enumeration value="MINUS_SQUARE_O"/>
                    <xs:enumeration value="MINUS"/>
                    <xs:enumeration value="MOBILE_BROWSER"/>
                    <xs:enumeration value="MOBILE_RETRO"/>
                    <xs:enumeration value="MOBILE"/>
                    <xs:enumeration value="MODAL_LIST"/>
                    <xs:enumeration value="MODAL"/>
                    <xs:enumeration value="MONEY_DEPOSIT"/>
                    <xs:enumeration value="MONEY_EXCHANGE"/>
                    <xs:enumeration value="MONEY_WITHDRAW"/>
                    <xs:enumeration value="MONEY"/>
                    <xs:enumeration value="MOON_O"/>
                    <xs:enumeration value="MOON"/>
                    <xs:enumeration value="MORNING"/>
                    <xs:enumeration value="MOVIE"/>
                    <xs:enumeration value="MUSIC"/>
                    <xs:enumeration value="MUTE"/>
                    <xs:enumeration value="NATIVE_BUTTON"/>
                    <xs:enumeration value="NEWSPAPER"/>
                    <xs:enumeration value="NOTEBOOK"/>
                    <xs:enumeration value="NURSE"/>
                    <xs:enumeration value="OFFICE"/>
                    <xs:enumeration value="OPEN_BOOK"/>
                    <xs:enumeration value="OPTION_A"/>
                    <xs:enumeration value="OPTION"/>
                    <xs:enumeration value="OPTIONS"/>
                    <xs:enumeration value="ORIENTATION"/>
                    <xs:enumeration value="OUT"/>
                    <xs:enumeration value="OUTBOX"/>
                    <xs:enumeration value="PACKAGE"/>
                    <xs:enumeration value="PADDING_BOTTOM"/>
                    <xs:enumeration value="PADDING_LEFT"/>
                    <xs:enumeration value="PADDING_RIGHT"/>
                    <xs:enumeration value="PADDING_TOP"/>
                    <xs:enumeration value="PADDING"/>
                    <xs:enumeration value="PAINT_ROLL"/>
                    <xs:enumeration value="PAINTBRUSH"/>
                    <xs:enumeration value="PALETTE"/>
                    <xs:enumeration value="PANEL"/>
                    <xs:enumeration value="PAPERCLIP"/>
                    <xs:enumeration value="PAPERPLANE_O"/>
                    <xs:enumeration value="PAPERPLANE"/>
                    <xs:enumeration value="PARAGRAPH"/>
                    <xs:enumeration value="PASSWORD"/>
                    <xs:enumeration value="PASTE"/>
                    <xs:enumeration value="PAUSE"/>
                    <xs:enumeration value="PENCIL"/>
                    <xs:enumeration value="PHONE_LANDLINE"/>
                    <xs:enumeration value="PHONE"/>
                    <xs:enumeration value="PICTURE"/>
                    <xs:enumeration value="PIE_BAR_CHART"/>
                    <xs:enumeration value="PIE_CHART"/>
                    <xs:enumeration value="PIGGY_BANK_COIN"/>
                    <xs:enumeration value="PIGGY_BANK"/>
                    <xs:enumeration value="PILL"/>
                    <xs:enumeration value="PILLS"/>
                    <xs:enumeration value="PIN_POST"/>
                    <xs:enumeration value="PIN"/>
                    <xs:enumeration value="PLAY_CIRCLE_O"/>
                    <xs:enumeration value="PLAY_CIRCLE"/>
                    <xs:enumeration value="PLAY"/>
                    <xs:enumeration value="PLUG"/>
                    <xs:enumeration value="PLUS_CIRCLE_O"/>
                    <xs:enumeration value="PLUS_CIRCLE"/>
                    <xs:enumeration value="PLUS_MINUS"/>
                    <xs:enumeration value="PLUS_SQUARE_O"/>
                    <xs:enumeration value="PLUS"/>
                    <xs:enumeration value="POINTER"/>
                    <xs:enumeration value="POWER_OFF"/>
                    <xs:enumeration value="PRESENTATION"/>
                    <xs:enumeration value="PRINT"/>
                    <xs:enumeration value="PROGRESSBAR"/>
                    <xs:enumeration value="PUZZLE_PIECE"/>
                    <xs:enumeration value="PYRAMID_CHART"/>
                    <xs:enumeration value="QRCODE"/>
                    <xs:enumeration value="QUESTION_CIRCLE_O"/>
                    <xs:enumeration value="QUESTION_CIRCLE"/>
                    <xs:enumeration value="QUESTION"/>
                    <xs:enumeration value="QUOTE_LEFT"/>
                    <xs:enumeration value="QUOTE_RIGHT"/>
                    <xs:enumeration value="RANDOM"/>
                    <xs:enumeration value="RASTER_LOWER_LEFT"/>
                    <xs:enumeration value="RASTER"/>
                    <xs:enumeration value="RECORDS"/>
                    <xs:enumeration value="RECYCLE"/>
                    <xs:enumeration value="REFRESH"/>
                    <xs:enumeration value="REPLY_ALL"/>
                    <xs:enumeration value="REPLY"/>
                    <xs:enumeration value="RESIZE_H"/>
                    <xs:enumeration value="RESIZE_V"/>
                    <xs:enumeration value="RETWEET"/>
                    <xs:enumeration value="RHOMBUS"/>
                    <xs:enumeration value="ROAD_BRANCH"/>
                    <xs:enumeration value="ROAD_BRANCHES"/>
                    <xs:enumeration value="ROAD_SPLIT"/>
                    <xs:enumeration value="ROAD"/>
                    <xs:enumeration value="ROCKET"/>
                    <xs:enumeration value="ROTATE_LEFT"/>
                    <xs:enumeration value="ROTATE_RIGHT"/>
                    <xs:enumeration value="RSS_SQUARE"/>
                    <xs:enumeration value="RSS"/>
                    <xs:enumeration value="SAFE_LOCK"/>
                    <xs:enumeration value="SAFE"/>
                    <xs:enumeration value="SCALE_UNBALANCE"/>
                    <xs:enumeration value="SCALE"/>
                    <xs:enumeration value="SCATTER_CHART"/>
                    <xs:enumeration value="SCISSORS"/>
                    <xs:enumeration value="SCREWDRIVER"/>
                    <xs:enumeration value="SEARCH_MINUS"/>
                    <xs:enumeration value="SEARCH_PLUS"/>
                    <xs:enumeration value="SEARCH"/>
                    <xs:enumeration value="SELECT"/>
                    <xs:enumeration value="SERVER"/>
                    <xs:enumeration value="SHARE_SQUARE"/>
                    <xs:enumeration value="SHARE"/>
                    <xs:enumeration value="SHIELD"/>
                    <xs:enumeration value="SHIFT_ARROW"/>
                    <xs:enumeration value="SHIFT"/>
                    <xs:enumeration value="SHOP"/>
                    <xs:enumeration value="SIGN_IN_ALT"/>
                    <xs:enumeration value="SIGN_IN"/>
                    <xs:enumeration value="SIGN_OUT_ALT"/>
                    <xs:enumeration value="SIGN_OUT"/>
                    <xs:enumeration value="SIGNAL"/>
                    <xs:enumeration value="SITEMAP"/>
                    <xs:enumeration value="SLIDER"/>
                    <xs:enumeration value="SLIDERS"/>
                    <xs:enumeration value="SMILEY_O"/>
                    <xs:enumeration value="SORT"/>
                    <xs:enumeration value="SOUND_DISABLE"/>
                    <xs:enumeration value="SPARK_LINE"/>
                    <xs:enumeration value="SPECIALIST"/>
                    <xs:enumeration value="SPINNER_ARC"/>
                    <xs:enumeration value="SPINNER_THIRD"/>
                    <xs:enumeration value="SPINNER"/>
                    <xs:enumeration value="SPLINE_AREA_CHART"/>
                    <xs:enumeration value="SPLINE_CHART"/>
                    <xs:enumeration value="SPLIT_H"/>
                    <xs:enumeration value="SPLIT_V"/>
                    <xs:enumeration value="SPLIT"/>
                    <xs:enumeration value="SPOON"/>
                    <xs:enumeration value="SQUARE_SHADOW"/>
                    <xs:enumeration value="STAR_HALF_LEFT_O"/>
                    <xs:enumeration value="STAR_HALF_LEFT"/>
                    <xs:enumeration value="STAR_HALF_RIGHT_O"/>
                    <xs:enumeration value="STAR_HALF_RIGHT"/>
                    <xs:enumeration value="STAR_O"/>
                    <xs:enumeration value="STAR"/>
                    <xs:enumeration value="START_COG"/>
                    <xs:enumeration value="STEP_BACKWARD"/>
                    <xs:enumeration value="STEP_FORWARD"/>
                    <xs:enumeration value="STETHOSCOPE"/>
                    <xs:enumeration value="STOCK"/>
                    <xs:enumeration value="STOP_COG"/>
                    <xs:enumeration value="STOP"/>
                    <xs:enumeration value="STOPWATCH"/>
                    <xs:enumeration value="STORAGE"/>
                    <xs:enumeration value="STRIKETHROUGH"/>
                    <xs:enumeration value="SUBSCRIPT"/>
                    <xs:enumeration value="SUITCASE"/>
                    <xs:enumeration value="SUN_DOWN"/>
                    <xs:enumeration value="SUN_O"/>
                    <xs:enumeration value="SUN_RISE"/>
                    <xs:enumeration value="SUPERSCRIPT"/>
                    <xs:enumeration value="SWORD"/>
                    <xs:enumeration value="TAB_A"/>
                    <xs:enumeration value="TAB"/>
                    <xs:enumeration value="TABLE"/>
                    <xs:enumeration value="TABLET"/>
                    <xs:enumeration value="TABS"/>
                    <xs:enumeration value="TAG"/>
                    <xs:enumeration value="TAGS"/>
                    <xs:enumeration value="TASKS"/>
                    <xs:enumeration value="TAXI"/>
                    <xs:enumeration value="TEETH"/>
                    <xs:enumeration value="TERMINAL"/>
                    <xs:enumeration value="TEXT_HEIGHT"/>
                    <xs:enumeration value="TEXT_INPUT"/>
                    <xs:enumeration value="TEXT_LABEL"/>
                    <xs:enumeration value="TEXT_WIDTH"/>
                    <xs:enumeration value="THIN_SQUARE"/>
                    <xs:enumeration value="THUMBS_DOWN_O"/>
                    <xs:enumeration value="THUMBS_DOWN"/>
                    <xs:enumeration value="THUMBS_UP_O"/>
                    <xs:enumeration value="THUMBS_UP"/>
                    <xs:enumeration value="TICKET"/>
                    <xs:enumeration value="TIME_BACKWARD"/>
                    <xs:enumeration value="TIME_FORWARD"/>
                    <xs:enumeration value="TIMER"/>
                    <xs:enumeration value="TOOLBOX"/>
                    <xs:enumeration value="TOOLS"/>
                    <xs:enumeration value="TOOTH"/>
                    <xs:enumeration value="TOUCH"/>
                    <xs:enumeration value="TRAIN"/>
                    <xs:enumeration value="TRASH"/>
                    <xs:enumeration value="TREE_TABLE"/>
                    <xs:enumeration value="TRENDING_DOWN"/>
                    <xs:enumeration value="TRENDING_UP"/>
                    <xs:enumeration value="TROPHY"/>
                    <xs:enumeration value="TRUCK"/>
                    <xs:enumeration value="TWIN_COL_SELECT"/>
                    <xs:enumeration value="TWITTER_SQUARE"/>
                    <xs:enumeration value="TWITTER"/>
                    <xs:enumeration value="UMBRELLA"/>
                    <xs:enumeration value="UNDERLINE"/>
                    <xs:enumeration value="UNLINK"/>
                    <xs:enumeration value="UNLOCK"/>
                    <xs:enumeration value="UPLOAD_ALT"/>
                    <xs:enumeration value="UPLOAD"/>
                    <xs:enumeration value="USER_CARD"/>
                    <xs:enumeration value="USER_CHECK"/>
                    <xs:enumeration value="USER_CLOCK"/>
                    <xs:enumeration value="USER_HEART"/>
                    <xs:enumeration value="USER_STAR"/>
                    <xs:enumeration value="USER"/>
                    <xs:enumeration value="USERS"/>
                    <xs:enumeration value="VAADIN_H"/>
                    <xs:enumeration value="VAADIN_V"/>
                    <xs:enumeration value="VIEWPORT"/>
                    <xs:enumeration value="VIMEO_SQUARE"/>
                    <xs:enumeration value="VIMEO"/>
                    <xs:enumeration value="VOLUME_DOWN"/>
                    <xs:enumeration value="VOLUME_OFF"/>
                    <xs:enumeration value="VOLUME_UP"/>
                    <xs:enumeration value="VOLUME"/>
                    <xs:enumeration value="WALLET"/>
                    <xs:enumeration value="WARNING"/>
                    <xs:enumeration value="WORKPLACE"/>
                    <xs:enumeration value="WRENCH"/>
                    <xs:enumeration value="YOUTUBE_SQUARE"/>
                    <xs:enumeration value="YOUTUBE"/>
                </xs:restriction>
            </xs:simpleType>
        </xs:union>
    </xs:simpleType>

    <xs:simpleType name="sandboxTypeEnum">
        <xs:union>
            <xs:simpleType>
                <xs:restriction base="xs:string"/>
            </xs:simpleType>
            <xs:simpleType>
                <xs:restriction base="xs:string">
                    <xs:enumeration value="RESTRICT_ALL"/>
                    <xs:enumeration value="ALLOW_FORMS"/>
                    <xs:enumeration value="ALLOW_MODALS"/>
                    <xs:enumeration value="ALLOW_ORIENTATION_LOCK"/>
                    <xs:enumeration value="ALLOW_POINTER_LOCK"/>
                    <xs:enumeration value="ALLOW_POPUPS"/>
                    <xs:enumeration value="ALLOW_POPUPS_TO_ESCAPE_SANDBOX"/>
                    <xs:enumeration value="ALLOW_PRESENTATION"/>
                    <xs:enumeration value="ALLOW_SAME_ORIGIN"/>
                    <xs:enumeration value="ALLOW_SCRIPTS"/>
                    <xs:enumeration value="ALLOW_STORAGE_ACCESS_BY_USER_ACTIVATION"/>
                    <xs:enumeration value="ALLOW_TOP_NAVIGATION"/>
                    <xs:enumeration value="ALLOW_TOP_NAVIGATION_BY_USER_ACTIVATION"/>
                </xs:restriction>
            </xs:simpleType>
        </xs:union>
    </xs:simpleType>

    <xs:simpleType name="gridDropMode">
        <xs:restriction base="xs:string">
            <xs:enumeration value="BETWEEN"/>
            <xs:enumeration value="ON_TOP"/>
            <xs:enumeration value="ON_TOP_OR_BETWEEN"/>
            <xs:enumeration value="ON_GRID"/>
        </xs:restriction>
    </xs:simpleType>

    <xs:simpleType name="gridSelectionMode">
        <xs:restriction base="xs:string">
            <xs:enumeration value="SINGLE"/>
            <xs:enumeration value="MULTI"/>
            <xs:enumeration value="NONE"/>
        </xs:restriction>
    </xs:simpleType>

    <xs:simpleType name="gridColumnRendering">
        <xs:restriction base="xs:string">
            <xs:enumeration value="EAGER"/>
            <xs:enumeration value="LAZY"/>
        </xs:restriction>
    </xs:simpleType>

    <xs:simpleType name="gridMultiSortPriority">
        <xs:restriction base="xs:string">
            <xs:enumeration value="APPEND"/>
            <xs:enumeration value="PREPEND"/>
        </xs:restriction>
    </xs:simpleType>

    <xs:simpleType name="gridNestedNullBehaviorEnum">
        <xs:restriction base="xs:string">
            <xs:enumeration value="THROW"/>
            <xs:enumeration value="ALLOW_NULLS"/>
        </xs:restriction>
    </xs:simpleType>

    <xs:simpleType name="gridColumnTextAlignEnum">
        <xs:restriction base="xs:string">
            <xs:enumeration value="START"/>
            <xs:enumeration value="CENTER"/>
            <xs:enumeration value="END"/>
        </xs:restriction>
    </xs:simpleType>

    <xs:simpleType name="rangeInputOrientationEnum">
        <xs:restriction base="xs:string">
            <xs:enumeration value="HORIZONTAL"/>
            <xs:enumeration value="VERTICAL"/>
        </xs:restriction>
    </xs:simpleType>

    <xs:simpleType name="multiSelectComboBoxAutoExpandModeEnum">
        <xs:restriction base="xs:string">
            <xs:enumeration value="VERTICAL"/>
            <xs:enumeration value="HORIZONTAL"/>
            <xs:enumeration value="BOTH"/>
            <xs:enumeration value="NONE"/>
        </xs:restriction>
    </xs:simpleType>

    <xs:simpleType name="codeEditorTheme">
        <xs:restriction base="xs:string">
            <xs:enumeration value="AMBIANCE"/>
            <xs:enumeration value="CHAOS"/>
            <xs:enumeration value="CHROME"/>
            <xs:enumeration value="CLOUD_9_DAY"/>
            <xs:enumeration value="CLOUD_9_NIGHT"/>
            <xs:enumeration value="CLOUD_9_NIGHT_LOW_COLOR"/>
            <xs:enumeration value="CLOUDS"/>
            <xs:enumeration value="CLOUDS_MIDNIGHT"/>
            <xs:enumeration value="COBALT"/>
            <xs:enumeration value="CRIMSON_EDITOR"/>
            <xs:enumeration value="DAWN"/>
            <xs:enumeration value="DRACULA"/>
            <xs:enumeration value="DREAMWEAVER"/>
            <xs:enumeration value="ECLIPSE"/>
            <xs:enumeration value="GITHUB"/>
            <xs:enumeration value="GOB"/>
            <xs:enumeration value="GRUVBOX"/>
            <xs:enumeration value="GRUVBOX_DARK_HARD"/>
            <xs:enumeration value="GRUVBOX_LIGHT_HARD"/>
            <xs:enumeration value="IDLE_FINGERS"/>
            <xs:enumeration value="IPLASTIC"/>
            <xs:enumeration value="KATZENMILCH"/>
            <xs:enumeration value="KR_THEME"/>
            <xs:enumeration value="KUROIR"/>
            <xs:enumeration value="MERBIVORE"/>
            <xs:enumeration value="MERBIVORE_SOFT"/>
            <xs:enumeration value="MONO_INDUSTRIAL"/>
            <xs:enumeration value="MONOKAI"/>
            <xs:enumeration value="NORD_DARK"/>
            <xs:enumeration value="ONE_DARK"/>
            <xs:enumeration value="PASTEL_ON_DARK"/>
            <xs:enumeration value="SOLARIZED_DARK"/>
            <xs:enumeration value="SOLARIZED_LIGHT"/>
            <xs:enumeration value="SQLSERVER"/>
            <xs:enumeration value="TERMINAL"/>
            <xs:enumeration value="TEXTMATE"/>
            <xs:enumeration value="TOMORROW"/>
            <xs:enumeration value="TOMORROW_NIGHT"/>
            <xs:enumeration value="TOMORROW_NIGHT_BLUE"/>
            <xs:enumeration value="TOMORROW_NIGHT_BRIGHT"/>
            <xs:enumeration value="TOMORROW_NIGHT_EIGHTIES"/>
            <xs:enumeration value="TWILIGHT"/>
            <xs:enumeration value="VIBRANT_INK"/>
            <xs:enumeration value="XCODE"/>
        </xs:restriction>
    </xs:simpleType>

    <xs:simpleType name="codeEditorMode">
        <xs:restriction base="xs:string">
            <xs:enumeration value="ABAP"/>
            <xs:enumeration value="ABC"/>
            <xs:enumeration value="ACTIONSCRIPT"/>
            <xs:enumeration value="ADA"/>
            <xs:enumeration value="ALDA"/>
            <xs:enumeration value="APACHE_CONF"/>
            <xs:enumeration value="APEX"/>
            <xs:enumeration value="APPLESCRIPT"/>
            <xs:enumeration value="AQL"/>
            <xs:enumeration value="ASCIIDOC"/>
            <xs:enumeration value="ASL"/>
            <xs:enumeration value="ASSEMBLY_X_86"/>
            <xs:enumeration value="AUTOHOTKEY"/>
            <xs:enumeration value="BATCHFILE"/>
            <xs:enumeration value="BIBTEX"/>
            <xs:enumeration value="C_9_SEARCH"/>
            <xs:enumeration value="C_CPP"/>
            <xs:enumeration value="CIRRU"/>
            <xs:enumeration value="CLOJURE"/>
            <xs:enumeration value="COBOL"/>
            <xs:enumeration value="COFFEE"/>
            <xs:enumeration value="COLDFUSION"/>
            <xs:enumeration value="CRYSTAL"/>
            <xs:enumeration value="CSHARP"/>
            <xs:enumeration value="CSOUND_DOCUMENT"/>
            <xs:enumeration value="CSOUND_ORCHESTRA"/>
            <xs:enumeration value="CSOUND_SCORE"/>
            <xs:enumeration value="CSP"/>
            <xs:enumeration value="CSS"/>
            <xs:enumeration value="CURLY"/>
            <xs:enumeration value="D"/>
            <xs:enumeration value="DART"/>
            <xs:enumeration value="DIFF"/>
            <xs:enumeration value="DJANGO"/>
            <xs:enumeration value="DOCKERFILE"/>
            <xs:enumeration value="DOT"/>
            <xs:enumeration value="DROOLS"/>
            <xs:enumeration value="EDIFACT"/>
            <xs:enumeration value="EIFFEL"/>
            <xs:enumeration value="EJS"/>
            <xs:enumeration value="ELIXIR"/>
            <xs:enumeration value="ELM"/>
            <xs:enumeration value="ERLANG"/>
            <xs:enumeration value="FORTH"/>
            <xs:enumeration value="FORTRAN"/>
            <xs:enumeration value="FSHARP"/>
            <xs:enumeration value="FSL"/>
            <xs:enumeration value="FTL"/>
            <xs:enumeration value="GCODE"/>
            <xs:enumeration value="GHERKIN"/>
            <xs:enumeration value="GITIGNORE"/>
            <xs:enumeration value="GLSL"/>
            <xs:enumeration value="GOBSTONES"/>
            <xs:enumeration value="GOLANG"/>
            <xs:enumeration value="GRAPHQLSCHEMA"/>
            <xs:enumeration value="GROOVY"/>
            <xs:enumeration value="HAML"/>
            <xs:enumeration value="HANDLEBARS"/>
            <xs:enumeration value="HASKELL"/>
            <xs:enumeration value="HASKELL_CABAL"/>
            <xs:enumeration value="HAXE"/>
            <xs:enumeration value="HJSON"/>
            <xs:enumeration value="HTML"/>
            <xs:enumeration value="HTML_ELIXIR"/>
            <xs:enumeration value="HTML_RUBY"/>
            <xs:enumeration value="INI"/>
            <xs:enumeration value="IO"/>
            <xs:enumeration value="ION"/>
            <xs:enumeration value="JACK"/>
            <xs:enumeration value="JADE"/>
            <xs:enumeration value="JAVA"/>
            <xs:enumeration value="JAVASCRIPT"/>
            <xs:enumeration value="JEXL"/>
            <xs:enumeration value="JSON"/>
            <xs:enumeration value="JSON_5"/>
            <xs:enumeration value="JSONIQ"/>
            <xs:enumeration value="JSP"/>
            <xs:enumeration value="JSSM"/>
            <xs:enumeration value="JSX"/>
            <xs:enumeration value="JULIA"/>
            <xs:enumeration value="KOTLIN"/>
            <xs:enumeration value="LATEX"/>
            <xs:enumeration value="LATTE"/>
            <xs:enumeration value="LESS"/>
            <xs:enumeration value="LIQUID"/>
            <xs:enumeration value="LISP"/>
            <xs:enumeration value="LIVESCRIPT"/>
            <xs:enumeration value="LOGIQL"/>
            <xs:enumeration value="LOGTALK"/>
            <xs:enumeration value="LSL"/>
            <xs:enumeration value="LUA"/>
            <xs:enumeration value="LUAPAGE"/>
            <xs:enumeration value="LUCENE"/>
            <xs:enumeration value="MAKEFILE"/>
            <xs:enumeration value="MARKDOWN"/>
            <xs:enumeration value="MASK"/>
            <xs:enumeration value="MATLAB"/>
            <xs:enumeration value="MAZE"/>
            <xs:enumeration value="MEDIAWIKI"/>
            <xs:enumeration value="MEL"/>
            <xs:enumeration value="MIPS"/>
            <xs:enumeration value="MIXAL"/>
            <xs:enumeration value="MUSHCODE"/>
            <xs:enumeration value="MYSQL"/>
            <xs:enumeration value="NGINX"/>
            <xs:enumeration value="NIM"/>
            <xs:enumeration value="NIX"/>
            <xs:enumeration value="NSIS"/>
            <xs:enumeration value="NUNJUCKS"/>
            <xs:enumeration value="OBJECTIVEC"/>
            <xs:enumeration value="OCAML"/>
            <xs:enumeration value="PARTIQL"/>
            <xs:enumeration value="PASCAL"/>
            <xs:enumeration value="PERL"/>
            <xs:enumeration value="PGSQL"/>
            <xs:enumeration value="PHP"/>
            <xs:enumeration value="PHP_LARAVEL_BLADE"/>
            <xs:enumeration value="PIG"/>
            <xs:enumeration value="PLAIN_TEXT"/>
            <xs:enumeration value="PLSQL"/>
            <xs:enumeration value="POWERSHELL"/>
            <xs:enumeration value="PRAAT"/>
            <xs:enumeration value="PRISMA"/>
            <xs:enumeration value="PROLOG"/>
            <xs:enumeration value="PROPERTIES"/>
            <xs:enumeration value="PROTOBUF"/>
            <xs:enumeration value="PUPPET"/>
            <xs:enumeration value="PYTHON"/>
            <xs:enumeration value="QML"/>
            <xs:enumeration value="R"/>
            <xs:enumeration value="RAKU"/>
            <xs:enumeration value="RAZOR"/>
            <xs:enumeration value="RDOC"/>
            <xs:enumeration value="RED"/>
            <xs:enumeration value="REDSHIFT"/>
            <xs:enumeration value="RHTML"/>
            <xs:enumeration value="ROBOT"/>
            <xs:enumeration value="RST"/>
            <xs:enumeration value="RUBY"/>
            <xs:enumeration value="RUST"/>
            <xs:enumeration value="SAC"/>
            <xs:enumeration value="SASS"/>
            <xs:enumeration value="SCAD"/>
            <xs:enumeration value="SCALA"/>
            <xs:enumeration value="SCHEME"/>
            <xs:enumeration value="SCRYPT"/>
            <xs:enumeration value="SCSS"/>
            <xs:enumeration value="SH"/>
            <xs:enumeration value="SJS"/>
            <xs:enumeration value="SLIM"/>
            <xs:enumeration value="SMARTY"/>
            <xs:enumeration value="SMITHY"/>
            <xs:enumeration value="SNIPPETS"/>
            <xs:enumeration value="SOY_TEMPLATE"/>
            <xs:enumeration value="SPACE"/>
            <xs:enumeration value="SPARQL"/>
            <xs:enumeration value="SQL"/>
            <xs:enumeration value="SQLSERVER"/>
            <xs:enumeration value="STYLUS"/>
            <xs:enumeration value="SVG"/>
            <xs:enumeration value="SWIFT"/>
            <xs:enumeration value="TCL"/>
            <xs:enumeration value="TERRAFORM"/>
            <xs:enumeration value="TEX"/>
            <xs:enumeration value="TEXT"/>
            <xs:enumeration value="TEXTILE"/>
            <xs:enumeration value="TOML"/>
            <xs:enumeration value="TSX"/>
            <xs:enumeration value="TURTLE"/>
            <xs:enumeration value="TWIG"/>
            <xs:enumeration value="TYPESCRIPT"/>
            <xs:enumeration value="VALA"/>
            <xs:enumeration value="VBSCRIPT"/>
            <xs:enumeration value="VELOCITY"/>
            <xs:enumeration value="VERILOG"/>
            <xs:enumeration value="VHDL"/>
            <xs:enumeration value="VISUALFORCE"/>
            <xs:enumeration value="WOLLOK"/>
            <xs:enumeration value="XML"/>
            <xs:enumeration value="XQUERY"/>
            <xs:enumeration value="YAML"/>
            <xs:enumeration value="ZEEK"/>
        </xs:restriction>
    </xs:simpleType>

    <xs:simpleType name="fieldDatatypeEnum">
        <xs:union>
            <xs:simpleType>
                <xs:restriction base="xs:string"/>
            </xs:simpleType>
            <xs:simpleType>
                <xs:restriction base="xs:string">
                    <xs:enumeration value="date"/>
                    <xs:enumeration value="dateTime"/>
                    <xs:enumeration value="localDateTime"/>
                    <xs:enumeration value="string"/>
                    <xs:enumeration value="offsetTime"/>
                    <xs:enumeration value="float"/>
                    <xs:enumeration value="double"/>
                    <xs:enumeration value="byteArray"/>
                    <xs:enumeration value="uuid"/>
                    <xs:enumeration value="uri"/>
                    <xs:enumeration value="bigInteger"/>
                    <xs:enumeration value="long"/>
                    <xs:enumeration value="int"/>
                    <xs:enumeration value="short"/>
                    <xs:enumeration value="localTime"/>
                    <xs:enumeration value="boolean"/>
                    <xs:enumeration value="char"/>
                    <xs:enumeration value="offsetDateTime"/>
                    <xs:enumeration value="time"/>
                    <xs:enumeration value="localDate"/>
                    <xs:enumeration value="decimal"/>
                    <xs:enumeration value="fileRef"/>
                </xs:restriction>
            </xs:simpleType>
        </xs:union>
    </xs:simpleType>

    <xs:simpleType name="dateDatatypeEnum">
        <xs:union>
            <xs:simpleType>
                <xs:restriction base="xs:string"/>
            </xs:simpleType>
            <xs:simpleType>
                <xs:restriction base="xs:string">
                    <xs:enumeration value="date"/>
                    <xs:enumeration value="dateTime"/>
                    <xs:enumeration value="localDateTime"/>
                    <xs:enumeration value="offsetDateTime"/>
                    <xs:enumeration value="localDate"/>
                </xs:restriction>
            </xs:simpleType>
        </xs:union>
    </xs:simpleType>

    <xs:simpleType name="timeDatatypeEnum">
        <xs:union>
            <xs:simpleType>
                <xs:restriction base="xs:string"/>
            </xs:simpleType>
            <xs:simpleType>
                <xs:restriction base="xs:string">
                    <xs:enumeration value="offsetTime"/>
                    <xs:enumeration value="localTime"/>
                    <xs:enumeration value="time"/>
                </xs:restriction>
            </xs:simpleType>
        </xs:union>
    </xs:simpleType>

    <xs:simpleType name="dateTimeDatatypeEnum">
        <xs:union>
            <xs:simpleType>
                <xs:restriction base="xs:string"/>
            </xs:simpleType>
            <xs:simpleType>
                <xs:restriction base="xs:string">
                    <xs:enumeration value="date"/>
                    <xs:enumeration value="dateTime"/>
                    <xs:enumeration value="localDateTime"/>
                    <xs:enumeration value="offsetTime"/>
                    <xs:enumeration value="localTime"/>
                    <xs:enumeration value="offsetDateTime"/>
                    <xs:enumeration value="time"/>
                    <xs:enumeration value="localDate"/>
                </xs:restriction>
            </xs:simpleType>
        </xs:union>
    </xs:simpleType>

    <xs:simpleType name="actionTypeEnum">
        <xs:union>
            <xs:simpleType>
                <xs:restriction base="xs:string"/>
            </xs:simpleType>
            <xs:simpleType>
                <xs:restriction base="xs:string">
                    <xs:enumeration value="entity_clear"/>
                    <xs:enumeration value="entity_lookup"/>
                    <xs:enumeration value="entity_open"/>
                    <xs:enumeration value="entity_openComposition"/>
                    <xs:enumeration value="list_create"/>
                    <xs:enumeration value="list_edit"/>
                    <xs:enumeration value="list_remove"/>
                    <xs:enumeration value="list_add"/>
                    <xs:enumeration value="list_exclude"/>
                    <xs:enumeration value="list_read"/>
                    <xs:enumeration value="list_refresh"/>
                    <xs:enumeration value="detail_close"/>
                    <xs:enumeration value="detail_save"/>
                    <xs:enumeration value="detail_saveClose"/>
                    <xs:enumeration value="detail_discard"/>
                    <xs:enumeration value="detail_enableEditing"/>
                    <xs:enumeration value="lookup_discard"/>
                    <xs:enumeration value="lookup_select"/>
                    <xs:enumeration value="view_close"/>
                    <xs:enumeration value="value_clear"/>
                    <xs:enumeration value="list_itemTracking"/>
                    <xs:enumeration value="multi_value_select"/>
                </xs:restriction>
            </xs:simpleType>
        </xs:union>
    </xs:simpleType>

    <xs:simpleType name="autocompleteEnum">
        <xs:restriction base="xs:string">
            <xs:enumeration value="OFF"/>
            <xs:enumeration value="ON"/>
            <xs:enumeration value="NAME"/>
            <xs:enumeration value="HONORIFIC_PREFIX"/>
            <xs:enumeration value="GIVEN_NAME"/>
            <xs:enumeration value="ADDITIONAL_NAME"/>
            <xs:enumeration value="FAMILY_NAME"/>
            <xs:enumeration value="HONORIFIC_SUFFIX"/>
            <xs:enumeration value="NICKNAME"/>
            <xs:enumeration value="EMAIL"/>
            <xs:enumeration value="USERNAME"/>
            <xs:enumeration value="NEW_PASSWORD"/>
            <xs:enumeration value="CURRENT_PASSWORD"/>
            <xs:enumeration value="ORGANIZATION_TITLE"/>
            <xs:enumeration value="ORGANIZATION"/>
            <xs:enumeration value="STREET_ADDRESS"/>
            <xs:enumeration value="ADDRESS_LINE1"/>
            <xs:enumeration value="ADDRESS_LINE2"/>
            <xs:enumeration value="ADDRESS_LINE3"/>
            <xs:enumeration value="ADDRESS_LEVEL1"/>
            <xs:enumeration value="ADDRESS_LEVEL2"/>
            <xs:enumeration value="ADDRESS_LEVEL3"/>
            <xs:enumeration value="ADDRESS_LEVEL4"/>
            <xs:enumeration value="COUNTRY"/>
            <xs:enumeration value="COUNTRY_NAME"/>
            <xs:enumeration value="POSTAL_CODE"/>
            <xs:enumeration value="CC_NAME"/>
            <xs:enumeration value="CC_GIVEN_NAME"/>
            <xs:enumeration value="CC_ADDITIONAL_NAME"/>
            <xs:enumeration value="CC_FAMILY_NAME"/>
            <xs:enumeration value="CC_NUMBER"/>
            <xs:enumeration value="CC_EXP"/>
            <xs:enumeration value="CC_EXP_MONTH"/>
            <xs:enumeration value="CC_EXP_YEAR"/>
            <xs:enumeration value="CC_CSC"/>
            <xs:enumeration value="CC_TYPE"/>
            <xs:enumeration value="TRANSACTION_CURRENCY"/>
            <xs:enumeration value="TRANSACTION_AMOUNT"/>
            <xs:enumeration value="LANGUAGE"/>
            <xs:enumeration value="BDAY"/>
            <xs:enumeration value="BDAY_DAY"/>
            <xs:enumeration value="BDAY_MONTH"/>
            <xs:enumeration value="BDAY_YEAR"/>
            <xs:enumeration value="SEX"/>
            <xs:enumeration value="TEL"/>
            <xs:enumeration value="TEL_COUNTRY_CODE"/>
            <xs:enumeration value="TEL_NATIONAL"/>
            <xs:enumeration value="TEL_AREA_CODE"/>
            <xs:enumeration value="TEL_LOCAL"/>
            <xs:enumeration value="TEL_LOCAL_PREFIX"/>
            <xs:enumeration value="TEL_LOCAL_SUFFIX"/>
            <xs:enumeration value="TEL_EXTENSION"/>
            <xs:enumeration value="URL"/>
            <xs:enumeration value="PHOTO"/>
        </xs:restriction>
    </xs:simpleType>

    <xs:simpleType name="autocapitalizeEnum">
        <xs:restriction base="xs:string">
            <xs:enumeration value="NONE"/>
            <xs:enumeration value="SENTENCES"/>
            <xs:enumeration value="WORDS"/>
            <xs:enumeration value="CHARACTERS"/>
        </xs:restriction>
    </xs:simpleType>

    <xs:simpleType name="whiteSpaceEnum">
        <xs:restriction base="xs:string">
            <xs:enumeration value="NORMAL"/>
            <xs:enumeration value="NOWRAP"/>
            <xs:enumeration value="PRE"/>
            <xs:enumeration value="PRE_WRAP"/>
            <xs:enumeration value="PRE_LINE"/>
            <xs:enumeration value="BREAK_SPACES"/>
            <xs:enumeration value="INHERIT"/>
            <xs:enumeration value="INITIAL"/>
        </xs:restriction>
    </xs:simpleType>

    <xs:simpleType name="anchorTarget">
        <xs:restriction base="xs:string">
            <xs:enumeration value="DEFAULT"/>
            <xs:enumeration value="SELF"/>
            <xs:enumeration value="BLANK"/>
            <xs:enumeration value="PARENT"/>
            <xs:enumeration value="TOP"/>
        </xs:restriction>
    </xs:simpleType>

    <xs:simpleType name="valueChangeModeEnum">
        <xs:restriction base="xs:string">
            <xs:enumeration value="EAGER"/>
            <xs:enumeration value="LAZY"/>
            <xs:enumeration value="TIMEOUT"/>
            <xs:enumeration value="ON_BLUR"/>
            <xs:enumeration value="ON_CHANGE"/>
        </xs:restriction>
    </xs:simpleType>

    <xs:simpleType name="alignEnum">
        <xs:restriction>
            <xs:enumeration value="START"/>
            <xs:enumeration value="END"/>
            <xs:enumeration value="CENTER"/>
            <xs:enumeration value="STRETCH"/>
            <xs:enumeration value="BASELINE"/>
            <xs:enumeration value="AUTO"/>
        </xs:restriction>
    </xs:simpleType>

    <xs:simpleType name="justifyContentModeEnum">
        <xs:restriction>
            <xs:enumeration value="START"/>
            <xs:enumeration value="END"/>
            <xs:enumeration value="CENTER"/>
            <xs:enumeration value="BETWEEN"/>
            <xs:enumeration value="AROUND"/>
            <xs:enumeration value="EVENLY"/>
        </xs:restriction>
    </xs:simpleType>

    <xs:simpleType name="contentAlignmentEnum">
        <xs:restriction>
            <xs:enumeration value="START"/>
            <xs:enumeration value="END"/>
            <xs:enumeration value="CENTER"/>
            <xs:enumeration value="STRETCH"/>
            <xs:enumeration value="SPACE_BETWEEN"/>
            <xs:enumeration value="SPACE_AROUND"/>
        </xs:restriction>
    </xs:simpleType>

    <xs:simpleType name="flexDirectionEnum">
        <xs:restriction>
            <xs:enumeration value="ROW"/>
            <xs:enumeration value="ROW_REVERSE"/>
            <xs:enumeration value="COLUMN"/>
            <xs:enumeration value="COLUMN_REVERSE"/>
        </xs:restriction>
    </xs:simpleType>

    <xs:simpleType name="flexWrapEnum">
        <xs:restriction>
            <xs:enumeration value="NOWRAP"/>
            <xs:enumeration value="WRAP"/>
            <xs:enumeration value="WRAP_REVERSE"/>
        </xs:restriction>
    </xs:simpleType>

    <xs:simpleType name="uploadReceiverEnum">
        <xs:restriction>
            <xs:enumeration value="MEMORY_BUFFER"/>
            <xs:enumeration value="MULTI_FILE_MEMORY_BUFFER"/>
            <xs:enumeration value="FILE_TEMPORARY_STORAGE_BUFFER"/>
            <xs:enumeration value="MULTI_FILE_TEMPORARY_STORAGE_BUFFER"/>
        </xs:restriction>
    </xs:simpleType>

    <xs:simpleType name="labelPositionType">
        <xs:restriction>
            <xs:enumeration value="ASIDE"/>
            <xs:enumeration value="TOP"/>
        </xs:restriction>
    </xs:simpleType>

    <xs:simpleType name="formLabelsPosition">
        <xs:restriction>
            <xs:enumeration value="ASIDE"/>
            <xs:enumeration value="TOP"/>
        </xs:restriction>
    </xs:simpleType>

    <xs:simpleType name="tooltipPosition">
        <xs:restriction>
            <xs:enumeration value="TOP_START"/>
            <xs:enumeration value="TOP"/>
            <xs:enumeration value="TOP_END"/>
            <xs:enumeration value="BOTTOM_START"/>
            <xs:enumeration value="BOTTOM"/>
            <xs:enumeration value="BOTTOM_END"/>
            <xs:enumeration value="START_TOP"/>
            <xs:enumeration value="START"/>
            <xs:enumeration value="START_BOTTOM"/>
            <xs:enumeration value="END_TOP"/>
            <xs:enumeration value="END"/>
            <xs:enumeration value="END_BOTTOM"/>
        </xs:restriction>
    </xs:simpleType>

    <xs:simpleType name="boxSizingType">
        <xs:restriction>
            <xs:enumeration value="CONTENT_BOX"/>
            <xs:enumeration value="BORDER_BOX"/>
            <xs:enumeration value="UNDEFINED"/>
        </xs:restriction>
    </xs:simpleType>

    <xs:simpleType name="aggregationType">
        <xs:restriction base="xs:string">
            <xs:enumeration value="SUM"/>
            <xs:enumeration value="COUNT"/>
            <xs:enumeration value="AVG"/>
            <xs:enumeration value="MIN"/>
            <xs:enumeration value="MAX"/>
        </xs:restriction>
    </xs:simpleType>

    <xs:simpleType name="aggregationPosition">
        <xs:restriction base="xs:string">
            <xs:enumeration value="TOP"/>
            <xs:enumeration value="BOTTOM"/>
        </xs:restriction>
    </xs:simpleType>

    <xs:simpleType name="componentSize">
        <xs:union>
            <xs:simpleType>
                <xs:restriction base="xs:string"/>
            </xs:simpleType>
            <xs:simpleType>
                <xs:restriction base="xs:string">
                    <xs:enumeration value="100%"/>
                </xs:restriction>
            </xs:simpleType>
        </xs:union>
    </xs:simpleType>

    <xs:simpleType name="resourceString">
        <xs:union>
            <xs:simpleType>
                <xs:restriction base="xs:string"/>
            </xs:simpleType>
            <xs:simpleType>
                <xs:restriction base="xs:string">
                    <xs:enumeration value="msg://"/>
                </xs:restriction>
            </xs:simpleType>
        </xs:union>
    </xs:simpleType>

    <xs:simpleType name="orientationType">
        <xs:restriction>
            <xs:enumeration value="HORIZONTAL"/>
            <xs:enumeration value="VERTICAL"/>
        </xs:restriction>
    </xs:simpleType>

    <xs:attributeGroup name="columnsLoadType">
        <xs:attribute name="includeAll" type="xs:boolean"/>
        <xs:attribute name="exclude" type="xs:string"/>
    </xs:attributeGroup>

    <xs:simpleType name="shortcutCombination">
        <xs:union>
            <xs:simpleType>
                <xs:restriction base="xs:string"/>
            </xs:simpleType>
            <xs:simpleType>
                <xs:restriction base="xs:string">
                    <xs:enumeration value="${SAVE_SHORTCUT}"/>
                    <xs:enumeration value="${CLOSE_SHORTCUT}"/>
                    <xs:enumeration value="${GRID_CREATE_SHORTCUT}"/>
                    <xs:enumeration value="${GRID_ADD_SHORTCUT}"/>
                    <xs:enumeration value="${GRID_EDIT_SHORTCUT}"/>
                    <xs:enumeration value="${GRID_READ_SHORTCUT}"/>
                    <xs:enumeration value="${GRID_REMOVE_SHORTCUT}"/>
                    <xs:enumeration value="${PICKER_LOOKUP_SHORTCUT}"/>
                    <xs:enumeration value="${PICKER_OPEN_SHORTCUT}"/>
                    <xs:enumeration value="${PICKER_CLEAR_SHORTCUT}"/>
                </xs:restriction>
            </xs:simpleType>
        </xs:union>
    </xs:simpleType>

    <xs:simpleType name="actionVariant">
        <xs:union>
            <xs:simpleType>
                <xs:restriction base="xs:string">
                    <xs:enumeration value="DEFAULT"/>
                    <xs:enumeration value="PRIMARY"/>
                    <xs:enumeration value="DANGER"/>
                    <xs:enumeration value="SUCCESS"/>
                </xs:restriction>
            </xs:simpleType>
        </xs:union>
    </xs:simpleType>

    <xs:complexType name="baseValidatorType">
        <xs:all>
            <xs:element name="notNull" minOccurs="0" type="messageValidatorType"/>
            <xs:element name="custom" minOccurs="0" type="customValidatorType"/>
        </xs:all>
    </xs:complexType>

    <xs:complexType name="messageValidatorType">
        <xs:attribute name="message" type="resourceString"/>
    </xs:complexType>

    <xs:complexType name="customValidatorType">
        <xs:complexContent>
            <xs:extension base="messageValidatorType">
                <xs:attribute name="bean" type="xs:string" use="required"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <xs:complexType name="collectionValidatorType">
        <xs:complexContent>
            <xs:extension base="baseValidatorType">
                <xs:all>
                    <xs:element name="size" minOccurs="0" type="sizeValidatorType"/>
                    <xs:element name="notEmpty" minOccurs="0" type="messageValidatorType"/>
                </xs:all>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <xs:complexType name="dateValidatorsType">
        <xs:complexContent>
            <xs:extension base="baseValidatorType">
                <xs:all>
                    <xs:element name="future" minOccurs="0" type="dateValidatorType"/>
                    <xs:element name="futureOrPresent" minOccurs="0" type="dateValidatorType"/>
                    <xs:element name="past" minOccurs="0" type="dateValidatorType"/>
                    <xs:element name="pastOrPresent" minOccurs="0" type="dateValidatorType"/>
                </xs:all>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <xs:complexType name="dateValidatorType">
        <xs:complexContent>
            <xs:extension base="messageValidatorType">
                <xs:attribute name="checkSeconds" type="xs:boolean"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <xs:complexType name="stringValidatorType">
        <xs:complexContent>
            <xs:extension base="collectionValidatorType">
                <xs:sequence>
                    <xs:element name="notBlank" minOccurs="0" type="messageValidatorType"/>
                    <xs:element name="regexp" minOccurs="0" type="regexpValidatorType"/>
                    <xs:element name="email" minOccurs="0" type="messageValidatorType"/>
                </xs:sequence>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <xs:complexType name="digitsValidatorType">
        <xs:complexContent>
            <xs:extension base="messageValidatorType">
                <xs:attribute name="integer" type="xs:int" use="required"/>
                <xs:attribute name="fraction" type="xs:int" use="required"/>
            </xs:extension>
        </xs:complexContent>

    </xs:complexType>

    <xs:complexType name="decimalMaxMinValidatorType">
        <xs:complexContent>
            <xs:extension base="messageValidatorType">
                <xs:attribute name="value" type="xs:string" use="required"/>
                <xs:attribute name="inclusive" type="xs:boolean"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <xs:complexType name="maxMinValidatorType">
        <xs:complexContent>
            <xs:extension base="messageValidatorType">
                <xs:attribute name="value" type="xs:string" use="required"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <xs:complexType name="sizeValidatorType">
        <xs:complexContent>
            <xs:extension base="messageValidatorType">
                <xs:attribute name="min" type="xs:integer"/>
                <xs:attribute name="max" type="xs:integer"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <xs:complexType name="regexpValidatorType">
        <xs:complexContent>
            <xs:extension base="messageValidatorType">
                <xs:attribute name="regexp" type="xs:string" use="required"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <xs:complexType name="bigDecimalFieldValidatorType">
        <xs:complexContent>
            <xs:extension base="baseValidatorType">
                <xs:sequence>
                    <xs:element name="digits" minOccurs="0" type="digitsValidatorType"/>
                    <xs:element name="decimalMin" minOccurs="0" type="decimalMaxMinValidatorType"/>
                    <xs:element name="decimalMax" minOccurs="0" type="decimalMaxMinValidatorType"/>
                    <xs:element name="negativeOrZero" minOccurs="0" type="messageValidatorType"/>
                    <xs:element name="negative" minOccurs="0" type="messageValidatorType"/>
                    <xs:element name="positiveOrZero" minOccurs="0" type="messageValidatorType"/>
                    <xs:element name="positive" minOccurs="0" type="messageValidatorType"/>
                    <xs:element name="max" minOccurs="0" type="maxMinValidatorType"/>
                    <xs:element name="min" minOccurs="0" type="maxMinValidatorType"/>
                </xs:sequence>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <xs:complexType name="numberFieldValidatorType">
        <xs:complexContent>
            <xs:extension base="baseValidatorType">
                <xs:sequence>
                    <xs:element name="doubleMin" minOccurs="0" type="decimalMaxMinValidatorType"/>
                    <xs:element name="doubleMax" minOccurs="0" type="decimalMaxMinValidatorType"/>
                    <xs:element name="negativeOrZero" minOccurs="0" type="messageValidatorType"/>
                    <xs:element name="negative" minOccurs="0" type="messageValidatorType"/>
                    <xs:element name="positiveOrZero" minOccurs="0" type="messageValidatorType"/>
                    <xs:element name="positive" minOccurs="0" type="messageValidatorType"/>
                </xs:sequence>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>


    <xs:complexType name="integerFieldValidatorType">
        <xs:complexContent>
            <xs:extension base="baseValidatorType">
                <xs:sequence>
                    <xs:element name="digits" minOccurs="0" type="digitsValidatorType"/>
                    <xs:element name="negativeOrZero" minOccurs="0" type="messageValidatorType"/>
                    <xs:element name="negative" minOccurs="0" type="messageValidatorType"/>
                    <xs:element name="positiveOrZero" minOccurs="0" type="messageValidatorType"/>
                    <xs:element name="positive" minOccurs="0" type="messageValidatorType"/>
                    <xs:element name="max" minOccurs="0" type="maxMinValidatorType"/>
                    <xs:element name="min" minOccurs="0" type="maxMinValidatorType"/>
                </xs:sequence>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <xs:complexType name="constraintValidatorType">
        <xs:complexContent>
            <xs:extension base="stringValidatorType">
                <xs:sequence>
                    <xs:element name="digits" minOccurs="0" type="digitsValidatorType"/>
                    <xs:element name="decimalMin" minOccurs="0" type="decimalMaxMinValidatorType"/>
                    <xs:element name="decimalMax" minOccurs="0" type="decimalMaxMinValidatorType"/>
                    <xs:element name="doubleMin" minOccurs="0" type="decimalMaxMinValidatorType"/>
                    <xs:element name="doubleMax" minOccurs="0" type="decimalMaxMinValidatorType"/>
                    <xs:element name="negativeOrZero" minOccurs="0" type="messageValidatorType"/>
                    <xs:element name="negative" minOccurs="0" type="messageValidatorType"/>
                    <xs:element name="positiveOrZero" minOccurs="0" type="messageValidatorType"/>
                    <xs:element name="positive" minOccurs="0" type="messageValidatorType"/>
                    <xs:element name="max" minOccurs="0" type="maxMinValidatorType"/>
                    <xs:element name="min" minOccurs="0" type="maxMinValidatorType"/>
                </xs:sequence>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <xs:complexType name="formatterType">
        <xs:choice minOccurs="0">
            <xs:element name="collection" minOccurs="0"/>
            <xs:element name="custom" minOccurs="0" type="customFormatterType"/>
            <xs:element name="date" minOccurs="0" type="dateFormatterType"/>
            <xs:element name="number" minOccurs="0" type="formattableFormatterType"/>
        </xs:choice>
    </xs:complexType>

    <xs:complexType name="customFormatterType">
        <xs:attribute name="bean" type="xs:string" use="required"/>
    </xs:complexType>

    <xs:complexType name="formattableFormatterType">
        <xs:attribute name="format" type="xs:string"/>
    </xs:complexType>

    <xs:complexType name="dateFormatterType">
        <xs:complexContent>
            <xs:extension base="formattableFormatterType">
                <xs:attribute name="type" type="formatterDateType"/>
                <xs:attribute name="useUserTimezone" type="xs:boolean"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <xs:simpleType name="formatterDateType">
        <xs:restriction base="xs:string">
            <xs:enumeration value="DATE"/>
            <xs:enumeration value="DATETIME"/>
        </xs:restriction>
    </xs:simpleType>

    <xs:simpleType name="groupFilterOperation">
        <xs:restriction base="xs:string">
            <xs:enumeration value="AND"/>
            <xs:enumeration value="OR"/>
        </xs:restriction>
    </xs:simpleType>

    <xs:simpleType name="propertyFilterOperation">
        <xs:restriction base="xs:string">
            <xs:enumeration value="EQUAL"/>
            <xs:enumeration value="NOT_EQUAL"/>
            <xs:enumeration value="GREATER"/>
            <xs:enumeration value="GREATER_OR_EQUAL"/>
            <xs:enumeration value="LESS"/>
            <xs:enumeration value="LESS_OR_EQUAL"/>
            <xs:enumeration value="CONTAINS"/>
            <xs:enumeration value="NOT_CONTAINS"/>
            <xs:enumeration value="STARTS_WITH"/>
            <xs:enumeration value="ENDS_WITH"/>
            <xs:enumeration value="IS_SET"/>
            <xs:enumeration value="IN_LIST"/>
            <xs:enumeration value="NOT_IN_LIST"/>
            <xs:enumeration value="IN_INTERVAL"/>
            <xs:enumeration value="IS_COLLECTION_EMPTY"/>
            <xs:enumeration value="MEMBER_OF_COLLECTION"/>
            <xs:enumeration value="NOT_MEMBER_OF_COLLECTION"/>
        </xs:restriction>
    </xs:simpleType>

    <!-- ThemeNames-->
    <xs:simpleType name="progressBarThemeNames">
        <xs:union>
            <xs:simpleType>
                <xs:restriction base="xs:string"/>
            </xs:simpleType>
            <xs:simpleType>
                <xs:restriction base="xs:string">
                    <xs:enumeration value="contrast"/>
                    <xs:enumeration value="error"/>
                    <xs:enumeration value="success"/>
                </xs:restriction>
            </xs:simpleType>
        </xs:union>
    </xs:simpleType>

    <xs:simpleType name="radioButtonGroupThemeNames">
        <xs:union>
            <xs:simpleType>
                <xs:restriction base="xs:string"/>
            </xs:simpleType>
            <xs:simpleType>
                <xs:restriction base="xs:string">
                    <xs:enumeration value="vertical"/>
                    <xs:enumeration value="helper-above-field"/>
                </xs:restriction>
            </xs:simpleType>
        </xs:union>
    </xs:simpleType>

    <xs:simpleType name="checkboxGroupThemeNames">
        <xs:union>
            <xs:simpleType>
                <xs:restriction base="xs:string"/>
            </xs:simpleType>
            <xs:simpleType>
                <xs:restriction base="xs:string">
                    <xs:enumeration value="vertical"/>
                    <xs:enumeration value="helper-above-field"/>
                </xs:restriction>
            </xs:simpleType>
        </xs:union>
    </xs:simpleType>

    <xs:simpleType name="textAreaThemeNames">
        <xs:union>
            <xs:simpleType>
                <xs:restriction base="xs:string"/>
            </xs:simpleType>
            <xs:simpleType>
                <xs:restriction base="xs:string">
                    <xs:enumeration value="small"/>
                    <xs:enumeration value="align-center"/>
                    <xs:enumeration value="align-right"/>
                    <xs:enumeration value="helper-above-field"/>
                    <xs:enumeration value="always-float-label"/>
                </xs:restriction>
            </xs:simpleType>
        </xs:union>
    </xs:simpleType>

    <xs:simpleType name="badgeThemeNames">
        <xs:union>
            <xs:simpleType>
                <xs:restriction base="xs:string"/>
            </xs:simpleType>
            <xs:simpleType>
                <xs:restriction base="xs:string">
                    <xs:enumeration value="badge"/>
                    <xs:enumeration value="normal"/>
                    <xs:enumeration value="success"/>
                    <xs:enumeration value="error"/>
                    <xs:enumeration value="contrast"/>
                    <xs:enumeration value="primary"/>
                    <xs:enumeration value="small"/>
                    <xs:enumeration value="pill"/>
                </xs:restriction>
            </xs:simpleType>
        </xs:union>
    </xs:simpleType>

    <xs:simpleType name="textFieldThemeNames">
        <xs:union>
            <xs:simpleType>
                <xs:restriction base="xs:string"/>
            </xs:simpleType>
            <xs:simpleType>
                <xs:restriction base="xs:string">
                    <xs:enumeration value="small"/>
                    <xs:enumeration value="align-center"/>
                    <xs:enumeration value="align-right"/>
                    <xs:enumeration value="helper-above-field"/>
                    <xs:enumeration value="always-float-label"/>
                </xs:restriction>
            </xs:simpleType>
        </xs:union>
    </xs:simpleType>

    <xs:simpleType name="richTextEditorThemeNames">
        <xs:union>
            <xs:simpleType>
                <xs:restriction base="xs:string"/>
            </xs:simpleType>
            <xs:simpleType>
                <xs:restriction base="xs:string">
                    <xs:enumeration value="no-border"/>
                    <xs:enumeration value="compact"/>
                </xs:restriction>
            </xs:simpleType>
        </xs:union>
    </xs:simpleType>

    <xs:simpleType name="detailsThemeNames">
        <xs:union>
            <xs:simpleType>
                <xs:restriction base="xs:string"/>
            </xs:simpleType>
            <xs:simpleType>
                <xs:restriction base="xs:string">
                    <xs:enumeration value="filled"/>
                    <xs:enumeration value="reverse"/>
                    <xs:enumeration value="small"/>
                </xs:restriction>
            </xs:simpleType>
        </xs:union>
    </xs:simpleType>

    <xs:simpleType name="spacingThemeNames">
        <xs:union>
            <xs:simpleType>
                <xs:restriction base="xs:string"/>
            </xs:simpleType>
            <xs:simpleType>
                <xs:restriction base="xs:string">
                    <xs:enumeration value="spacing-xs"/>
                    <xs:enumeration value="spacing-s"/>
                    <xs:enumeration value="spacing"/>
                    <xs:enumeration value="spacing-l"/>
                    <xs:enumeration value="spacing-xl"/>
                </xs:restriction>
            </xs:simpleType>
        </xs:union>
    </xs:simpleType>

    <xs:simpleType name="timePickerThemeNames">
        <xs:union>
            <xs:simpleType>
                <xs:restriction base="xs:string"/>
            </xs:simpleType>
            <xs:simpleType>
                <xs:restriction base="xs:string">
                    <xs:enumeration value="small"/>
                    <xs:enumeration value="align-left"/>
                    <xs:enumeration value="align-center"/>
                    <xs:enumeration value="align-right"/>
                    <xs:enumeration value="helper-above-field"/>
                    <xs:enumeration value="always-float-label"/>
                </xs:restriction>
            </xs:simpleType>
        </xs:union>
    </xs:simpleType>

    <xs:simpleType name="datePickerThemeNames">
        <xs:union>
            <xs:simpleType>
                <xs:restriction base="xs:string"/>
            </xs:simpleType>
            <xs:simpleType>
                <xs:restriction base="xs:string">
                    <xs:enumeration value="small"/>
                    <xs:enumeration value="align-left"/>
                    <xs:enumeration value="align-center"/>
                    <xs:enumeration value="align-right"/>
                    <xs:enumeration value="helper-above-field"/>
                    <xs:enumeration value="always-float-label"/>
                </xs:restriction>
            </xs:simpleType>
        </xs:union>
    </xs:simpleType>

    <xs:simpleType name="dateTimePickerThemeNames">
        <xs:union>
            <xs:simpleType>
                <xs:restriction base="xs:string"/>
            </xs:simpleType>
            <xs:simpleType>
                <xs:restriction base="xs:string">
                    <xs:enumeration value="small"/>
                    <xs:enumeration value="align-left"/>
                    <xs:enumeration value="align-center"/>
                    <xs:enumeration value="align-right"/>
                    <xs:enumeration value="helper-above-field"/>
                    <xs:enumeration value="always-float-label"/>
                </xs:restriction>
            </xs:simpleType>
        </xs:union>
    </xs:simpleType>

    <xs:simpleType name="dropdownButtonThemeNames">
        <xs:union>
            <xs:simpleType>
                <xs:restriction base="xs:string"/>
            </xs:simpleType>
            <xs:simpleType>
                <xs:restriction base="xs:string">
                    <xs:enumeration value="small"/>
                    <xs:enumeration value="large"/>
                    <xs:enumeration value="tertiary-inline"/>
                    <xs:enumeration value="primary"/>
                    <xs:enumeration value="error"/>
                    <xs:enumeration value="success"/>
                    <xs:enumeration value="contrast"/>
                    <xs:enumeration value="icon"/>
                    <xs:enumeration value="contained"/>
                    <xs:enumeration value="outlined"/>
                </xs:restriction>
            </xs:simpleType>
        </xs:union>
    </xs:simpleType>

    <xs:simpleType name="comboBoxThemeNames">
        <xs:union>
            <xs:simpleType>
                <xs:restriction base="xs:string"/>
            </xs:simpleType>
            <xs:simpleType>
                <xs:restriction base="xs:string">
                    <xs:enumeration value="small"/>
                    <xs:enumeration value="align-left"/>
                    <xs:enumeration value="align-center"/>
                    <xs:enumeration value="align-right"/>
                    <xs:enumeration value="helper-above-field"/>
                    <xs:enumeration value="always-float-label"/>
                </xs:restriction>
            </xs:simpleType>
        </xs:union>
    </xs:simpleType>

    <xs:simpleType name="selectThemeNames">
        <xs:union>
            <xs:simpleType>
                <xs:restriction base="xs:string"/>
            </xs:simpleType>
            <xs:simpleType>
                <xs:restriction base="xs:string">
                    <xs:enumeration value="small"/>
                    <xs:enumeration value="align-left"/>
                    <xs:enumeration value="align-center"/>
                    <xs:enumeration value="align-right"/>
                    <xs:enumeration value="helper-above-field"/>
                </xs:restriction>
            </xs:simpleType>
        </xs:union>
    </xs:simpleType>

    <xs:simpleType name="gridThemeNames">
        <xs:union>
            <xs:simpleType>
                <xs:restriction base="xs:string"/>
            </xs:simpleType>
            <xs:simpleType>
                <xs:restriction base="xs:string">
                    <xs:enumeration value="no-border"/>
                    <xs:enumeration value="no-row-borders"/>
                    <xs:enumeration value="column-borders"/>
                    <xs:enumeration value="row-stripes"/>
                    <xs:enumeration value="compact"/>
                    <xs:enumeration value="wrap-cell-content"/>
                    <xs:enumeration value="column-dividers"/>
                </xs:restriction>
            </xs:simpleType>
        </xs:union>
    </xs:simpleType>

    <xs:simpleType name="avatarThemeNames">
        <xs:union>
            <xs:simpleType>
                <xs:restriction base="xs:string"/>
            </xs:simpleType>
            <xs:simpleType>
                <xs:restriction base="xs:string">
                    <xs:enumeration value="xlarge"/>
                    <xs:enumeration value="large"/>
                    <xs:enumeration value="small"/>
                    <xs:enumeration value="xsmall"/>
                </xs:restriction>
            </xs:simpleType>
        </xs:union>
    </xs:simpleType>

    <xs:simpleType name="splitThemeNames">
        <xs:union>
            <xs:simpleType>
                <xs:restriction base="xs:string"/>
            </xs:simpleType>
            <xs:simpleType>
                <xs:restriction base="xs:string">
                    <xs:enumeration value="splitter-spacing"/>
                    <xs:enumeration value="small"/>
                    <xs:enumeration value="minimal"/>
                </xs:restriction>
            </xs:simpleType>
        </xs:union>
    </xs:simpleType>

    <xs:simpleType name="tabThemeNames">
        <xs:union>
            <xs:simpleType>
                <xs:restriction base="xs:string"/>
            </xs:simpleType>
            <xs:simpleType>
                <xs:restriction base="xs:string">
                    <xs:enumeration value="icon-on-top"/>
                </xs:restriction>
            </xs:simpleType>
        </xs:union>
    </xs:simpleType>

    <xs:simpleType name="tabsThemeNames">
        <xs:union>
            <xs:simpleType>
                <xs:restriction base="xs:string"/>
            </xs:simpleType>
            <xs:simpleType>
                <xs:restriction base="xs:string">
                    <xs:enumeration value="icon-on-top"/>
                    <xs:enumeration value="centered"/>
                    <xs:enumeration value="small"/>
                    <xs:enumeration value="minimal"/>
                    <xs:enumeration value="hide-scroll-buttons"/>
                    <xs:enumeration value="equal-width-tabs"/>
                </xs:restriction>
            </xs:simpleType>
        </xs:union>
    </xs:simpleType>

    <xs:simpleType name="tabSheetThemeNames">
        <xs:union>
            <xs:simpleType>
                <xs:restriction base="xs:string"/>
            </xs:simpleType>
            <xs:simpleType>
                <xs:restriction base="xs:string">
                    <xs:enumeration value="icon-on-top"/>
                    <xs:enumeration value="centered"/>
                    <xs:enumeration value="small"/>
                    <xs:enumeration value="minimal"/>
                    <xs:enumeration value="hide-scroll-buttons"/>
                    <xs:enumeration value="equal-width-tabs"/>
                    <xs:enumeration value="bordered"/>
                </xs:restriction>
            </xs:simpleType>
        </xs:union>
    </xs:simpleType>

    <xs:simpleType name="buttonThemeNames">
        <xs:union>
            <xs:simpleType>
                <xs:restriction base="xs:string"/>
            </xs:simpleType>
            <xs:simpleType>
                <xs:restriction base="xs:string">
                    <xs:enumeration value="small"/>
                    <xs:enumeration value="large"/>
                    <xs:enumeration value="tertiary"/>
                    <xs:enumeration value="tertiary-inline"/>
                    <xs:enumeration value="primary"/>
                    <xs:enumeration value="success"/>
                    <xs:enumeration value="error"/>
                    <xs:enumeration value="contrast"/>
                    <xs:enumeration value="icon"/>
                    <xs:enumeration value="contained"/>
                    <xs:enumeration value="outlined"/>
                </xs:restriction>
            </xs:simpleType>
        </xs:union>
    </xs:simpleType>

    <xs:simpleType name="imageThemeNames">
        <xs:union>
            <xs:simpleType>
                <xs:restriction base="xs:string"/>
            </xs:simpleType>
            <xs:simpleType>
                <xs:restriction base="xs:string">
                    <xs:enumeration value="fill"/>
                    <xs:enumeration value="contain"/>
                    <xs:enumeration value="cover"/>
                    <xs:enumeration value="scale-down"/>
                </xs:restriction>
            </xs:simpleType>
        </xs:union>
    </xs:simpleType>

    <xs:simpleType name="gridColumnVisibilityThemeNames">
        <xs:union>
            <xs:simpleType>
                <xs:restriction base="xs:string"/>
            </xs:simpleType>
            <xs:simpleType>
                <xs:restriction base="xs:string">
                    <xs:enumeration value="small"/>
                    <xs:enumeration value="large"/>
                    <xs:enumeration value="tertiary"/>
                    <xs:enumeration value="tertiary-inline"/>
                    <xs:enumeration value="primary"/>
                    <xs:enumeration value="success"/>
                    <xs:enumeration value="error"/>
                    <xs:enumeration value="contrast"/>
                    <xs:enumeration value="icon"/>
                    <xs:enumeration value="contained"/>
                    <xs:enumeration value="outlined"/>
                </xs:restriction>
            </xs:simpleType>
        </xs:union>
    </xs:simpleType>

    <xs:simpleType name="menuFilterFieldThemeNames">
        <xs:union>
            <xs:simpleType>
                <xs:restriction base="xs:string"/>
            </xs:simpleType>
            <xs:simpleType>
                <xs:restriction base="xs:string">
                    <xs:enumeration value="small"/>
                    <xs:enumeration value="align-center"/>
                    <xs:enumeration value="align-right"/>
                    <xs:enumeration value="helper-above-field"/>
                    <xs:enumeration value="always-float-label"/>
                </xs:restriction>
            </xs:simpleType>
        </xs:union>
    </xs:simpleType>

    <xs:simpleType name="listMenuThemeNames">
        <xs:union>
            <xs:simpleType>
                <xs:restriction base="xs:string"/>
            </xs:simpleType>
            <xs:simpleType>
                <xs:restriction base="xs:string">
                    <xs:enumeration value="toggle-reverse"/>
                </xs:restriction>
            </xs:simpleType>
        </xs:union>
    </xs:simpleType>

    <!-- Interfaces -->
    <xs:attributeGroup name="hasId">
        <xs:attribute name="id" type="xs:string"/>
    </xs:attributeGroup>

    <xs:attributeGroup name="hasText">
        <xs:attribute name="text" type="resourceString"/>
        <xs:attribute name="whiteSpace" type="whiteSpaceEnum"/>
    </xs:attributeGroup>

    <xs:attributeGroup name="hasTitle">
        <xs:attribute name="title" type="resourceString"/>
    </xs:attributeGroup>

    <xs:attributeGroup name="hasDataContainer">
        <xs:attribute name="dataContainer" type="xs:string"/>
        <xs:attribute name="property" type="xs:string"/>
    </xs:attributeGroup>

    <xs:attributeGroup name="requiresId">
        <xs:attribute name="id" type="xs:string" use="required"/>
    </xs:attributeGroup>

    <xs:attributeGroup name="hasEnabled">
        <xs:attribute name="enabled" type="xs:boolean"/>
    </xs:attributeGroup>

    <xs:attributeGroup name="hasHelperText">
        <xs:attribute name="helperText" type="resourceString"/>
    </xs:attributeGroup>

    <xs:attributeGroup name="hasAutocomplete">
        <xs:attribute name="autocomplete" type="autocompleteEnum"/>
    </xs:attributeGroup>

    <xs:attributeGroup name="hasAutocapitalize">
        <xs:attribute name="autocapitalize" type="autocapitalizeEnum"/>
    </xs:attributeGroup>

    <xs:attributeGroup name="hasAutocorrect">
        <xs:attribute name="autocorrect" type="xs:boolean"/>
    </xs:attributeGroup>

    <xs:attributeGroup name="hasPlaceholder">
        <xs:attribute name="placeholder" type="resourceString"/>
    </xs:attributeGroup>

    <xs:attributeGroup name="hasRequired">
        <xs:attribute name="requiredMessage" type="resourceString"/>
        <xs:attribute name="required" type="xs:boolean"/>
    </xs:attributeGroup>

    <xs:attributeGroup name="hasIcon">
        <xs:attribute name="icon" type="vaadinIconEnum"/>
    </xs:attributeGroup>

    <xs:attributeGroup name="hasAriaLabel">
        <xs:attribute name="ariaLabel" type="resourceString"/>
        <xs:attribute name="ariaLabelledBy" type="resourceString"/>
    </xs:attributeGroup>

    <xs:attributeGroup name="hasLabel">
        <xs:attribute name="label" type="resourceString"/>
    </xs:attributeGroup>

    <xs:attributeGroup name="hasFocusableAttributes">
        <xs:attribute name="tabIndex" type="xs:integer"/>
        <xs:attribute name="focusShortcut" type="xs:string"/>
    </xs:attributeGroup>

    <xs:attributeGroup name="hasSize">
        <xs:attribute name="width" type="componentSize"/>
        <xs:attribute name="maxWidth" type="componentSize"/>
        <xs:attribute name="minWidth" type="componentSize"/>

        <xs:attribute name="height" type="componentSize"/>
        <xs:attribute name="maxHeight" type="componentSize"/>
        <xs:attribute name="minHeight" type="componentSize"/>
    </xs:attributeGroup>

    <xs:attributeGroup name="hasThemable">
        <xs:attribute name="spacing" type="xs:boolean"/>
        <xs:attribute name="margin" type="xs:boolean"/>
        <xs:attribute name="padding" type="xs:boolean"/>
        <xs:attribute name="boxSizing" type="boxSizingType"/>
    </xs:attributeGroup>

    <xs:attributeGroup name="hasFlexible">
        <xs:attribute name="alignItems" type="alignEnum"/>
        <xs:attribute name="justifyContent" type="justifyContentModeEnum"/>

        <xs:attributeGroup ref="hasSize"/>
        <xs:attributeGroup ref="hasEnabled"/>
        <xs:attributeGroup ref="hasClassNames"/>
    </xs:attributeGroup>

    <xs:attributeGroup name="hasClassNames">
        <xs:attribute name="classNames" type="xs:string"/>
    </xs:attributeGroup>

    <xs:attributeGroup name="hasClickNotifierAttributes">
        <xs:attribute name="clickShortcut" type="xs:string"/>
    </xs:attributeGroup>

    <xs:attributeGroup name="hasOverlayClass">
        <xs:attribute name="overlayClass" type="xs:string"/>
    </xs:attributeGroup>

    <xs:attributeGroup name="hasSecurityConstraint">
        <xs:attribute name="constraintEntityOp" type="constraintEntityOp"/>
    </xs:attributeGroup>

    <xs:attributeGroup name="hasValueChangeMode">
        <xs:attribute name="valueChangeTimeout" type="xs:integer"/>
        <xs:attribute name="valueChangeMode" type="valueChangeModeEnum"/>
    </xs:attributeGroup>

    <xs:attributeGroup name="hasValueAndElement">
        <xs:attribute name="readOnly" type="xs:boolean"/>
    </xs:attributeGroup>

    <xs:attributeGroup name="hasValidation">
        <xs:attribute name="errorMessage" type="resourceString"/>
    </xs:attributeGroup>

    <!-- Utils -->
    <xs:complexType name="baseComponent">
        <xs:attributeGroup ref="hasId"/>
        <xs:attribute name="visible" type="xs:boolean"/>
        <xs:attribute name="colspan" type="xs:integer"/>
        <xs:attribute name="alignSelf" type="alignEnum"/>
        <xs:attribute name="css" type="xs:string"/>

        <!-- enable XSD extension here -->
        <xs:anyAttribute namespace="##other" processContents="lax"/>
    </xs:complexType>

    <xs:complexType name="prefixOrSuffixComponent">
        <xs:group ref="singleLayoutOrComponent" minOccurs="0"/>
    </xs:complexType>

    <xs:complexType name="baseAction">
        <xs:sequence>
            <xs:element name="properties" type="actionProperties" minOccurs="0"/>
        </xs:sequence>

        <xs:attribute name="type" type="actionTypeEnum"/>
        <xs:attribute name="shortcutCombination" type="xs:string"/>
        <xs:attribute name="visible" type="xs:boolean"/>
        <xs:attribute name="text" type="resourceString"/>
        <xs:attribute name="description" type="resourceString"/>
        <xs:attribute name="actionVariant" type="actionVariant"/>

        <xs:attributeGroup ref="hasIcon"/>
        <xs:attributeGroup ref="requiresId"/>
        <xs:attributeGroup ref="hasEnabled"/>
    </xs:complexType>

    <xs:complexType name="viewAction">
        <xs:complexContent>
            <xs:extension base="baseAction"/>
        </xs:complexContent>
    </xs:complexType>

    <xs:complexType name="gridAction">
        <xs:complexContent>
            <xs:extension base="baseAction"/>
        </xs:complexContent>
    </xs:complexType>

    <xs:complexType name="pickerAction">
        <xs:complexContent>
            <xs:extension base="baseAction"/>
        </xs:complexContent>
    </xs:complexType>

    <xs:complexType name="dropdownButtonAction">
        <xs:sequence>
            <xs:element name="properties" type="actionProperties" minOccurs="0"/>
        </xs:sequence>

        <xs:attribute name="type" type="actionTypeEnum"/>
        <xs:attribute name="visible" type="xs:boolean"/>
        <xs:attribute name="text" type="resourceString"/>
        <xs:attribute name="description" type="resourceString"/>
        <xs:attribute name="actionVariant" type="actionVariant"/>

        <xs:attributeGroup ref="hasIcon"/>
        <xs:attributeGroup ref="requiresId"/>
        <xs:attributeGroup ref="hasEnabled"/>
    </xs:complexType>

    <xs:complexType name="genericFilterAction">
        <xs:complexContent>
            <xs:extension base="baseAction"/>
        </xs:complexContent>
    </xs:complexType>

    <xs:complexType name="baseHtmlComponent">
        <xs:complexContent>
            <xs:extension base="baseComponent">
                <xs:attributeGroup ref="hasSize"/>
                <xs:attributeGroup ref="hasTitle"/>
                <xs:attributeGroup ref="hasClassNames"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <xs:complexType name="baseHtmlContainer">
        <xs:complexContent>
            <xs:extension base="baseHtmlComponent">
                <xs:group ref="singleLayoutOrComponent"/>

                <xs:attribute name="themeNames" type="badgeThemeNames"/>

                <xs:attributeGroup ref="hasText"/>
                <xs:attributeGroup ref="hasEnabled"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <xs:complexType name="baseClickableHtmlContainer">
        <xs:complexContent>
            <xs:extension base="baseHtmlContainer">
                <xs:attributeGroup ref="hasClickNotifierAttributes"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <xs:complexType name="baseHtmlDescription">
        <xs:complexContent>
            <xs:extension base="baseComponent">
                <xs:group ref="singleLayoutOrComponent"/>
                <xs:attribute name="themeNames" type="badgeThemeNames"/>

                <xs:attributeGroup ref="hasSize"/>
                <xs:attributeGroup ref="hasText"/>
                <xs:attributeGroup ref="hasTitle"/>
                <xs:attributeGroup ref="hasEnabled"/>
                <xs:attributeGroup ref="hasClassNames"/>
                <xs:attributeGroup ref="hasClickNotifierAttributes"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <xs:complexType name="baseFieldComponent">
        <xs:complexContent>
            <xs:extension base="baseComponent">
                <xs:attributeGroup ref="hasSize"/>
                <xs:attributeGroup ref="hasLabel"/>
                <xs:attributeGroup ref="hasEnabled"/>
                <xs:attributeGroup ref="hasClassNames"/>
                <xs:attributeGroup ref="hasHelperText"/>
                <xs:attributeGroup ref="hasDataContainer"/>
                <xs:attributeGroup ref="hasValueAndElement"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <xs:complexType name="validatableBaseFieldComponent">
        <xs:complexContent>
            <xs:extension base="baseFieldComponent">
                <xs:sequence>
                    <xs:element name="validators" minOccurs="0" type="constraintValidatorType"/>
                </xs:sequence>

                <xs:attributeGroup ref="hasValidation"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <xs:complexType name="baseTextFieldComponent">
        <xs:complexContent>
            <xs:extension base="validatableBaseFieldComponent">
                <xs:choice minOccurs="0">
                    <xs:element name="tooltip" type="tooltipElement"/>

                    <xs:element name="prefix" minOccurs="0" type="prefixOrSuffixComponent"/>
                    <xs:element name="suffix" minOccurs="0" type="prefixOrSuffixComponent"/>
                </xs:choice>

                <xs:attribute name="value" type="xs:string"/>
                <xs:attribute name="autofocus" type="xs:boolean"/>
                <xs:attribute name="autoselect" type="xs:boolean"/>
                <xs:attribute name="themeNames" type="textFieldThemeNames"/>
                <xs:attribute name="clearButtonVisible" type="xs:boolean"/>

                <xs:attributeGroup ref="hasTitle"/>
                <xs:attributeGroup ref="hasPlaceholder"/>
                <xs:attributeGroup ref="hasAutocorrect"/>
                <xs:attributeGroup ref="hasAutocomplete"/>
                <xs:attributeGroup ref="hasAutocapitalize"/>
                <xs:attributeGroup ref="hasValueChangeMode"/>
                <xs:attributeGroup ref="hasFocusableAttributes"/>
                <xs:attributeGroup ref="hasAriaLabel"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <xs:complexType name="baseComboBoxPickerComponent">
        <xs:complexContent>
            <xs:extension base="baseComponent">
                <xs:sequence>
                    <xs:element name="actions" minOccurs="0">
                        <xs:complexType>
                            <xs:sequence>
                                <xs:choice maxOccurs="unbounded">
                                    <xs:element name="action" type="pickerAction"/>
                                </xs:choice>
                            </xs:sequence>
                        </xs:complexType>
                    </xs:element>

                    <xs:element name="tooltip" minOccurs="0" type="tooltipElement"/>
                    <xs:element name="prefix" minOccurs="0" type="prefixOrSuffixComponent"/>
                </xs:sequence>

                <xs:attribute name="opened" type="xs:boolean"/>
                <xs:attribute name="pattern" type="xs:string"/>
                <xs:attribute name="autoOpen" type="xs:boolean"/>
                <xs:attribute name="pageSize" type="xs:integer"/>
                <xs:attribute name="autofocus" type="xs:boolean"/>
                <xs:attribute name="required" type="xs:boolean"/>
                <xs:attribute name="allowCustomValue" type="xs:boolean"/>
                <xs:attribute name="themeNames" type="comboBoxThemeNames"/>
                <xs:attribute name="allowedCharPattern" type="resourceString"/>

                <xs:attributeGroup ref="hasSize"/>
                <xs:attributeGroup ref="hasTitle"/>
                <xs:attributeGroup ref="hasLabel"/>
                <xs:attributeGroup ref="hasEnabled"/>
                <xs:attributeGroup ref="hasFocusableAttributes"/>
                <xs:attributeGroup ref="hasClassNames"/>
                <xs:attributeGroup ref="hasOverlayClass"/>
                <xs:attributeGroup ref="hasValidation"/>
                <xs:attributeGroup ref="hasHelperText"/>
                <xs:attributeGroup ref="hasPlaceholder"/>
                <xs:attributeGroup ref="hasValueAndElement"/>
                <xs:attributeGroup ref="hasAriaLabel"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <xs:complexType name="baseDropdownButtonComponent">
        <xs:complexContent>
            <xs:extension base="baseComponent">
                <xs:sequence>
                    <xs:element name="items">
                        <xs:complexType>
                            <xs:sequence>
                                <xs:element name="actionItem" type="dropdownActionItemType" minOccurs="0"/>
                                <xs:element name="componentItem" type="dropdownComponentItemType" minOccurs="0"/>
                                <xs:element name="textItem" type="dropdownTextItemType" minOccurs="0"/>
                                <xs:element name="separator" minOccurs="0"/>
                            </xs:sequence>
                        </xs:complexType>
                    </xs:element>
                </xs:sequence>

                <xs:attribute name="openOnHover" type="xs:boolean"/>
                <xs:attribute name="themeNames" type="dropdownButtonThemeNames"/>
                <xs:attribute name="icon" type="vaadinIconEnum"/>

                <xs:attributeGroup ref="hasSize"/>
                <xs:attributeGroup ref="hasText"/>
                <xs:attributeGroup ref="hasFocusableAttributes"/>
                <xs:attributeGroup ref="hasTitle"/>
                <xs:attributeGroup ref="hasClassNames"/>
                <xs:attributeGroup ref="hasOverlayClass"/>
                <xs:attributeGroup ref="hasEnabled"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <xs:complexType name="baseTabsComponent">
        <xs:complexContent>
            <xs:extension base="baseComponent">
                <xs:sequence minOccurs="0" maxOccurs="unbounded">
                    <xs:element name="tab" type="tabComponent"/>
                </xs:sequence>

                <xs:attributeGroup ref="hasClassNames"/>
                <xs:attributeGroup ref="hasSize"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <xs:complexType name="baseIconComponent">
        <xs:complexContent>
            <xs:extension base="baseComponent">
                <xs:sequence minOccurs="0">
                    <xs:element name="tooltip" type="tooltipElement"/>
                </xs:sequence>

                <xs:attribute name="color" type="resourceString"/>
                <xs:attribute name="size" type="componentSize"/>

                <xs:attributeGroup ref="hasClassNames"/>
                <xs:attributeGroup ref="hasClickNotifierAttributes"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <xs:complexType name="securityConstraintAction">
        <xs:complexContent>
            <xs:extension base="baseAction">
                <xs:attributeGroup ref="hasSecurityConstraint"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <xs:complexType name="unorderedListHtmlContainer">
        <xs:complexContent>
            <xs:extension base="baseClickableHtmlContainer">
                <xs:sequence minOccurs="0" maxOccurs="unbounded">
                    <xs:group ref="htmlLists"/>
                </xs:sequence>

                <xs:attribute name="themeNames" type="badgeThemeNames"/>
                <xs:attributeGroup ref="hasEnabled"/>
                <xs:attributeGroup ref="hasText"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <xs:complexType name="orderedListHtmlContainer">
        <xs:complexContent>
            <xs:extension base="unorderedListHtmlContainer">
                <xs:attribute name="numberingType" type="numberingType"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <xs:group name="htmlHeaders">
        <xs:sequence>
            <xs:choice maxOccurs="unbounded">
                <xs:element name="h1" type="baseClickableHtmlContainer"/>
                <xs:element name="h2" type="baseClickableHtmlContainer"/>
                <xs:element name="h3" type="baseClickableHtmlContainer"/>
                <xs:element name="h4" type="baseClickableHtmlContainer"/>
                <xs:element name="h5" type="baseClickableHtmlContainer"/>
                <xs:element name="h6" type="baseClickableHtmlContainer"/>
            </xs:choice>
        </xs:sequence>
    </xs:group>

    <xs:group name="htmlLists">
        <xs:sequence>
            <xs:choice maxOccurs="unbounded">
                <xs:element name="listItem" type="baseClickableHtmlContainer"/>
                <xs:element name="orderedList" type="orderedListHtmlContainer"/>
                <xs:element name="unorderedList" type="unorderedListHtmlContainer"/>
            </xs:choice>
        </xs:sequence>
    </xs:group>

    <xs:complexType name="htmlContainerWithAria">
        <xs:complexContent>
            <xs:extension base="baseHtmlContainer">
                <xs:attributeGroup ref="hasAriaLabel"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <xs:complexType name="clickableHtmlContainerWithArea">
        <xs:complexContent>
            <xs:extension base="htmlContainerWithAria">
                <xs:attributeGroup ref="hasClickNotifierAttributes"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <xs:complexType name="dialogMode">
        <xs:attribute name="modal" type="xs:boolean"/>
        <xs:attribute name="draggable" type="xs:boolean"/>
        <xs:attribute name="resizable" type="xs:boolean"/>
        <xs:attribute name="closeOnEscape" type="xs:boolean"/>
        <xs:attribute name="closeOnOutsideClick" type="xs:boolean"/>

        <xs:attributeGroup ref="hasSize"/>
        <!--        <xs:attribute name="forceDialog" type="xs:boolean"/>-->
    </xs:complexType>

    <xs:complexType name="actionProperties">
        <xs:sequence>
            <xs:element name="property" type="actionProperty" minOccurs="0"/>
        </xs:sequence>
    </xs:complexType>

    <xs:complexType name="actionProperty">
        <xs:attribute name="name" type="xs:string" use="required"/>
        <xs:attribute name="value" type="xs:string"/>
    </xs:complexType>

    <xs:complexType name="tooltipElement">
        <xs:attribute name="text" type="resourceString" use="required"/>
        <xs:attribute name="focusDelay" type="xs:int"/>
        <xs:attribute name="hideDelay" type="xs:int"/>
        <xs:attribute name="hoverDelay" type="xs:int"/>
        <xs:attribute name="manual" type="xs:boolean"/>
        <xs:attribute name="opened" type="xs:boolean"/>
        <xs:attribute name="position" type="tooltipPosition"/>
    </xs:complexType>

    <xs:complexType name="formattableRendererType">
        <xs:attribute name="format" type="resourceString" use="required"/>
        <xs:attribute name="nullRepresentation" type="resourceString"/>
    </xs:complexType>

    <xs:complexType name="numberRendererType">
        <xs:attribute name="format" type="resourceString"/>
        <xs:attribute name="numberFormat" type="resourceString"/>
        <xs:attribute name="nullRepresentation" type="resourceString"/>
    </xs:complexType>

    <xs:group name="renderers">
        <xs:sequence>
            <xs:choice>
                <xs:element name="numberRenderer" minOccurs="0" type="numberRendererType"/>
                <xs:element name="localDateRenderer" minOccurs="0" type="formattableRendererType"/>
                <xs:element name="localDateTimeRenderer" minOccurs="0" type="formattableRendererType"/>
            </xs:choice>
        </xs:sequence>
    </xs:group>

    <xs:complexType name="baseComboBoxItemsQueryType">
        <xs:sequence>
            <xs:element name="query"/>
        </xs:sequence>
        <xs:attribute name="searchStringFormat" type="xs:string"/>
        <xs:attribute name="escapeValueForLike" type="xs:boolean"/>
    </xs:complexType>

    <xs:complexType name="comboBoxItemsQueryType">
        <xs:complexContent>
            <xs:extension base="baseComboBoxItemsQueryType"/>
        </xs:complexContent>
    </xs:complexType>

    <xs:complexType name="entityComboBoxItemsQueryType">
        <xs:complexContent>
            <xs:extension base="baseComboBoxItemsQueryType">
                <xs:sequence>
                    <xs:element name="fetchPlan" type="itemsQueryFetchPlanType" minOccurs="0"/>
                </xs:sequence>
                <xs:attribute name="class" type="xs:string" use="required"/>
                <xs:attribute name="fetchPlan" type="xs:string"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <xs:complexType name="multiSelectComboBoxItemsQueryType">
        <xs:complexContent>
            <xs:extension base="baseComboBoxItemsQueryType">
                <xs:sequence>
                    <xs:element name="fetchPlan" type="itemsQueryFetchPlanType" minOccurs="0"/>
                </xs:sequence>
                <xs:attribute name="class" type="xs:string"/>
                <xs:attribute name="fetchPlan" type="xs:string"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <xs:complexType name="itemsQueryFetchPlanType">
        <xs:sequence minOccurs="0" maxOccurs="unbounded">
            <xs:element name="property" type="itemsQueryFetchPlanPropertyType"/>
        </xs:sequence>
        <xs:attribute name="extends"/>
    </xs:complexType>

    <xs:complexType name="itemsQueryFetchPlanPropertyType">
        <xs:sequence minOccurs="0" maxOccurs="unbounded">
            <xs:element name="property" type="itemsQueryFetchPlanPropertyType"/>
        </xs:sequence>
        <xs:attribute name="name"/>
        <xs:attribute name="fetchPlan"/>
        <xs:attribute name="fetch" type="itemsQueryFetchPlanFetchMode"/>
    </xs:complexType>

    <xs:simpleType name="itemsQueryFetchPlanFetchMode">
        <xs:restriction base="xs:string">
            <xs:enumeration value="AUTO"/>
            <xs:enumeration value="UNDEFINED"/>
            <xs:enumeration value="JOIN"/>
            <xs:enumeration value="BATCH"/>
        </xs:restriction>
    </xs:simpleType>

    <xs:complexType name="gridAggregationType">
        <xs:choice minOccurs="0">
            <xs:element name="formatter" minOccurs="0" type="formatterType"/>
        </xs:choice>

        <xs:attribute name="type" type="aggregationType"/>
        <xs:attribute name="strategyClass" type="xs:string"/>
        <xs:attribute name="cellTitle" type="resourceString"/>
    </xs:complexType>

    <xs:complexType name="contextMenuType">
        <xs:choice minOccurs="0">
            <xs:element name="item" minOccurs="0" type="contextMenuItemType"/>
            <xs:element name="separator" minOccurs="0"/>
        </xs:choice>

        <xs:attribute name="visible" type="xs:boolean"/>
        <xs:attribute name="css" type="xs:string"/>

        <xs:attributeGroup ref="hasId"/>
        <xs:attributeGroup ref="hasEnabled"/>
        <xs:attributeGroup ref="hasClassNames"/>
    </xs:complexType>

    <xs:complexType name="contextMenuItemType">
        <xs:choice minOccurs="0">
            <xs:element name="item" minOccurs="0" type="contextMenuItemType"/>
            <xs:element name="separator" minOccurs="0"/>
        </xs:choice>

        <xs:attribute name="action" type="xs:string"/>
        <xs:attribute name="visible" type="xs:boolean"/>
        <xs:attribute name="css" type="xs:string"/>

        <xs:attributeGroup ref="hasId"/>
        <xs:attributeGroup ref="hasEnabled"/>
        <xs:attributeGroup ref="hasClassNames"/>
        <xs:attributeGroup ref="hasText"/>
        <xs:attributeGroup ref="hasIcon"/>
    </xs:complexType>

    <!-- Components -->

    <!-- ListMenu -->
    <xs:complexType name="listMenuComponent">
        <xs:complexContent>
            <xs:extension base="baseComponent">
                <xs:attribute name="loadMenuConfig" type="xs:boolean"/>
                <xs:attribute name="themeNames" type="listMenuThemeNames"/>

                <xs:attributeGroup ref="hasSize"/>
                <xs:attributeGroup ref="hasClassNames"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <!-- SimplePagination -->
    <xs:complexType name="simplePaginationComponent">
        <xs:complexContent>
            <xs:extension base="baseComponent">
                <xs:attribute name="dataLoader" type="xs:string"/>

                <xs:attribute name="itemsPerPageDefaultValue" type="xs:integer"/>
                <xs:attribute name="itemsPerPageItems" type="resourceString"/>
                <xs:attribute name="itemsPerPageVisible" type="xs:boolean"/>
                <xs:attribute name="itemsPerPageUnlimitedItemVisible" type="xs:boolean"/>

                <xs:attribute name="autoLoad" type="xs:boolean"/>

                <xs:attributeGroup ref="hasClassNames"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <!-- Button-->
    <xs:complexType name="buttonComponent">
        <xs:complexContent>
            <xs:extension base="baseComponent">
                <xs:choice minOccurs="0">
                    <xs:element name="tooltip" type="tooltipElement"/>

                    <xs:element name="prefix" minOccurs="0" type="prefixOrSuffixComponent"/>
                    <xs:element name="suffix" minOccurs="0" type="prefixOrSuffixComponent"/>
                </xs:choice>

                <xs:attribute name="action" type="xs:string"/>
                <xs:attribute name="autofocus" type="xs:boolean"/>
                <xs:attribute name="iconAfterText" type="xs:boolean"/>
                <xs:attribute name="themeNames" type="buttonThemeNames"/>
                <xs:attribute name="disableOnClick" type="xs:boolean"/>

                <xs:attributeGroup ref="hasSize"/>
                <xs:attributeGroup ref="hasTitle"/>
                <xs:attributeGroup ref="hasIcon"/>
                <xs:attributeGroup ref="hasText"/>
                <xs:attributeGroup ref="hasEnabled"/>
                <xs:attributeGroup ref="hasClassNames"/>
                <xs:attributeGroup ref="hasFocusableAttributes"/>
                <xs:attributeGroup ref="hasAriaLabel"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <!-- DrawerToggle -->
    <xs:complexType name="drawerToggleComponent">
        <xs:complexContent>
            <xs:extension base="baseComponent">
                <xs:choice minOccurs="0">
                    <xs:element name="tooltip" type="tooltipElement"/>
                </xs:choice>

                <xs:attribute name="autofocus" type="xs:boolean"/>
                <xs:attribute name="themeNames" type="buttonThemeNames"/>

                <xs:attributeGroup ref="hasSize"/>
                <xs:attributeGroup ref="hasIcon"/>
                <xs:attributeGroup ref="hasFocusableAttributes"/>
                <xs:attributeGroup ref="hasAriaLabel"/>
                <xs:attributeGroup ref="hasClassNames"/>
                <xs:attributeGroup ref="hasClickNotifierAttributes"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <!-- UserIndicator -->
    <xs:complexType name="userIndicatorComponent">
        <xs:complexContent>
            <xs:extension base="baseComponent">
                <xs:attributeGroup ref="hasTitle"/>
                <xs:attributeGroup ref="hasSize"/>
                <xs:attributeGroup ref="hasEnabled"/>
                <xs:attributeGroup ref="hasClassNames"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <xs:complexType name="gridEditorButtonType">
        <xs:attributeGroup ref="hasText"/>
        <xs:attributeGroup ref="hasIcon"/>
        <xs:attributeGroup ref="hasTitle"/>
        <xs:attributeGroup ref="hasClassNames"/>

        <xs:attribute name="themeNames" type="buttonThemeNames"/>
        <xs:attribute name="iconAfterText" type="xs:boolean"/>
    </xs:complexType>

    <!--Grid.EditorActionsColumn-->
    <xs:complexType name="dataGridEditorActionsColumn">
        <xs:sequence>
            <xs:element name="editButton" minOccurs="1" type="gridEditorButtonType"/>
            <xs:element name="saveButton" minOccurs="0" type="gridEditorButtonType"/>
            <xs:element name="closeButton" minOccurs="0" type="gridEditorButtonType"/>
            <xs:element name="cancelButton" minOccurs="0" type="gridEditorButtonType"/>
        </xs:sequence>

        <xs:attribute name="key" type="xs:string"/>
        <xs:attribute name="width" type="xs:string"/>
        <xs:attribute name="autoWidth" type="xs:boolean"/>
        <xs:attribute name="resizable" type="xs:boolean"/>
        <xs:attribute name="flexGrow" type="xs:integer"/>
        <xs:attribute name="header" type="resourceString"/>
        <xs:attribute name="footer" type="resourceString"/>
        <xs:attribute name="visible" type="xs:boolean"/>
    </xs:complexType>

    <!-- Grid.Column-->
    <xs:complexType name="dataGridColumnComponent">
        <xs:sequence minOccurs="0">
            <xs:element name="aggregation" type="gridAggregationType"/>
            <xs:group ref="renderers"/>
        </xs:sequence>

        <xs:attribute name="key" type="xs:string"/>
        <xs:attribute name="visible" type="xs:boolean"/>
        <xs:attribute name="width" type="xs:string"/>
        <xs:attribute name="header" type="resourceString"/>
        <xs:attribute name="footer" type="resourceString"/>
        <xs:attribute name="frozen" type="xs:boolean"/>
        <xs:attribute name="property" type="xs:string"/>
        <xs:attribute name="sortable" type="xs:boolean"/>
        <xs:attribute name="filterable" type="xs:boolean"/>
        <xs:attribute name="flexGrow" type="xs:integer"/>
        <xs:attribute name="resizable" type="xs:boolean"/>
        <xs:attribute name="autoWidth" type="xs:boolean"/>
        <xs:attribute name="textAlign" type="gridColumnTextAlignEnum"/>
        <xs:attribute name="editable" type="xs:boolean"/>
    </xs:complexType>

    <!-- DataGrid -->
    <xs:complexType name="dataGridComponent">
        <xs:complexContent>
            <xs:extension base="baseComponent">
                <xs:all>
                    <xs:element name="actions" minOccurs="0">
                        <xs:complexType>
                            <xs:sequence>
                                <xs:choice maxOccurs="unbounded">
                                    <xs:element name="action" type="gridAction"/>
                                </xs:choice>
                            </xs:sequence>

                            <xs:attribute name="showInContextMenuEnabled" type="xs:boolean"/>
                        </xs:complexType>
                    </xs:element>
                    <xs:element name="columns">
                        <xs:complexType>
                            <xs:sequence>
                                <xs:element name="column" maxOccurs="unbounded" type="dataGridColumnComponent"/>
                                <xs:element name="editorActionsColumn" type="dataGridEditorActionsColumn"
                                            minOccurs="0"/>
                            </xs:sequence>

                            <xs:attributeGroup ref="columnsLoadType"/>
                            <xs:attribute name="sortable" type="xs:boolean"/>
                            <xs:attribute name="resizable" type="xs:boolean"/>
                        </xs:complexType>
                    </xs:element>
                    <xs:element name="contextMenu" minOccurs="0" type="contextMenuType"/>
                </xs:all>

                <xs:attribute name="pageSize" type="xs:integer"/>
                <xs:attribute name="metaClass" type="xs:string"/>
                <xs:attribute name="dropMode" type="gridDropMode"/>
                <xs:attribute name="rowsDraggable" type="xs:boolean"/>
                <xs:attribute name="themeNames" type="gridThemeNames"/>
                <xs:attribute name="dataContainer" type="xs:string"/>
                <xs:attribute name="allRowsVisible" type="xs:boolean"/>
                <xs:attribute name="editorBuffered" type="xs:boolean"/>
                <xs:attribute name="selectionMode" type="gridSelectionMode"/>
                <xs:attribute name="detailsVisibleOnClick" type="xs:boolean"/>
                <xs:attribute name="columnReorderingAllowed" type="xs:boolean"/>
                <xs:attribute name="nestedNullBehavior" type="gridNestedNullBehaviorEnum"/>
                <xs:attribute name="columnRendering" type="gridColumnRendering"/>
                <xs:attribute name="aggregatable" type="xs:boolean"/>
                <xs:attribute name="aggregationPosition" type="aggregationPosition"/>
                <xs:attribute name="multiSort" type="xs:boolean"/>
                <xs:attribute name="multiSortPriority" type="gridMultiSortPriority"/>
                <xs:attribute name="multiSortOnShiftClickOnly" type="xs:boolean"/>

                <xs:attributeGroup ref="hasSize"/>
                <xs:attributeGroup ref="hasEnabled"/>
                <xs:attributeGroup ref="hasFocusableAttributes"/>
                <xs:attributeGroup ref="hasClassNames"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <!-- TreeGrid-->
    <xs:complexType name="treeDataGridComponent">
        <xs:complexContent>
            <xs:extension base="dataGridComponent">
                <xs:attribute name="hierarchyProperty" type="xs:string" use="required"/>
                <xs:attribute name="hierarchyColumn" type="xs:string"/>
                <xs:attribute name="showOrphans" type="xs:boolean"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <!-- TextField-->
    <xs:complexType name="textFieldComponent">
        <xs:complexContent>
            <xs:extension base="baseTextFieldComponent">
                <xs:attribute name="pattern" type="xs:string"/>
                <xs:attribute name="allowedCharPattern" type="resourceString"/>
                <xs:attribute name="maxLength" type="xs:integer"/>
                <xs:attribute name="minLength" type="xs:integer"/>
                <xs:attribute name="datatype" type="fieldDatatypeEnum"/>

                <xs:attributeGroup ref="hasDataContainer"/>
                <xs:attributeGroup ref="hasRequired"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <!-- EmailField-->
    <xs:complexType name="emailFieldComponent">
        <xs:complexContent>
            <xs:extension base="baseTextFieldComponent">
                <xs:sequence>
                    <xs:element name="validators" minOccurs="0" type="stringValidatorType"/>
                </xs:sequence>
                <xs:attribute name="pattern" type="xs:string"/>
                <xs:attribute name="allowedCharPattern" type="resourceString"/>
                <xs:attribute name="maxLength" type="xs:integer"/>
                <xs:attribute name="minLength" type="xs:integer"/>

                <xs:attributeGroup ref="hasDataContainer"/>
                <xs:attributeGroup ref="hasRequired"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <!-- PasswordField-->
    <xs:complexType name="passwordFieldComponent">
        <xs:complexContent>
            <xs:extension base="baseTextFieldComponent">
                <xs:sequence>
                    <xs:element name="validators" minOccurs="0" type="stringValidatorType"/>
                </xs:sequence>
                <xs:attribute name="pattern" type="xs:string"/>
                <xs:attribute name="allowedCharPattern" type="resourceString"/>

                <xs:attributeGroup ref="hasRequired"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <!-- NumberField-->
    <xs:complexType name="numberFieldComponent">
        <xs:complexContent>
            <xs:extension base="baseTextFieldComponent">
                <xs:sequence>
                    <xs:element name="validators" minOccurs="0" type="numberFieldValidatorType"/>
                </xs:sequence>

                <xs:attribute name="max" type="xs:double"/>
                <xs:attribute name="min" type="xs:double"/>
                <xs:attribute name="step" type="xs:double"/>
                <xs:attribute name="stepButtonsVisible" type="xs:boolean"/>
                <xs:attribute name="allowedCharPattern" type="resourceString"/>

                <xs:attributeGroup ref="hasRequired"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <!-- BigDecimal-->
    <xs:complexType name="bigDecimalFieldComponent">
        <xs:complexContent>
            <xs:extension base="baseTextFieldComponent">
                <xs:sequence>
                    <xs:element name="validators" minOccurs="0" type="bigDecimalFieldValidatorType"/>
                </xs:sequence>

                <xs:attributeGroup ref="hasRequired"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <!-- IntegerField-->
    <xs:complexType name="integerFieldComponent">
        <xs:complexContent>
            <xs:extension base="baseTextFieldComponent">
                <xs:sequence>
                    <xs:element name="validators" minOccurs="0" type="integerFieldValidatorType"/>
                </xs:sequence>

                <xs:attribute name="max" type="xs:integer"/>
                <xs:attribute name="min" type="xs:integer"/>
                <xs:attribute name="step" type="xs:integer"/>
                <xs:attribute name="stepButtonsVisible" type="xs:boolean"/>

                <xs:attributeGroup ref="hasRequired"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <!-- Checkbox-->
    <xs:complexType name="checkboxComponent">
        <xs:complexContent>
            <xs:extension base="baseComponent">
                <xs:choice minOccurs="0">
                    <xs:element name="tooltip" type="tooltipElement"/>
                </xs:choice>

                <xs:attribute name="value" type="xs:boolean"/>
                <xs:attribute name="autofocus" type="xs:boolean"/>
                <xs:attribute name="indeterminate" type="xs:boolean"/>

                <xs:attributeGroup ref="hasSize"/>
                <xs:attributeGroup ref="hasLabel"/>
                <xs:attributeGroup ref="hasClassNames"/>
                <xs:attributeGroup ref="hasFocusableAttributes"/>
                <xs:attributeGroup ref="hasEnabled"/>
                <xs:attributeGroup ref="hasAriaLabel"/>
                <xs:attributeGroup ref="hasDataContainer"/>
                <xs:attributeGroup ref="hasValueAndElement"/>
                <xs:attributeGroup ref="hasClickNotifierAttributes"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <!-- ActionItem-->
    <xs:complexType name="dropdownActionItemType">
        <xs:choice>
            <xs:element name="action" type="dropdownButtonAction"/>
        </xs:choice>

        <xs:attribute name="ref" type="xs:string"/>
        <xs:attributeGroup ref="requiresId"/>
    </xs:complexType>

    <!-- ComponentItem-->
    <xs:complexType name="dropdownComponentItemType">
        <xs:choice>
            <xs:group ref="singleLayoutOrComponent"/>
        </xs:choice>

        <xs:attributeGroup ref="requiresId"/>
    </xs:complexType>

    <!-- TextItem-->
    <xs:complexType name="dropdownTextItemType">
        <xs:attribute name="text" type="resourceString"/>
        <xs:attributeGroup ref="requiresId"/>
    </xs:complexType>

    <!-- DropdownButton-->
    <xs:complexType name="dropdownButtonComponent">
        <xs:complexContent>
            <xs:extension base="baseDropdownButtonComponent">
                <xs:attribute name="dropdownIndicatorVisible" type="xs:boolean"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <!-- ComboButton-->
    <xs:complexType name="comboButtonComponent">
        <xs:complexContent>
            <xs:extension base="baseDropdownButtonComponent">
                <xs:attribute name="action" type="xs:string"/>
                <xs:attribute name="dropdownIcon" type="vaadinIconEnum"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <!-- ComboBox-->
    <xs:complexType name="comboBoxComponent">
        <xs:complexContent>
            <xs:extension base="validatableBaseFieldComponent">
                <xs:sequence minOccurs="0">
                    <xs:element name="tooltip" type="tooltipElement"/>
                    <xs:element name="itemsQuery" type="comboBoxItemsQueryType"/>

                    <xs:element name="prefix" type="prefixOrSuffixComponent"/>
                </xs:sequence>

                <xs:attribute name="pattern" type="xs:string"/>
                <xs:attribute name="autoOpen" type="xs:boolean"/>
                <xs:attribute name="pageSize" type="xs:integer"/>
                <xs:attribute name="autofocus" type="xs:boolean"/>
                <xs:attribute name="allowCustomValue" type="xs:boolean"/>
                <xs:attribute name="themeNames" type="comboBoxThemeNames"/>
                <xs:attribute name="clearButtonVisible" type="xs:boolean"/>
                <xs:attribute name="itemsEnum" type="xs:string"/>
                <xs:attribute name="allowedCharPattern" type="resourceString"/>
                <xs:attribute name="datatype" type="fieldDatatypeEnum"/>

                <xs:attributeGroup ref="hasTitle"/>
                <xs:attributeGroup ref="hasRequired"/>
                <xs:attributeGroup ref="hasFocusableAttributes"/>
                <xs:attributeGroup ref="hasPlaceholder"/>
                <xs:attributeGroup ref="hasOverlayClass"/>
                <xs:attributeGroup ref="hasAriaLabel"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <!-- MultiSelectComboBox-->
    <xs:complexType name="multiSelectComboBoxComponent">
        <xs:complexContent>
            <xs:extension base="validatableBaseFieldComponent">
                <xs:sequence minOccurs="0">
                    <xs:element name="itemsQuery" type="multiSelectComboBoxItemsQueryType"/>
                    <xs:element name="tooltip" type="tooltipElement"/>
                    <xs:element name="validators" type="collectionValidatorType"/>
                </xs:sequence>

                <xs:attribute name="opened" type="xs:boolean"/>
                <xs:attribute name="itemsEnum" type="xs:string"/>
                <xs:attribute name="autoOpen" type="xs:boolean"/>
                <xs:attribute name="pageSize" type="xs:integer"/>
                <xs:attribute name="autofocus" type="xs:boolean"/>
                <xs:attribute name="selectedItemsOnTop" type="xs:boolean"/>
                <xs:attribute name="itemsContainer" type="xs:string"/>
                <xs:attribute name="allowCustomValue" type="xs:boolean"/>
                <xs:attribute name="allowedCharPattern" type="resourceString"/>
                <xs:attribute name="clearButtonVisible" type="xs:boolean"/>
                <xs:attribute name="themeNames" type="comboBoxThemeNames"/>
                <xs:attribute name="metaClass" type="xs:string"/>
                <xs:attribute name="autoExpand" type="multiSelectComboBoxAutoExpandModeEnum"/>

                <xs:attributeGroup ref="hasTitle"/>
                <xs:attributeGroup ref="hasRequired"/>
                <xs:attributeGroup ref="hasFocusableAttributes"/>
                <xs:attributeGroup ref="hasPlaceholder"/>
                <xs:attributeGroup ref="hasValidation"/>
                <xs:attributeGroup ref="hasOverlayClass"/>
                <xs:attributeGroup ref="hasAriaLabel"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <!-- MultiSelectComboBoxPicker-->
    <xs:complexType name="multiSelectComboBoxPickerComponent">
        <xs:complexContent>
            <xs:extension base="multiSelectComboBoxComponent">
                <xs:sequence minOccurs="0">
                    <xs:element name="itemsQuery" type="multiSelectComboBoxItemsQueryType"/>
                    <xs:element name="actions">
                        <xs:complexType>
                            <xs:sequence>
                                <xs:choice maxOccurs="unbounded">
                                    <xs:element name="action" type="pickerAction"/>
                                </xs:choice>
                            </xs:sequence>
                        </xs:complexType>
                    </xs:element>
                </xs:sequence>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <!-- EntityComboBox-->
    <xs:complexType name="entityComboBoxComponent">
        <xs:complexContent>
            <xs:extension base="baseComboBoxPickerComponent">
                <xs:sequence>
                    <xs:element name="itemsQuery" minOccurs="0" type="entityComboBoxItemsQueryType"/>
                    <xs:element name="validators" minOccurs="0" type="baseValidatorType"/>
                </xs:sequence>

                <xs:attribute name="metaClass" type="xs:string"/>
                <xs:attribute name="itemsContainer" type="xs:string"/>

                <xs:attributeGroup ref="hasRequired"/>
                <xs:attributeGroup ref="hasDataContainer"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <!-- TimePicker-->
    <xs:complexType name="timePickerComponent">
        <xs:complexContent>
            <xs:extension base="validatableBaseFieldComponent">
                <xs:sequence>
                    <xs:element name="tooltip" minOccurs="0" type="tooltipElement"/>
                    <xs:element name="validators" minOccurs="0" type="dateValidatorsType"/>

                    <xs:element name="prefix" minOccurs="0" type="prefixOrSuffixComponent"/>
                </xs:sequence>
                <xs:attribute name="autoOpen" type="xs:boolean"/>
                <xs:attribute name="datatype" type="timeDatatypeEnum"/>
                <xs:attribute name="clearButtonVisible" type="xs:boolean"/>
                <xs:attribute name="themeNames" type="timePickerThemeNames"/>
                <xs:attribute name="allowedCharPattern" type="resourceString"/>
                <xs:attribute name="step" type="xs:string"/>
                <xs:attribute name="max" type="xs:string"/>
                <xs:attribute name="min" type="xs:string"/>

                <xs:attributeGroup ref="hasRequired"/>
                <xs:attributeGroup ref="hasPlaceholder"/>
                <xs:attributeGroup ref="hasFocusableAttributes"/>
                <xs:attributeGroup ref="hasOverlayClass"/>
                <xs:attributeGroup ref="hasAriaLabel"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <!-- DatePicker-->
    <xs:complexType name="datePickerComponent">
        <xs:complexContent>
            <xs:extension base="validatableBaseFieldComponent">
                <xs:sequence>
                    <xs:element name="tooltip" minOccurs="0" type="tooltipElement"/>
                    <xs:element name="validators" minOccurs="0" type="dateValidatorsType"/>

                    <xs:element name="prefix" minOccurs="0" type="prefixOrSuffixComponent"/>
                </xs:sequence>
                <xs:attribute name="name" type="xs:string"/>
                <xs:attribute name="opened" type="xs:boolean"/>
                <xs:attribute name="autoOpen" type="xs:boolean"/>
                <xs:attribute name="datatype" type="dateDatatypeEnum"/>
                <xs:attribute name="clearButtonVisible" type="xs:boolean"/>
                <xs:attribute name="weekNumbersVisible" type="xs:boolean"/>
                <xs:attribute name="themeNames" type="datePickerThemeNames"/>
                <xs:attribute name="allowedCharPattern" type="resourceString"/>
                <xs:attribute name="dateFormat" type="resourceString"/>
                <xs:attribute name="max" type="xs:string"/>
                <xs:attribute name="min" type="xs:string"/>

                <xs:attributeGroup ref="hasRequired"/>
                <xs:attributeGroup ref="hasFocusableAttributes"/>
                <xs:attributeGroup ref="hasPlaceholder"/>
                <xs:attributeGroup ref="hasOverlayClass"/>
                <xs:attributeGroup ref="hasAriaLabel"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <!-- DateTimePicker-->
    <xs:complexType name="dateTimePickerComponent">
        <xs:complexContent>
            <xs:extension base="validatableBaseFieldComponent">
                <xs:sequence>
                    <xs:element name="tooltip" minOccurs="0" type="tooltipElement"/>
                    <xs:element name="validators" minOccurs="0" type="dateValidatorsType"/>
                </xs:sequence>

                <xs:attribute name="autoOpen" type="xs:boolean"/>
                <xs:attribute name="themeNames" type="dateTimePickerThemeNames"/>
                <xs:attribute name="timePlaceholder" type="resourceString"/>
                <xs:attribute name="datePlaceholder" type="resourceString"/>
                <xs:attribute name="weekNumbersVisible" type="xs:boolean"/>
                <xs:attribute name="datatype" type="dateTimeDatatypeEnum"/>
                <xs:attribute name="step" type="xs:string"/>
                <xs:attribute name="dateFormat" type="resourceString"/>
                <xs:attribute name="max" type="xs:string"/>
                <xs:attribute name="min" type="xs:string"/>

                <xs:attributeGroup ref="hasRequired"/>
                <xs:attributeGroup ref="hasFocusableAttributes"/>
                <xs:attributeGroup ref="hasOverlayClass"/>
                <xs:attributeGroup ref="hasAriaLabel"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <!-- ProgressBar-->
    <xs:complexType name="progressBarComponent">
        <xs:complexContent>
            <xs:extension base="baseComponent">
                <xs:attribute name="max" type="xs:double"/>
                <xs:attribute name="min" type="xs:double"/>
                <xs:attribute name="value" type="xs:double"/>
                <xs:attribute name="indeterminate" type="xs:boolean"/>
                <xs:attribute name="themeNames" type="progressBarThemeNames"/>

                <xs:attributeGroup ref="hasSize"/>
                <xs:attributeGroup ref="hasClassNames"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <!-- RadioButtonGroup-->
    <xs:complexType name="radioButtonGroupComponent">
        <xs:complexContent>
            <xs:extension base="baseComponent">
                <xs:choice minOccurs="0">
                    <xs:element name="tooltip" type="tooltipElement"/>
                </xs:choice>

                <xs:attribute name="themeNames" type="radioButtonGroupThemeNames"/>
                <xs:attribute name="itemsContainer" type="xs:string"/>
                <xs:attribute name="itemsEnum" type="xs:string"/>
                <xs:attribute name="datatype" type="fieldDatatypeEnum"/>

                <xs:attributeGroup ref="hasSize"/>
                <xs:attributeGroup ref="hasLabel"/>
                <xs:attributeGroup ref="hasEnabled"/>
                <xs:attributeGroup ref="hasRequired"/>
                <xs:attributeGroup ref="hasClassNames"/>
                <xs:attributeGroup ref="hasValidation"/>
                <xs:attributeGroup ref="hasHelperText"/>
                <xs:attributeGroup ref="hasValueAndElement"/>
                <xs:attributeGroup ref="hasDataContainer"/>
                <xs:attributeGroup ref="hasAriaLabel"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <!-- CheckboxGroup-->
    <xs:complexType name="checkboxGroupComponent">
        <xs:complexContent>
            <xs:extension base="baseComponent">
                <xs:choice minOccurs="0">
                    <xs:element name="tooltip" type="tooltipElement"/>
                </xs:choice>

                <xs:attribute name="itemsContainer" type="xs:string"/>
                <xs:attribute name="itemsEnum" type="xs:string"/>

                <xs:attribute name="themeNames" type="checkboxGroupThemeNames"/>

                <xs:attributeGroup ref="hasSize"/>
                <xs:attributeGroup ref="hasLabel"/>
                <xs:attributeGroup ref="hasEnabled"/>
                <xs:attributeGroup ref="hasRequired"/>
                <xs:attributeGroup ref="hasClassNames"/>
                <xs:attributeGroup ref="hasValidation"/>
                <xs:attributeGroup ref="hasHelperText"/>
                <xs:attributeGroup ref="hasValueAndElement"/>
                <xs:attributeGroup ref="hasDataContainer"/>
                <xs:attributeGroup ref="hasAriaLabel"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <!-- ListBox-->
    <xs:complexType name="listBoxComponent">
        <xs:complexContent>
            <xs:extension base="baseComponent">
                <xs:choice minOccurs="0">
                    <xs:element name="tooltip" type="tooltipElement"/>
                </xs:choice>

                <xs:attribute name="itemsContainer" type="xs:string"/>
                <xs:attribute name="itemsEnum" type="xs:string"/>
                <xs:attribute name="readOnly" type="xs:boolean"/>

                <xs:attributeGroup ref="hasSize"/>
                <xs:attributeGroup ref="hasEnabled"/>
                <xs:attributeGroup ref="hasClassNames"/>
                <xs:attributeGroup ref="hasAriaLabel"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <!-- MultiSelectListBox-->
    <xs:complexType name="multiSelectListBoxComponent">
        <xs:complexContent>
            <xs:extension base="baseComponent">
                <xs:choice minOccurs="0">
                    <xs:element name="tooltip" type="tooltipElement"/>
                </xs:choice>

                <xs:attribute name="itemsContainer" type="xs:string"/>
                <xs:attribute name="itemsEnum" type="xs:string"/>
                <xs:attribute name="readOnly" type="xs:boolean"/>

                <xs:attributeGroup ref="hasSize"/>
                <xs:attributeGroup ref="hasEnabled"/>
                <xs:attributeGroup ref="hasClassNames"/>
                <xs:attributeGroup ref="hasAriaLabel"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <!-- TextArea-->
    <xs:complexType name="textAreaComponent">
        <xs:complexContent>
            <xs:extension base="baseComponent">
                <xs:choice minOccurs="0">
                    <xs:element name="tooltip" type="tooltipElement"/>
                    <xs:element name="validators" minOccurs="0" type="stringValidatorType"/>

                    <xs:element name="prefix" minOccurs="0" type="prefixOrSuffixComponent"/>
                    <xs:element name="suffix" minOccurs="0" type="prefixOrSuffixComponent"/>
                </xs:choice>

                <xs:attribute name="autofocus" type="xs:boolean"/>
                <xs:attribute name="value" type="xs:string"/>
                <xs:attribute name="pattern" type="xs:string"/>
                <xs:attribute name="allowedCharPattern" type="resourceString"/>
                <xs:attribute name="autoselect" type="xs:boolean"/>
                <xs:attribute name="clearButtonVisible" type="xs:boolean"/>
                <xs:attribute name="themeNames" type="textAreaThemeNames"/>
                <xs:attribute name="maxLength" type="xs:integer"/>
                <xs:attribute name="minLength" type="xs:integer"/>

                <xs:attributeGroup ref="hasSize"/>
                <xs:attributeGroup ref="hasLabel"/>
                <xs:attributeGroup ref="hasEnabled"/>
                <xs:attributeGroup ref="hasFocusableAttributes"/>
                <xs:attributeGroup ref="hasRequired"/>
                <xs:attributeGroup ref="hasClassNames"/>
                <xs:attributeGroup ref="hasValidation"/>
                <xs:attributeGroup ref="hasAutocorrect"/>
                <xs:attributeGroup ref="hasHelperText"/>
                <xs:attributeGroup ref="hasPlaceholder"/>
                <xs:attributeGroup ref="hasAutocomplete"/>
                <xs:attributeGroup ref="hasAutocapitalize"/>
                <xs:attributeGroup ref="hasValueChangeMode"/>
                <xs:attributeGroup ref="hasValueAndElement"/>
                <xs:attributeGroup ref="hasDataContainer"/>
                <xs:attributeGroup ref="hasAriaLabel"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <xs:complexType name="entityPickerComponent">
        <xs:complexContent>
            <xs:extension base="valuePickerComponent">
                <xs:sequence>
                    <xs:element name="validators" minOccurs="0" type="baseValidatorType"/>
                </xs:sequence>

                <xs:attribute name="metaClass" type="xs:string"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <!-- ValuePicker-->
    <xs:complexType name="valuePickerComponent">
        <xs:complexContent>
            <xs:extension base="validatableBaseFieldComponent">
                <xs:sequence>
                    <xs:element name="actions" minOccurs="0">
                        <xs:complexType>
                            <xs:sequence>
                                <xs:choice maxOccurs="unbounded">
                                    <xs:element name="action" type="pickerAction"/>
                                </xs:choice>
                            </xs:sequence>
                        </xs:complexType>
                    </xs:element>
                    <xs:element name="formatter" minOccurs="0" type="formatterType"/>
                    <xs:element name="tooltip" minOccurs="0" type="tooltipElement"/>

                    <xs:element name="prefix" minOccurs="0" type="prefixOrSuffixComponent"/>
                    <xs:element name="suffix" minOccurs="0" type="prefixOrSuffixComponent"/>
                </xs:sequence>

                <xs:attribute name="themeNames" type="xs:string"/>
                <xs:attribute name="autofocus" type="xs:boolean"/>
                <xs:attribute name="allowCustomValue" type="xs:boolean"/>

                <xs:attributeGroup ref="hasTitle"/>
                <xs:attributeGroup ref="hasFocusableAttributes"/>
                <xs:attributeGroup ref="hasRequired"/>
                <xs:attributeGroup ref="hasPlaceholder"/>
                <xs:attributeGroup ref="hasAriaLabel"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <!-- Accordion -->
    <xs:complexType name="accordionContainer">
        <xs:complexContent>
            <xs:extension base="baseComponent">
                <xs:sequence minOccurs="0" maxOccurs="unbounded">
                    <xs:element name="accordionPanel">
                        <xs:complexType>
                            <xs:complexContent>
                                <xs:extension base="detailsComponent"/>
                            </xs:complexContent>
                        </xs:complexType>
                    </xs:element>
                </xs:sequence>

                <xs:attributeGroup ref="hasSize"/>
                <xs:attributeGroup ref="hasClassNames"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <!-- Avatar-->
    <xs:complexType name="avatarComponent">
        <xs:complexContent>
            <xs:extension base="baseComponent">
                <xs:attribute name="name" type="xs:string"/>
                <xs:attribute name="image" type="xs:string"/>
                <xs:attribute name="colorIndex" type="xs:integer"/>
                <xs:attribute name="abbreviation" type="resourceString"/>
                <xs:attribute name="themeNames" type="avatarThemeNames"/>

                <xs:attributeGroup ref="hasSize"/>
                <xs:attributeGroup ref="hasClassNames"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <!-- Icon-->
    <xs:complexType name="iconComponent">
        <xs:complexContent>
            <xs:extension base="baseIconComponent">
                <xs:attribute name="icon" type="vaadinIconEnum" use="required"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <!-- SvgIcon-->
    <xs:complexType name="svgIconComponent">
        <xs:complexContent>
            <xs:extension base="baseIconComponent">
                <xs:attribute name="symbol" type="xs:string"/>
                <xs:attribute name="resource" type="xs:string"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <!-- FontIcon-->
    <xs:complexType name="fontIconComponent">
        <xs:complexContent>
            <xs:extension base="baseIconComponent">
                <xs:attribute name="iconClassNames" type="xs:string"/>
                <xs:attribute name="fontFamily" type="xs:string"/>
                <xs:attribute name="charCode" type="xs:string"/>
                <xs:attribute name="ligature" type="xs:string"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <!-- Scroller -->
    <xs:complexType name="scrollerContainer">
        <xs:complexContent>
            <xs:extension base="baseComponent">
                <xs:sequence>
                    <xs:group ref="standardComponent"/>
                </xs:sequence>

                <xs:attribute name="scrollBarsDirection" type="scrollDirection"/>

                <xs:attributeGroup ref="hasSize"/>
                <xs:attributeGroup ref="hasClassNames"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <!-- Split-->
    <xs:complexType name="splitContainer">
        <xs:complexContent>
            <xs:extension base="baseComponent">
                <xs:sequence minOccurs="2" maxOccurs="2">
                    <xs:group ref="singleLayoutOrComponent"/>
                </xs:sequence>

                <xs:attribute name="themeNames" type="splitThemeNames"/>
                <xs:attribute name="splitterPosition" type="xs:double"/>
                <xs:attribute name="orientation" type="orientationType"/>

                <xs:attributeGroup ref="hasSize"/>
                <xs:attributeGroup ref="hasClassNames"/>
                <xs:attributeGroup ref="hasClickNotifierAttributes"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <!-- Tabs-->
    <xs:complexType name="tabsContainer">
        <xs:complexContent>
            <xs:extension base="baseTabsComponent">
                <xs:attribute name="orientation" type="orientationType"/>

                <xs:attribute name="themeNames" type="tabsThemeNames"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <!-- TabSheet-->
    <xs:complexType name="tabSheetComponent">
        <xs:complexContent>
            <xs:extension base="baseTabsComponent">
                <xs:sequence minOccurs="0">
                    <xs:element name="prefix" minOccurs="0" type="prefixOrSuffixComponent"/>
                    <xs:element name="suffix" minOccurs="0" type="prefixOrSuffixComponent"/>
                </xs:sequence>

                <xs:attribute name="themeNames" type="tabSheetThemeNames"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <!-- Tab-->
    <xs:complexType name="tabComponent">
        <xs:sequence minOccurs="0">
            <xs:group ref="singleLayoutOrComponent"/>
            <xs:element name="tooltip" type="tooltipElement"/>
        </xs:sequence>

        <xs:attribute name="themeNames" type="tabThemeNames"/>
        <xs:attribute name="css" type="xs:string"/>
        <xs:attribute name="flexGrow" type="xs:double"/>
        <xs:attribute name="visible" type="xs:boolean"/>
        <xs:attribute name="lazy" type="xs:boolean"/>

        <xs:attributeGroup ref="requiresId"/>
        <xs:attributeGroup ref="hasLabel"/>
        <xs:attributeGroup ref="hasEnabled"/>
        <xs:attributeGroup ref="hasClassNames"/>
        <xs:attributeGroup ref="hasAriaLabel"/>
    </xs:complexType>

    <!-- Select-->
    <xs:complexType name="selectComponent">
        <xs:complexContent>
            <xs:extension base="baseComponent">
                <xs:sequence minOccurs="0">
                    <xs:element name="tooltip" type="tooltipElement"/>
                    <xs:element name="prefix" type="prefixOrSuffixComponent"/>
                </xs:sequence>

                <xs:attribute name="autofocus" type="xs:boolean"/>
                <xs:attribute name="emptySelectionCaption" type="resourceString"/>
                <xs:attribute name="emptySelectionAllowed" type="xs:boolean"/>
                <xs:attribute name="itemsContainer" type="xs:string"/>
                <xs:attribute name="itemsEnum" type="xs:string"/>
                <xs:attribute name="datatype" type="fieldDatatypeEnum"/>
                <xs:attribute name="themeNames" type="selectThemeNames"/>

                <xs:attributeGroup ref="hasSize"/>
                <xs:attributeGroup ref="hasLabel"/>
                <xs:attributeGroup ref="hasRequired"/>
                <xs:attributeGroup ref="hasFocusableAttributes"/>
                <xs:attributeGroup ref="hasClassNames"/>
                <xs:attributeGroup ref="hasOverlayClass"/>
                <xs:attributeGroup ref="hasEnabled"/>
                <xs:attributeGroup ref="hasHelperText"/>
                <xs:attributeGroup ref="hasValidation"/>
                <xs:attributeGroup ref="hasPlaceholder"/>
                <xs:attributeGroup ref="hasValueAndElement"/>
                <xs:attributeGroup ref="hasDataContainer"/>
                <xs:attributeGroup ref="hasAriaLabel"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <!-- Details-->
    <xs:complexType name="detailsComponent">
        <xs:complexContent>
            <xs:extension base="baseComponent">
                <xs:sequence minOccurs="0">
                    <xs:element name="tooltip" type="tooltipElement"/>
                    <xs:group ref="layoutOrComponent"/>
                </xs:sequence>

                <xs:attribute name="summaryText" type="resourceString"/>
                <xs:attribute name="themeNames" type="detailsThemeNames"/>
                <xs:attribute name="opened" type="xs:boolean"/>

                <xs:attributeGroup ref="hasSize"/>
                <xs:attributeGroup ref="hasEnabled"/>
                <xs:attributeGroup ref="hasClassNames"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <xs:complexType name="responsiveStepsType">
        <xs:sequence maxOccurs="unbounded">
            <xs:element name="responsiveStep">
                <xs:complexType>
                    <xs:attribute name="minWidth" type="xs:string" use="required"/>
                    <xs:attribute name="columns" type="xs:integer" use="required"/>
                    <xs:attribute name="labelsPosition" type="formLabelsPosition"/>
                </xs:complexType>
            </xs:element>
        </xs:sequence>
    </xs:complexType>

    <xs:complexType name="formItemType">
        <xs:sequence>
            <xs:group ref="standardComponent"/>
        </xs:sequence>

        <xs:attribute name="enabled" type="xs:boolean"/>
        <xs:attribute name="visible" type="xs:boolean"/>
        <xs:attribute name="colspan" type="xs:integer"/>

        <xs:attributeGroup ref="hasLabel"/>
        <xs:attributeGroup ref="hasId"/>
        <xs:attributeGroup ref="hasClassNames"/>
        <xs:attributeGroup ref="hasClickNotifierAttributes"/>
    </xs:complexType>

    <!-- Form-->
    <xs:complexType name="formLayoutComponent">
        <xs:complexContent>
            <xs:extension base="baseComponent">

                <xs:sequence>
                    <xs:element name="responsiveSteps" type="responsiveStepsType" minOccurs="0"/>
                    <xs:element name="formItem" type="formItemType" minOccurs="0"/>
                    <xs:group ref="standardComponent"/>
                    <xs:any namespace="##other" minOccurs="0" maxOccurs="unbounded"/>
                </xs:sequence>

                <xs:attribute name="dataContainer" type="xs:string"/>
                <xs:attribute name="labelsPosition" type="formLabelsPosition"/>

                <xs:attributeGroup ref="hasSize"/>
                <xs:attributeGroup ref="hasEnabled"/>
                <xs:attributeGroup ref="hasClassNames"/>
                <xs:attributeGroup ref="hasClickNotifierAttributes"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>


    <!-- Login -->

    <xs:complexType name="baseLoginComponent">
        <xs:complexContent>
            <xs:extension base="baseComponent">
                <xs:sequence>
                    <xs:element name="form" type="loginFormType" minOccurs="0"/>
                    <xs:element name="errorMessage" type="loginErrorMessageType" minOccurs="0"/>
                    <xs:element name="additionalInformation" type="loginAdditionalInformationType" minOccurs="0"/>
                </xs:sequence>

                <xs:attribute name="forgotPasswordButtonVisible" type="xs:boolean"/>

                <xs:attributeGroup ref="hasEnabled"/>
                <xs:attributeGroup ref="hasClassNames"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <xs:complexType name="loginFormComponent">
        <xs:complexContent>
            <xs:extension base="baseLoginComponent">
                <xs:sequence>
                    <xs:element name="form" type="jmixLoginFormType" minOccurs="0"/>
                </xs:sequence>

                <xs:attribute name="rememberMeVisible" type="xs:boolean"/>
                <xs:attribute name="localesVisible" type="xs:boolean"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <xs:complexType name="loginOverlayComponent">
        <xs:complexContent>
            <xs:extension base="baseLoginComponent">
                <xs:sequence minOccurs="0">
                    <xs:element name="header" type="loginHeaderType"/>
                    <xs:element name="customFormArea" type="loginContentAreaType"/>
                    <xs:element name="footer" type="loginContentAreaType"/>
                </xs:sequence>

                <xs:attribute name="opened" type="xs:boolean"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <xs:complexType name="jmixLoginFormType">
        <xs:complexContent>
            <xs:extension base="loginFormType">
                <xs:attribute name="rememberMe" type="resourceString"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <xs:complexType name="loginFormType">
        <xs:attribute name="title" type="resourceString"/>
        <xs:attribute name="username" type="resourceString"/>
        <xs:attribute name="password" type="resourceString"/>
        <xs:attribute name="submit" type="resourceString"/>
        <xs:attribute name="forgotPassword" type="resourceString"/>
    </xs:complexType>

    <xs:complexType name="loginErrorMessageType">
        <xs:attribute name="title" type="resourceString"/>
        <xs:attribute name="message" type="resourceString"/>
        <xs:attribute name="username" type="resourceString"/>
        <xs:attribute name="password" type="resourceString"/>
    </xs:complexType>

    <xs:complexType name="loginAdditionalInformationType">
        <xs:attribute name="message" type="resourceString"/>
    </xs:complexType>

    <xs:complexType name="loginHeaderType">
        <xs:attribute name="title" type="resourceString"/>
        <xs:attribute name="description" type="resourceString"/>
    </xs:complexType>

    <xs:complexType name="loginContentAreaType">
        <xs:sequence minOccurs="0">
            <xs:group ref="layoutOrComponent"/>
        </xs:sequence>
    </xs:complexType>

    <!-- Upload -->
    <xs:complexType name="uploadComponent">
        <xs:complexContent>
            <xs:extension base="baseComponent">
                <!-- DropLabel attributes-->
                <xs:attribute name="dropLabel" type="resourceString"/>
                <xs:attribute name="dropLabelIcon" type="vaadinIconEnum"/>

                <!-- UploadButton attributes-->
                <xs:attribute name="uploadText" type="resourceString"/>
                <xs:attribute name="uploadIcon" type="vaadinIconEnum"/>

                <xs:attribute name="acceptedFileTypes" type="xs:string"/>
                <xs:attribute name="autoUpload" type="xs:boolean"/>
                <xs:attribute name="dropAllowed" type="xs:boolean"/>
                <xs:attribute name="maxFiles" type="xs:int"/>
                <xs:attribute name="maxFileSize" type="xs:int"/>

                <xs:attribute name="receiverType" type="uploadReceiverEnum"/>
                <xs:attribute name="receiverFqn" type="xs:string"/>

                <xs:attributeGroup ref="hasClassNames"/>
                <xs:attributeGroup ref="hasSize"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <!-- FileUploadField -->

    <xs:complexType name="fileUploadFieldComponent">
        <xs:complexContent>
            <xs:extension base="baseUploadFieldComponent">
                <xs:attribute name="fileName" type="resourceString"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <!-- FileStorageUploadField -->

    <xs:complexType name="fileStorageUploadFieldComponent">
        <xs:complexContent>
            <xs:extension base="baseUploadFieldComponent">
                <xs:attribute name="fileStoragePutMode" type="fileStoragePutMode"/>
                <xs:attribute name="fileStorageName" type="xs:string"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <xs:complexType name="baseUploadFieldComponent">
        <xs:complexContent>
            <xs:extension base="baseFieldComponent">
                <xs:choice minOccurs="0">
                    <xs:element name="tooltip" type="tooltipElement"/>
                </xs:choice>

                <xs:attribute name="uploadText" type="resourceString"/>
                <xs:attribute name="fileNotSelectedText" type="resourceString"/>
                <xs:attribute name="fileTooBigText" type="resourceString"/>
                <xs:attribute name="incorrectFileTypeText" type="resourceString"/>
                <xs:attribute name="processingStatusText" type="resourceString"/>
                <xs:attribute name="connectingStatusText" type="resourceString"/>
                <xs:attribute name="remainingTimeText" type="resourceString"/>
                <xs:attribute name="remainingTimeUnknownText" type="resourceString"/>
                <xs:attribute name="uploadDialogTitle" type="resourceString"/>
                <xs:attribute name="uploadDialogCancelText" type="resourceString"/>

                <xs:attribute name="clearButtonAriaLabel" type="resourceString"/>
                <xs:attribute name="clearButtonVisible" type="xs:boolean"/>
                <xs:attribute name="fileNameVisible" type="xs:boolean"/>

                <xs:attribute name="maxFileSize" type="xs:int"/>
                <xs:attribute name="acceptedFileTypes" type="xs:string"/>
                <xs:attribute name="uploadIcon" type="vaadinIconEnum"/>
                <xs:attribute name="dropAllowed" type="xs:boolean"/>

                <xs:attributeGroup ref="hasRequired"/>
                <xs:attributeGroup ref="hasValidation"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <xs:simpleType name="fileStoragePutMode">
        <xs:restriction base="xs:string">
            <xs:enumeration value="MANUAL"/>
            <xs:enumeration value="IMMEDIATE"/>
        </xs:restriction>
    </xs:simpleType>

    <!-- Image -->
    <xs:complexType name="imageComponent">
        <xs:complexContent>
            <xs:extension base="imageHtmlComponent">
                <xs:attributeGroup ref="hasDataContainer"/>
                <xs:attribute name="themeNames" type="imageThemeNames"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <!-- CodeEditor -->
    <xs:complexType name="codeEditorComponent">
        <xs:complexContent>
            <xs:extension base="baseComponent">
                <xs:sequence>
                    <xs:element name="tooltip" minOccurs="0" type="tooltipElement"/>
                    <xs:element name="validators" minOccurs="0" type="stringValidatorType"/>
                </xs:sequence>

                <xs:attribute name="highlightActiveLine" type="xs:boolean"/>
                <xs:attribute name="highlightGutterLine" type="xs:boolean"/>
                <xs:attribute name="showGutter" type="xs:boolean"/>
                <xs:attribute name="showLineNumbers" type="xs:boolean"/>
                <xs:attribute name="showPrintMargin" type="xs:boolean"/>
                <xs:attribute name="printMarginColumn" type="xs:integer"/>
                <xs:attribute name="fontSize" type="xs:string"/>

                <xs:attribute name="mode" type="codeEditorMode"/>
                <xs:attribute name="theme" type="codeEditorTheme"/>

                <xs:attributeGroup ref="hasClassNames"/>
                <xs:attributeGroup ref="hasEnabled"/>
                <xs:attributeGroup ref="hasValidation"/>
                <xs:attributeGroup ref="hasSize"/>
                <xs:attributeGroup ref="hasHelperText"/>
                <xs:attributeGroup ref="hasLabel"/>
                <xs:attributeGroup ref="hasValueAndElement"/>
                <xs:attributeGroup ref="hasRequired"/>
                <xs:attributeGroup ref="hasFocusableAttributes"/>
                <xs:attributeGroup ref="hasTitle"/>
                <xs:attributeGroup ref="hasDataContainer"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <!-- VirtualList -->
    <xs:complexType name="virtualListComponent">
        <xs:complexContent>
            <xs:extension base="baseComponent">
                <xs:attributeGroup ref="hasSize"/>
                <xs:attributeGroup ref="hasClassNames"/>
                <xs:attributeGroup ref="hasEnabled"/>
                <xs:attributeGroup ref="hasFocusableAttributes"/>

                <xs:attribute name="itemsContainer" type="xs:string"/>
                <xs:attribute name="itemsEnum" type="xs:string"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <!--    GridColumnVisibility-->
    <xs:complexType name="gridColumnVisibilityComponent">
        <xs:complexContent>
            <xs:extension base="baseComponent">
                <xs:sequence>
                    <xs:element name="menuItem" minOccurs="0" type="gridColumnVisibilityMenuItemType"/>
                </xs:sequence>

                <xs:attributeGroup ref="hasSize"/>
                <xs:attributeGroup ref="hasClassNames"/>
                <xs:attributeGroup ref="hasEnabled"/>
                <xs:attributeGroup ref="hasFocusableAttributes"/>
                <xs:attributeGroup ref="hasText"/>
                <xs:attributeGroup ref="hasIcon"/>

                <xs:attribute name="themeNames" type="gridColumnVisibilityThemeNames"/>
                <xs:attribute name="dataGrid" type="xs:string" use="required"/>
                <xs:attribute name="include" type="xs:string"/>
                <xs:attribute name="exclude" type="xs:string"/>
                <xs:attribute name="showAllEnabled" type="xs:boolean"/>
                <xs:attribute name="hideAllEnabled" type="xs:boolean"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <xs:complexType name="gridColumnVisibilityMenuItemType">
        <xs:attribute name="refColumn" type="xs:string" use="required"/>
        <xs:attribute name="text" type="resourceString"/>
    </xs:complexType>

    <!--    MenuFilterField-->
    <xs:complexType name="menuFilterFieldComponent">
        <xs:complexContent>
            <xs:extension base="baseComponent">
                <xs:choice minOccurs="0">
                    <xs:element name="tooltip" type="tooltipElement"/>

                    <xs:element name="prefix" minOccurs="0" type="prefixOrSuffixComponent"/>
                    <xs:element name="suffix" minOccurs="0" type="prefixOrSuffixComponent"/>
                </xs:choice>

                <xs:attribute name="value" type="xs:string"/>
                <xs:attribute name="autofocus" type="xs:boolean"/>
                <xs:attribute name="autoselect" type="xs:boolean"/>
                <xs:attribute name="themeNames" type="menuFilterFieldThemeNames"/>
                <xs:attribute name="clearButtonVisible" type="xs:boolean"/>
                <xs:attribute name="menu" type="xs:string" use="required"/>
                <xs:attribute name="filterMode" type="menuFilterFieldFilterMode"/>

                <xs:attributeGroup ref="hasTitle"/>
                <xs:attributeGroup ref="hasPlaceholder"/>
                <xs:attributeGroup ref="hasValueChangeMode"/>
                <xs:attributeGroup ref="hasFocusableAttributes"/>
                <xs:attributeGroup ref="hasAriaLabel"/>

                <xs:attributeGroup ref="hasSize"/>
                <xs:attributeGroup ref="hasLabel"/>
                <xs:attributeGroup ref="hasEnabled"/>
                <xs:attributeGroup ref="hasClassNames"/>
                <xs:attributeGroup ref="hasHelperText"/>
                <xs:attributeGroup ref="hasValueAndElement"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <xs:simpleType name="menuFilterFieldFilterMode">
        <xs:restriction base="xs:string">
            <xs:enumeration value="CASE_SENSITIVE"/>
            <xs:enumeration value="CASE_INSENSITIVE"/>
        </xs:restriction>
    </xs:simpleType>

    <!-- RichTextEditorComponent -->
    <xs:complexType name="richTextEditorComponent">
        <xs:complexContent>
            <xs:extension base="baseComponent">
                <xs:attributeGroup ref="hasDataContainer"/>
                <xs:attributeGroup ref="hasLabel"/>
                <xs:attributeGroup ref="hasEnabled"/>
                <xs:attributeGroup ref="hasClassNames"/>
                <xs:attributeGroup ref="hasSize"/>
                <xs:attributeGroup ref="hasHelperText"/>
                <xs:attributeGroup ref="hasValueAndElement"/>
                <xs:attributeGroup ref="hasAriaLabel"/>

                <xs:attribute name="valueChangeMode" type="valueChangeModeEnum"/>
                <xs:attribute name="themeNames" type="richTextEditorThemeNames"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <!-- HorizontalMenu -->
    <xs:complexType name="horizontalMenuComponent">
        <xs:complexContent>
            <xs:extension base="baseComponent">
                <xs:attribute name="loadMenuConfig" type="xs:boolean"/>

                <xs:attributeGroup ref="hasSize"/>
                <xs:attributeGroup ref="hasClassNames"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <!--    HTML-->

    <!-- Html -->
    <xs:complexType name="htmlComponent">
        <xs:complexContent>
            <xs:extension base="baseComponent">
                <xs:sequence>
                    <xs:element name="content" minOccurs="0">
                        <xs:complexType mixed="true"/>
                    </xs:element>
                </xs:sequence>

                <xs:attribute name="content" type="resourceString"/>
                <xs:attribute name="file" type="resourceString"/>

                <xs:attributeGroup ref="hasClassNames"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <!-- Anchor-->
    <xs:complexType name="anchor">
        <xs:complexContent>
            <xs:extension base="htmlContainerWithAria">
                <xs:attribute name="href" type="xs:string"/>
                <xs:attribute name="target" type="anchorTarget"/>

                <xs:attributeGroup ref="hasFocusableAttributes"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <!-- Param-->
    <xs:complexType name="paramHtmlComponent">
        <xs:complexContent>
            <xs:extension base="baseHtmlComponent">
                <xs:attribute name="name" type="xs:string"/>
                <xs:attribute name="value" type="xs:string"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <!-- Image-->
    <xs:complexType name="imageHtmlComponent">
        <xs:complexContent>
            <xs:extension base="baseClickableHtmlContainer">
                <xs:attribute name="resource" type="xs:string"/>
                <xs:attribute name="alternateText" type="resourceString"/>

                <xs:attributeGroup ref="hasAriaLabel"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <!-- Input-->
    <xs:complexType name="inputHtmlComponent">
        <xs:complexContent>
            <xs:extension base="baseComponent">
                <xs:attribute name="type" type="inputTypeEnum"/>

                <xs:attributeGroup ref="hasSize"/>
                <xs:attributeGroup ref="hasEnabled"/>
                <xs:attributeGroup ref="hasFocusableAttributes"/>
                <xs:attributeGroup ref="hasClassNames"/>
                <xs:attributeGroup ref="hasAriaLabel"/>
                <xs:attributeGroup ref="hasPlaceholder"/>
                <xs:attributeGroup ref="hasValueChangeMode"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <!-- IFrame-->
    <xs:complexType name="iframeHtmlComponent">
        <xs:complexContent>
            <xs:extension base="baseHtmlComponent">
                <xs:attribute name="name" type="xs:string"/>
                <xs:attribute name="allow" type="xs:string"/>
                <xs:attribute name="resource" type="xs:string"/>
                <xs:attribute name="resourceDoc" type="xs:string"/>
                <xs:attribute name="sandbox" type="sandboxTypeEnum"/>
                <xs:attribute name="importance" type="importanceTypeEnum"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <!-- HtmlObject-->
    <xs:complexType name="htmlObjectComponent">
        <xs:complexContent>
            <xs:extension base="baseClickableHtmlContainer">
                <xs:attribute name="data" type="xs:string"/>
                <xs:attribute name="type" type="xs:string"/>

                <xs:attributeGroup ref="hasFocusableAttributes"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <!-- Label-->
    <xs:complexType name="labelComponent">
        <xs:complexContent>
            <xs:extension base="baseHtmlContainer">
                <xs:attribute name="setFor" type="xs:string"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <!-- NativeButton-->
    <xs:complexType name="nativeButtonComponent">
        <xs:complexContent>
            <xs:extension base="clickableHtmlContainerWithArea">
                <xs:attributeGroup ref="hasFocusableAttributes"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <xs:complexType name="nativeDetailsComponent">
        <xs:complexContent>
            <xs:extension base="baseHtmlComponent">
                <xs:sequence minOccurs="0">
                    <xs:group ref="layoutOrComponent"/>
                </xs:sequence>

                <xs:attribute name="open" type="xs:boolean"/>
                <xs:attribute name="summaryText" type="resourceString"/>

                <xs:attributeGroup ref="hasClickNotifierAttributes"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <xs:complexType name="rangeInputComponent">
        <xs:complexContent>
            <xs:extension base="baseComponent">
                <xs:attribute name="min" type="xs:double"/>
                <xs:attribute name="max" type="xs:double"/>
                <xs:attribute name="step" type="xs:double"/>
                <xs:attribute name="orientation" type="rangeInputOrientationEnum"/>

                <xs:attributeGroup ref="hasAriaLabel"/>
                <xs:attributeGroup ref="hasClassNames"/>
                <xs:attributeGroup ref="hasEnabled"/>
                <xs:attributeGroup ref="hasSize"/>
                <xs:attributeGroup ref="hasFocusableAttributes"/>
                <xs:attributeGroup ref="hasValueChangeMode"/>
                <xs:attributeGroup ref="hasValueAndElement"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <!-- Filters -->

    <!-- GenericFilter -->
    <xs:complexType name="genericFilterComponent">
        <xs:complexContent>
            <xs:extension base="baseComponent">
                <xs:sequence>
                    <xs:element name="actions" minOccurs="0">
                        <xs:complexType>
                            <xs:sequence>
                                <xs:choice maxOccurs="unbounded">
                                    <xs:element name="action" type="genericFilterAction"/>
                                </xs:choice>
                            </xs:sequence>
                        </xs:complexType>
                    </xs:element>

                    <xs:element name="responsiveSteps" type="responsiveStepsType" minOccurs="0"/>
                    <xs:element name="tooltip" type="tooltipElement" minOccurs="0"/>

                    <xs:element name="conditions" minOccurs="0" type="filterConditions"/>
                    <xs:element name="configurations" minOccurs="0" type="filterConfigurations"/>
                    <xs:element name="properties" minOccurs="0">
                        <xs:complexType>
                            <xs:attribute name="include" type="xs:string" use="required"/>
                            <xs:attribute name="exclude" type="xs:string"/>
                            <xs:attribute name="excludeProperties" type="xs:string"/>
                            <xs:attribute name="excludeRecursively" type="xs:boolean"/>
                        </xs:complexType>
                    </xs:element>
                </xs:sequence>

                <xs:attribute name="dataLoader" type="xs:string" use="required"/>
                <xs:attribute name="autoApply" type="xs:boolean"/>
                <xs:attribute name="applyShortcut" type="xs:string"/>
                <xs:attribute name="summaryText" type="resourceString"/>
                <xs:attribute name="themeNames" type="detailsThemeNames"/>
                <xs:attribute name="opened" type="xs:boolean"/>
                <xs:attribute name="propertyHierarchyDepth" type="xs:integer"/>

                <xs:attributeGroup ref="hasSize"/>
                <xs:attributeGroup ref="hasEnabled"/>
                <xs:attributeGroup ref="hasClassNames"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <xs:complexType name="filterConditions">
        <xs:sequence>
            <xs:element name="groupFilter" type="baseGroupFilterComponent" minOccurs="0"/>
            <xs:element name="propertyFilter" type="basePropertyFilterComponent" minOccurs="0"/>
            <xs:element name="jpqlFilter" type="baseJpqlFilterComponent" minOccurs="0"/>
        </xs:sequence>
    </xs:complexType>

    <xs:complexType name="filterConfigurations">
        <xs:sequence>
            <xs:element name="configuration" type="filterConfiguration"/>
        </xs:sequence>
    </xs:complexType>

    <xs:complexType name="filterConfiguration">
        <xs:sequence>
            <xs:element name="groupFilter" type="baseGroupFilterComponent" minOccurs="0"/>
            <xs:element name="propertyFilter" type="basePropertyFilterComponent" minOccurs="0"/>
            <xs:element name="jpqlFilter" type="baseJpqlFilterComponent" minOccurs="0"/>
        </xs:sequence>

        <xs:attribute name="id" type="xs:string" use="required"/>
        <xs:attribute name="name" type="resourceString"/>
        <xs:attribute name="default" type="xs:boolean"/>
        <xs:attribute name="operation" type="groupFilterOperation"/>
    </xs:complexType>

    <xs:complexType name="baseSingleFilterComponent">
        <xs:complexContent>
            <xs:extension base="baseComponent">
                <xs:sequence>
                    <xs:group ref="layoutOrComponent"/>
                    <xs:element name="tooltip" type="tooltipElement" minOccurs="0"/>
                    <xs:element name="validators" type="constraintValidatorType" minOccurs="0"/>
                </xs:sequence>
                <xs:attribute name="parameterName" type="xs:string"/>

                <xs:attributeGroup ref="hasEnabled"/>
                <xs:attributeGroup ref="hasLabel"/>
                <xs:attributeGroup ref="hasClassNames"/>
                <xs:attributeGroup ref="hasValidation"/>
                <xs:attributeGroup ref="hasHelperText"/>
                <xs:attributeGroup ref="hasRequired"/>
                <xs:attributeGroup ref="hasValueAndElement"/>
                <xs:attributeGroup ref="hasFocusableAttributes"/>
                <xs:attributeGroup ref="hasAriaLabel"/>

                <xs:attribute name="labelVisible" type="xs:boolean"/>

                <xs:attribute name="themeNames" type="xs:string"/>

                <xs:attribute name="defaultValue" type="xs:string"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <!-- GroupFilter -->

    <xs:complexType name="baseGroupFilterComponent">
        <xs:complexContent>
            <xs:extension base="baseComponent">
                <xs:sequence>
                    <xs:element name="responsiveSteps" type="responsiveStepsType" minOccurs="0"/>

                    <xs:element name="groupFilter" type="baseGroupFilterComponent" minOccurs="0"/>
                    <xs:element name="propertyFilter" type="basePropertyFilterComponent" minOccurs="0"/>
                    <xs:element name="jpqlFilter" type="baseJpqlFilterComponent" minOccurs="0"/>
                </xs:sequence>

                <xs:attribute name="summaryText" type="resourceString"/>
                <xs:attribute name="operation" type="groupFilterOperation" use="required"/>
                <xs:attribute name="operationTextVisible" type="xs:boolean"/>

                <xs:attributeGroup ref="hasEnabled"/>
                <xs:attributeGroup ref="hasClassNames"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <xs:complexType name="groupFilterComponent">
        <xs:complexContent>
            <xs:extension base="baseGroupFilterComponent">
                <xs:attribute name="dataLoader" type="xs:string" use="required"/>
                <xs:attribute name="autoApply" type="xs:boolean"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <!-- JpqlFilter -->

    <xs:complexType name="baseJpqlFilterComponent">
        <xs:complexContent>
            <xs:extension base="baseSingleFilterComponent">
                <xs:sequence>
                    <xs:element name="condition" type="conditionType" minOccurs="1" maxOccurs="1"/>
                </xs:sequence>

                <xs:attribute name="parameterClass" type="xs:string" use="required"/>
                <xs:attribute name="hasInExpression" type="xs:boolean"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <xs:complexType name="jpqlFilterComponent">
        <xs:complexContent>
            <xs:extension base="baseJpqlFilterComponent">
                <xs:attributeGroup ref="hasSize"/>
                <xs:attribute name="labelPosition" type="labelPositionType"/>
                <xs:attribute name="labelWidth" type="componentSize"/>

                <xs:attribute name="dataLoader" type="xs:string" use="required"/>
                <xs:attribute name="autoApply" type="xs:boolean"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <!-- PropertyFilter -->

    <xs:complexType name="basePropertyFilterComponent">
        <xs:complexContent>
            <xs:extension base="baseSingleFilterComponent">
                <xs:attribute name="property" type="xs:string" use="required"/>

                <xs:attribute name="operation" type="propertyFilterOperation" use="required"/>
                <xs:attribute name="operationEditable" type="xs:boolean"/>
                <xs:attribute name="operationTextVisible" type="xs:boolean"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <xs:complexType name="propertyFilterComponent">
        <xs:complexContent>
            <xs:extension base="basePropertyFilterComponent">
                <xs:attributeGroup ref="hasSize"/>

                <xs:attribute name="labelPosition" type="labelPositionType"/>
                <xs:attribute name="labelWidth" type="componentSize"/>

                <xs:attribute name="dataLoader" type="xs:string" use="required"/>
                <xs:attribute name="autoApply" type="xs:boolean"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>


    <!-- Facets -->

    <xs:complexType name="facets">
        <xs:sequence>
            <xs:choice minOccurs="0" maxOccurs="unbounded">
                <xs:element name="dataLoadCoordinator" type="dataLoadCoordinatorType" minOccurs="0"/>
                <xs:element name="urlQueryParameters" type="urlQueryParametersType" minOccurs="0"/>
                <xs:element name="timer" type="timerType" minOccurs="0"/>
                <xs:element name="settings" type="settingsFacetType" minOccurs="0"/>

                <!-- allow custom facets from any namespace -->
                <xs:any/>
            </xs:choice>
        </xs:sequence>
    </xs:complexType>

    <!-- DataLoadCoordinator -->

    <xs:complexType name="dataLoadCoordinatorType">
        <xs:sequence>
            <xs:choice minOccurs="0" maxOccurs="unbounded">
                <xs:element name="refresh" type="dataLoadCoordinatorTriggerType" minOccurs="0" maxOccurs="unbounded"/>
            </xs:choice>
        </xs:sequence>
        <xs:attribute name="id" type="xs:string"/>
        <xs:attribute name="auto" type="xs:boolean"/>
        <xs:attribute name="containerPrefix" type="xs:string"/>
        <xs:attribute name="componentPrefix" type="xs:string"/>
    </xs:complexType>

    <xs:complexType name="dataLoadCoordinatorTriggerType">
        <xs:sequence>
            <xs:choice minOccurs="0" maxOccurs="unbounded">
                <xs:element name="onViewEvent" type="onViewEventType"/>
                <xs:element name="onContainerItemChanged" type="onContainerItemChangedType"/>
                <xs:element name="onComponentValueChanged" type="onComponentValueChangedType"/>
            </xs:choice>
        </xs:sequence>

        <xs:attribute name="loader" type="xs:string" use="required"/>
    </xs:complexType>

    <xs:complexType name="onViewEventType">
        <xs:attribute name="type" type="onViewEventEnum" use="required"/>
    </xs:complexType>

    <xs:simpleType name="onViewEventEnum">
        <xs:restriction base="xs:string">
            <xs:enumeration value="Init"/>
            <xs:enumeration value="BeforeShow"/>
            <xs:enumeration value="Ready"/>
        </xs:restriction>
    </xs:simpleType>

    <xs:complexType name="onContainerItemChangedType">
        <xs:attribute name="container" use="required"/>
        <xs:attribute name="param" type="xs:string"/>
    </xs:complexType>

    <xs:complexType name="onComponentValueChangedType">
        <xs:attribute name="component" use="required"/>
        <xs:attribute name="param" type="xs:string"/>
        <xs:attribute name="likeClause" type="likeClauseEnum"/>
    </xs:complexType>

    <xs:simpleType name="likeClauseEnum">
        <xs:restriction base="xs:string">
            <xs:enumeration value="NONE"/>
            <xs:enumeration value="CASE_SENSITIVE"/>
            <xs:enumeration value="CASE_INSENSITIVE"/>
        </xs:restriction>
    </xs:simpleType>

    <!-- urlQueryParameters -->

    <xs:complexType name="urlQueryParametersType">
        <xs:sequence>
            <xs:choice minOccurs="0" maxOccurs="unbounded">
                <xs:element name="pagination" type="paginationUrlQueryParametersType" minOccurs="0"
                            maxOccurs="unbounded"/>
                <xs:element name="genericFilter" type="genericFilterUrlQueryParametersType" minOccurs="0"
                            maxOccurs="unbounded"/>
                <xs:element name="propertyFilter" type="propertyFilterUrlQueryParametersType" minOccurs="0"
                            maxOccurs="unbounded"/>
                <xs:element name="dataGridFilter" type="dataGridFilterUrlQueryParametersType" minOccurs="0"
                            maxOccurs="unbounded"/>
            </xs:choice>
        </xs:sequence>
        <xs:attribute name="id" type="xs:string"/>
    </xs:complexType>


    <xs:complexType name="paginationUrlQueryParametersType">
        <xs:attribute name="id" type="xs:string"/>
        <xs:attribute name="component" type="xs:string" use="required"/>
        <xs:attribute name="firstResultParam" type="xs:string"/>
        <xs:attribute name="maxResultsParam" type="xs:string"/>
    </xs:complexType>

    <xs:complexType name="genericFilterUrlQueryParametersType">
        <xs:attribute name="id" type="xs:string"/>
        <xs:attribute name="component" type="xs:string" use="required"/>
        <xs:attribute name="configurationParam" type="xs:string"/>
        <xs:attribute name="conditionParam" type="xs:string"/>
    </xs:complexType>

    <xs:complexType name="propertyFilterUrlQueryParametersType">
        <xs:attribute name="id" type="xs:string"/>
        <xs:attribute name="component" type="xs:string" use="required"/>
        <xs:attribute name="param" type="xs:string"/>
    </xs:complexType>

    <xs:complexType name="dataGridFilterUrlQueryParametersType">
        <xs:attribute name="id" type="xs:string"/>
        <xs:attribute name="component" type="xs:string" use="required"/>
        <xs:attribute name="param" type="xs:string"/>
    </xs:complexType>

    <!--    Timer-->
    <xs:complexType name="timerType">
        <xs:attribute name="id" type="xs:string" use="required"/>
        <xs:attribute name="delay" type="xs:integer" use="required"/>
        <xs:attribute name="autostart" type="xs:boolean"/>
        <xs:attribute name="repeating" type="xs:boolean"/>
    </xs:complexType>

    <!-- SettingsFacet -->

    <xs:complexType name="settingsFacetType">
        <xs:sequence>
            <xs:element name="component" minOccurs="0" type="settingsComponentType"/>
        </xs:sequence>

        <xs:attribute name="id" type="xs:string"/>
        <xs:attribute name="auto" type="xs:boolean"/>
    </xs:complexType>

    <xs:complexType name="settingsComponentType">
        <xs:attribute name="id" type="xs:string" use="required"/>
        <xs:attribute name="enabled" type="xs:boolean"/>
    </xs:complexType>

    <!--  -->

    <xs:group name="standardComponent">
        <xs:sequence>
            <xs:choice maxOccurs="unbounded">
                <!--HTML Components-->
                <xs:group ref="htmlHeaders"/>
                <xs:group ref="htmlLists"/>
                <xs:element name="html" type="htmlComponent"/>
                <xs:element name="div" type="baseClickableHtmlContainer"/>
                <xs:element name="span" type="baseClickableHtmlContainer"/>
                <xs:element name="section" type="baseClickableHtmlContainer"/>
                <xs:element name="pre" type="baseClickableHtmlContainer"/>
                <xs:element name="p" type="baseClickableHtmlContainer"/>
                <xs:element name="nav" type="clickableHtmlContainerWithArea"/>
                <xs:element name="param" type="paramHtmlComponent"/>
                <xs:element name="main" type="clickableHtmlContainerWithArea"/>
                <xs:element name="hr" type="baseHtmlComponent"/>
                <xs:element name="header" type="baseClickableHtmlContainer"/>
                <xs:element name="footer" type="baseClickableHtmlContainer"/>
                <xs:element name="aside" type="baseClickableHtmlContainer"/>
                <xs:element name="emphasis" type="baseClickableHtmlContainer"/>
                <xs:element name="anchor" type="anchor"/>
                <xs:element name="nativeLabel" type="labelComponent"/>
                <xs:element name="nativeButton" type="nativeButtonComponent"/>
                <xs:element name="nativeDetails" type="nativeDetailsComponent"/>
                <xs:element name="rangeInput" type="rangeInputComponent"/>
                <xs:element name="article" type="baseClickableHtmlContainer"/>
                <xs:element name="input" type="inputHtmlComponent"/>
                <xs:element name="image" type="imageComponent"/>
                <xs:element name="iframe" type="iframeHtmlComponent"/>
                <xs:element name="htmlObject" type="htmlObjectComponent"/>
                <xs:element name="descriptionList" type="baseHtmlDescription"/>
                <xs:element name="term" type="baseHtmlDescription"/>
                <xs:element name="description" type="baseHtmlDescription"/>

                <!-- Layout -->
                <xs:element name="vbox" type="componentLayout"/>
                <xs:element name="hbox" type="componentLayout"/>
                <xs:element name="flexLayout" type="flexLayoutComponent"/>
                <xs:element name="formLayout" type="formLayoutComponent"/>
                <xs:element name="scroller" type="scrollerContainer"/>
                <xs:element name="split" type="splitContainer"/>
                <xs:element name="tabs" type="tabsContainer"/>
                <xs:element name="accordion" type="accordionContainer"/>

                <!-- Component -->
                <xs:element name="drawerToggle" type="drawerToggleComponent"/>
                <xs:element name="userIndicator" type="userIndicatorComponent"/>
                <xs:element name="listMenu" type="listMenuComponent"/>
                <xs:element name="button" type="buttonComponent"/>
                <xs:element name="avatar" type="avatarComponent"/>
                <xs:element name="icon" type="iconComponent"/>
                <xs:element name="svgIcon" type="svgIconComponent"/>
                <xs:element name="fontIcon" type="fontIconComponent"/>
                <xs:element name="select" type="selectComponent"/>
                <xs:element name="details" type="detailsComponent"/>
                <xs:element name="checkbox" type="checkboxComponent"/>
                <xs:element name="datePicker" type="datePickerComponent"/>
                <xs:element name="textArea" type="textAreaComponent"/>
                <xs:element name="textField" type="textFieldComponent"/>
                <xs:element name="emailField" type="emailFieldComponent"/>
                <xs:element name="bigDecimalField" type="bigDecimalFieldComponent"/>
                <xs:element name="integerField" type="integerFieldComponent"/>
                <xs:element name="numberField" type="numberFieldComponent"/>
                <xs:element name="passwordField" type="passwordFieldComponent"/>
                <xs:element name="timePicker" type="timePickerComponent"/>
                <xs:element name="dateTimePicker" type="dateTimePickerComponent"/>
                <xs:element name="dropdownButton" type="dropdownButtonComponent"/>
                <xs:element name="comboButton" type="comboButtonComponent"/>
                <xs:element name="comboBox" type="comboBoxComponent"/>
                <xs:element name="multiSelectComboBox" type="multiSelectComboBoxComponent"/>
                <xs:element name="multiSelectComboBoxPicker" type="multiSelectComboBoxPickerComponent"/>
                <xs:element name="valuePicker" type="valuePickerComponent"/>
                <xs:element name="multiValuePicker" type="valuePickerComponent"/>
                <xs:element name="entityPicker" type="entityPickerComponent"/>
                <xs:element name="entityComboBox" type="entityComboBoxComponent"/>
                <xs:element name="radioButtonGroup" type="radioButtonGroupComponent"/>
                <xs:element name="checkboxGroup" type="checkboxGroupComponent"/>
                <xs:element name="listBox" type="listBoxComponent"/>
                <xs:element name="multiSelectListBox" type="multiSelectListBoxComponent"/>
                <xs:element name="progressBar" type="progressBarComponent"/>
                <xs:element name="dataGrid" type="dataGridComponent"/>
                <xs:element name="treeDataGrid" type="treeDataGridComponent"/>
                <xs:element name="loginForm" type="loginFormComponent"/>
                <xs:element name="loginOverlay" type="loginOverlayComponent"/>
                <xs:element name="simplePagination" type="simplePaginationComponent"/>
                <xs:element name="tabSheet" type="tabSheetComponent"/>
                <xs:element name="fileUploadField" type="fileUploadFieldComponent"/>
                <xs:element name="fileStorageUploadField" type="fileStorageUploadFieldComponent"/>
                <xs:element name="upload" type="uploadComponent"/>
                <xs:element name="propertyFilter" type="propertyFilterComponent"/>
                <xs:element name="jpqlFilter" type="jpqlFilterComponent"/>
                <xs:element name="groupFilter" type="groupFilterComponent"/>
                <xs:element name="genericFilter" type="genericFilterComponent"/>
                <xs:element name="codeEditor" type="codeEditorComponent"/>
                <xs:element name="virtualList" type="virtualListComponent"/>
                <xs:element name="gridColumnVisibility" type="gridColumnVisibilityComponent"/>
                <xs:element name="menuFilterField" type="menuFilterFieldComponent"/>
                <xs:element name="horizontalMenu" type="horizontalMenuComponent"/>
                <xs:element name="richTextEditor" type="richTextEditorComponent"/>
            </xs:choice>
        </xs:sequence>
    </xs:group>

    <!-- Inner element choice -->
    <xs:group name="layoutOrComponent">
        <xs:sequence>
            <xs:choice minOccurs="0" maxOccurs="unbounded">
                <xs:group ref="standardComponent"/>
                <xs:any namespace="##other" minOccurs="0" maxOccurs="unbounded"/>
            </xs:choice>
        </xs:sequence>
    </xs:group>

    <xs:group name="singleLayoutOrComponent">
        <xs:sequence>
            <xs:choice minOccurs="0">
                <xs:group ref="standardComponent"/>
                <xs:any namespace="##other" minOccurs="0" maxOccurs="unbounded"/>
            </xs:choice>
        </xs:sequence>
    </xs:group>

    <xs:complexType name="rootLayout">
        <xs:complexContent>
            <xs:extension base="baseLayout">
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <xs:complexType name="componentLayout">
        <xs:complexContent>
            <xs:extension base="baseLayout">
                <xs:attributeGroup ref="hasId"/>
                <xs:attribute name="visible" type="xs:boolean"/>
                <xs:attribute name="colspan" type="xs:integer"/>
                <xs:attribute name="alignSelf" type="alignEnum"/>
                <xs:attribute name="css" type="xs:string"/>
                <xs:attribute name="themeNames" type="spacingThemeNames"/>

                <xs:attributeGroup ref="hasClickNotifierAttributes"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <xs:complexType name="flexLayoutComponent">
        <xs:complexContent>
            <xs:extension base="baseComponent">
                <xs:group ref="layoutOrComponent"/>

                <xs:attribute name="expand" type="xs:string"/>
                <xs:attribute name="contentAlignment" type="contentAlignmentEnum"/>
                <xs:attribute name="flexDirection" type="flexDirectionEnum"/>
                <xs:attribute name="flexWrap" type="flexWrapEnum"/>

                <xs:attributeGroup ref="hasFlexible"/>
                <xs:attributeGroup ref="hasClickNotifierAttributes"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <xs:complexType name="baseLayout">
        <xs:group ref="layoutOrComponent"/>

        <xs:attribute name="expand" type="xs:string"/>

        <xs:attributeGroup ref="hasThemable"/>
        <xs:attributeGroup ref="hasFlexible"/>
    </xs:complexType>

    <xs:complexType name="conditionType">
        <xs:sequence>
            <xs:any namespace="##other" minOccurs="1" maxOccurs="1"/>
        </xs:sequence>
    </xs:complexType>

</xs:schema>
