/*
 * Copyright 2019 Haulmont.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

plugins {
    id 'groovy'
    id 'com.gradle.plugin-publish' version '1.1.0'
}

group = 'io.jmix.gradle'

repositories {
    mavenCentral()
    gradlePluginPortal()
}

dependencies {
    implementation localGroovy()

    implementation 'org.springframework.boot:spring-boot-gradle-plugin:3.2.1'
    implementation 'com.vaadin:vaadin-gradle-plugin:24.3.9'

    implementation('org.dom4j:dom4j:2.1.3') {
        exclude group: 'xpp3', module: 'xpp3'
        exclude group: 'pull-parser', module: 'pull-parser'
    }
    implementation 'org.javassist:javassist:3.24.1-GA'
    implementation 'commons-io:commons-io:2.11.0'
    implementation 'org.apache.commons:commons-lang3:3.12.0'
    implementation 'com.google.guava:guava:31.1-jre'
}

tasks.jar {
    manifest {
        String bomVersion
        if (version.contains('-M')) {
            // If publishing a milestone version, set BOM to snapshot of the same minor version,
            // e.g. plugin 1.3.0-M1 -> BOM 1.3.999-SNAPSHOT
            bomVersion = version.substring(0, version.lastIndexOf('.')) + '.999-SNAPSHOT'
        } else {
            // Otherwise it's a snapshot or release version and BOM should be the same
            bomVersion = version
        }
        attributes("Jmix-BOM-Version": bomVersion)
    }
}

task sourcesJar(type: Jar) {
    from sourceSets.main.allJava
    archiveClassifier = 'sources'
}

gradlePlugin {
    website = 'http://jmix.io'
    vcsUrl = 'https://github.com/jmix-framework/jmix'
    plugins {
        jmixPlugin {
            id = 'io.jmix'
            displayName = 'Jmix Framework Gradle Plugin'
            description = 'Jmix Framework Gradle Plugin'
            tags.set(['jmix', 'spring'])
            implementationClass = 'io.jmix.gradle.JmixPlugin'
        }
    }
}

publishing {
    if (rootProject.hasProperty('jmixUploadUrl')) {
        repositories {
            maven {
                url = rootProject['jmixUploadUrl']
                credentials {
                    username rootProject['jmixUploadUser']
                    password rootProject['jmixUploadPassword']
                }
                allowInsecureProtocol = true
            }
        }
    }
}
