<?xml version="1.0" encoding="UTF-8"?>
<!--
  ~ Copyright 2022 Haulmont.
  ~
  ~ Licensed under the Apache License, Version 2.0 (the "License");
  ~ you may not use this file except in compliance with the License.
  ~ You may obtain a copy of the License at
  ~
  ~     http://www.apache.org/licenses/LICENSE-2.0
  ~
  ~ Unless required by applicable law or agreed to in writing, software
  ~ distributed under the License is distributed on an "AS IS" BASIS,
  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  ~ See the License for the specific language governing permissions and
  ~ limitations under the License.
  -->
<jmixCodeSnippets xmlns="http://jmix.io/schema/core/code-snippets">

    <category name="Reports">

        <codeSnippet name="Running a report by a report code using ReportRunner" contextTypes="service,controller">

            <inject variable="reportRunner" classQualifiedName="io.jmix.reports.runner.ReportRunner"/>

            <stringInputParameter code="code" text="Report code"/>
            <optionsInputParameter code="outputType" text="Output type">
                <option name="XLS" value="XLS"/>
                <option name="DOC" value="DOC"/>
                <option name="PDF" value="PDF"/>
                <option name="HTML" value="HTML"/>
                <option name="DOCX" value="DOCX"/>
                <option name="XLSX" value="XLSX"/>
                <option name="CUSTOM" value="CUSTOM"/>
                <option name="CSV" value="CSV"/>
                <option name="TABLE" value="TABLE"/>
                <!--<option name="CHART" value="CHART"/>-->
                <!--<option name="PIVOT_TABLE" value="PIVOT_TABLE"/>-->
            </optionsInputParameter>
            <stringInputParameter code="outputNamePattern" text="Output name pattern"/>

            <text language="java">
                ${IS_FINAL}io.jmix.reports.yarg.reporting.ReportOutputDocument document = reportRunner.byReportCode("${code}")
                    .withParams(java.util.Map.of("param", "param1"))
                    .withOutputType(io.jmix.reports.entity.ReportOutputType.${outputType})
                    .withOutputNamePattern("${outputNamePattern}")
                    .run();

                ${IS_FINAL}byte[] reportContent = document.getContent();
                ${IS_FINAL}String reportName = document.getDocumentName();
            </text>

            <text language="kotlin">
                val document = reportRunner.byReportCode("${code}")
                    .withParams(java.util.Map.of("param", "param1"))
                    .withOutputType(io.jmix.reports.entity.ReportOutputType.${outputType})
                    .withOutputNamePattern("${outputNamePattern}")
                    .run();

                val reportContent = document.content
                val reportName = document.documentName
            </text>

            <description>
                <![CDATA[
                    Run a report by code and get the result content using <code>ReportRunner</code>.<br>
                    <a href="https://docs.jmix.io/jmix/reports/run-report.html#report-runner">Jmix Documentation</a>
                ]]>
            </description>
        </codeSnippet>

        <codeSnippet name="Running a report by a report entity using ReportRunner" contextTypes="service,controller">
            <inject variable="reportRunner" classQualifiedName="io.jmix.reports.runner.ReportRunner"/>

            <variableInputParameter code="report" text="Report" jmixEntity="true"/>
            <optionsInputParameter code="outputType" text="Output type">
                <option name="XLS" value="XLS"/>
                <option name="DOC" value="DOC"/>
                <option name="PDF" value="PDF"/>
                <option name="HTML" value="HTML"/>
                <option name="DOCX" value="DOCX"/>
                <option name="XLSX" value="XLSX"/>
                <option name="CUSTOM" value="CUSTOM"/>
                <option name="CSV" value="CSV"/>
                <option name="TABLE" value="TABLE"/>
                <!--<option name="CHART" value="CHART"/>-->
                <!--<option name="PIVOT_TABLE" value="PIVOT_TABLE"/>-->
            </optionsInputParameter>
            <stringInputParameter code="outputNamePattern" text="Output name pattern"/>

            <text language="java">
                ${IS_FINAL}io.jmix.reports.yarg.reporting.ReportOutputDocument document = reportRunner.byReportEntity(${report})
                    .withParams(java.util.Map.of("param", "param1"))
                    .withOutputType(io.jmix.reports.entity.ReportOutputType.${outputType})
                    .withOutputNamePattern("${outputNamePattern}")
                    .run();

                ${IS_FINAL}byte[] reportContent = document.getContent();
                ${IS_FINAL}String reportName = document.getDocumentName();
            </text>

            <text language="kotlin">
                val document = reportRunner.byReportEntity("${report}")
                    .withParams(java.util.Map.of("param", "param1"))
                    .withOutputType(io.jmix.reports.entity.ReportOutputType.${outputType})
                    .withOutputNamePattern("${outputNamePattern}")
                    .run()

                val reportContent = document.content
                val reportName = document.documentName
            </text>

            <description>
                <![CDATA[
                    Run a report by report entity and get the result content using <code>ReportRunner</code>.<br>
                    <a href="https://docs.jmix.io/jmix/reports/run-report.html#report-runner">Jmix Documentation</a>
                ]]>
            </description>

        </codeSnippet>

    </category>

</jmixCodeSnippets>
