<?xml version="1.0" encoding="UTF-8"?>
<!--
  ~ Copyright (c) 2008-2019 Haulmont.
  ~
  ~ Licensed under the Apache License, Version 2.0 (the "License");
  ~ you may not use this file except in compliance with the License.
  ~ You may obtain a copy of the License at
  ~
  ~     http://www.apache.org/licenses/LICENSE-2.0
  ~
  ~ Unless required by applicable law or agreed to in writing, software
  ~ distributed under the License is distributed on an "AS IS" BASIS,
  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  ~ See the License for the specific language governing permissions and
  ~ limitations under the License.
  -->

<xs:schema targetNamespace="http://jmix.io/schema/rest/queries"
           xmlns:xs="http://www.w3.org/2001/XMLSchema"
           xmlns="http://jmix.io/schema/rest/queries"
           elementFormDefault="qualified"
           attributeFormDefault="unqualified">

    <xs:element name="queries" type="queriesType"/>

    <xs:complexType name="queriesType">
        <xs:sequence>
            <xs:element name="query" type="queryType" maxOccurs="unbounded" minOccurs="0"/>
        </xs:sequence>
    </xs:complexType>

    <xs:complexType name="queryType">
        <xs:sequence>
            <xs:element name="jpql" type="xs:string" minOccurs="1" maxOccurs="1"/>
            <xs:element name="params" type="paramsType" maxOccurs="unbounded" minOccurs="0"/>
        </xs:sequence>
        <xs:attribute name="name" type="xs:string" use="required"/>
        <xs:attribute name="entity" type="xs:string" use="required"/>
        <xs:attribute name="fetchPlan" type="xs:string" use="required"/>
        <xs:attribute name="cacheable" type="xs:boolean"/>
        <xs:attribute name="offset" type="xs:integer"/>
        <xs:attribute name="limit" type="xs:integer"/>
    </xs:complexType>

    <xs:complexType name="paramsType">
        <xs:sequence>
            <xs:element name="param" type="paramType" minOccurs="0" maxOccurs="unbounded"/>
        </xs:sequence>
    </xs:complexType>

    <xs:complexType name="paramType">
        <xs:attribute name="name" type="xs:string" use="required"/>
        <xs:attribute name="type" type="xs:string" use="required"/>
    </xs:complexType>

</xs:schema>