/*
 * Copyright 2024 Haulmont.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

apply plugin: 'groovy'
apply plugin: 'io.jmix'

group = 'io.jmix.restds'
archivesBaseName = 'jmix-restds'

dependencies {
    api project(':core')
    compileOnly project(':security')

    api 'org.springframework.security:spring-security-core'
    api 'org.springframework.security:spring-security-config'
    api 'org.springframework.security:spring-security-web'
    api 'org.springframework:spring-webmvc'
    api 'org.springframework:spring-context'

    implementation 'com.fasterxml.jackson.core:jackson-databind'
    implementation 'com.fasterxml.jackson.core:jackson-annotations'
    implementation 'com.fasterxml.jackson.module:jackson-module-jaxb-annotations'
    implementation 'com.fasterxml.jackson.module:jackson-module-jaxb-annotations'
    implementation 'com.fasterxml.jackson.dataformat:jackson-dataformat-yaml'

    testImplementation project(':data')
    testImplementation project(':eclipselink')
    testImplementation project(':security')

    testImplementation 'org.testcontainers:testcontainers:1.20.1'
    testImplementation 'org.junit.jupiter:junit-jupiter-api'
    testImplementation 'org.assertj:assertj-core'
    testImplementation 'org.springframework:spring-test'
    testImplementation 'org.apache.commons:commons-dbcp2'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine'
    testRuntimeOnly 'org.junit.vintage:junit-vintage-engine'
    testRuntimeOnly 'org.hsqldb:hsqldb'
    testRuntimeOnly 'ch.qos.logback:logback-classic'
}

boolean skipRestDsTests = project.rootProject.findProperty('skipRestDsTests')?.toBoolean() ?: false
boolean useStandaloneServiceForRestDsTests = project.rootProject.findProperty('useStandaloneServiceForRestDsTests')?.toBoolean() ?: false

tasks.named('test') {
    onlyIf { !skipRestDsTests }
    if (useStandaloneServiceForRestDsTests) {
        systemProperty('useStandaloneServiceForRestDsTests', true)
    } else {
        dependsOn(':sample-rest-service:bootJar')
    }
}