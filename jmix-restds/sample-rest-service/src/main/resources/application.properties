#
# Copyright 2024 Haulmont.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

server.port = 18080

main.datasource.url = jdbc:hsqldb:file:.jmix/hsqldb/samplerestservice
main.datasource.username = sa
main.datasource.password =

main.liquibase.change-log=io/jmix/samples/restservice/liquibase/changelog.xml


jmix.core.available-locales = en

# consider disabling anonymous access to the docs in production environment by removing this property
jmix.rest.anonymous-url-patterns = /rest/docs/*

# 'debug' level logs SQL generated by EclipseLink ORM
logging.level.eclipselink.logging.sql = info

# 'debug' level logs data store operations
logging.level.io.jmix.core.datastore = info

# 'debug' level logs access control constraints
logging.level.io.jmix.core.AccessLogger = debug

# 'debug' level logs all Jmix debug output
logging.level.io.jmix = info

# 'debug' or 'trace' levels help to troubleshoot security problems
logging.level.org.springframework.security = info

# The client id
spring.security.oauth2.authorizationserver.client.myclient.registration.client-id=myclient
# The client secret
spring.security.oauth2.authorizationserver.client.myclient.registration.client-secret={noop}mysecret
# Enable Client Credential grant for the my-client
spring.security.oauth2.authorizationserver.client.myclient.registration.authorization-grant-types=client_credentials
# Client credentials must be passed in the Authorization header using the HTTP Basic authentication scheme
spring.security.oauth2.authorizationserver.client.myclient.registration.client-authentication_methods=client_secret_basic
# Use opaque tokens instead of JWT
spring.security.oauth2.authorizationserver.client.myclient.token.access-token-format=reference

# Define resource roles for the client
jmix.authserver.client.myclient.client-id = myclient
jmix.authserver.client.myclient.resource-roles = system-full-access