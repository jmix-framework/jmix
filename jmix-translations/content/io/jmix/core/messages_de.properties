#
# Copyright 2021 Haulmont.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

localeDisplayName.de = Deutsch

# Date formats
dateFormat= dd.MM.yyyy
dateTimeFormat= dd.MM.yyyy HH:mm
timeFormat= HH:mm
offsetTimeFormat= HH:mm Z
offsetDateTimeFormat= dd.MM.yyyy HH:mm Z

#Number formats
integerFormat= #,##0
doubleFormat= #,##0.###
decimalFormat= #,##0.00

# Number separators
numberDecimalSeparator= ,
numberGroupingSeparator= .

# Booleans
trueString= Ja
falseString= Nein

jakarta.validation.constraints.NotBlank.message        = darf nicht leer sein
jakarta.validation.constraints.NotEmpty.message        = darf nicht leer sein
jakarta.validation.constraints.Negative.message        = muss kleiner 0 sein
jakarta.validation.constraints.NegativeOrZero.message  = muss kleiner oder gleich 0 sein
jakarta.validation.constraints.Positive.message        = muss größer 0 sein
jakarta.validation.constraints.PositiveOrZero.message  = muss größer oder gleich 0 sein
jakarta.validation.constraints.AssertFalse.message = muss falsch sein
jakarta.validation.constraints.AssertTrue.message = muss wahr sein
jakarta.validation.constraints.DecimalMax.message = muss kleiner sein als ${inclusive == true ? 'or equal to ' : ''}{value}
jakarta.validation.constraints.DecimalMin.message = muss größer sein als ${inclusive == true ? 'or equal to ' : ''}{value}
jakarta.validation.constraints.Digits.message = numerischer Wert außerhalb der erlaubten Grenze (<{integer} digits>.<{fraction} digits> expected)
jakarta.validation.constraints.Future.message = muss in der Zukunft liegen
jakarta.validation.constraints.Max.message = muss kleiner oder gleich {Wert} sein
jakarta.validation.constraints.Min.message = muss größer oder gleich {Wert} sein
jakarta.validation.constraints.NotNull.message = darf nicht null sein
jakarta.validation.constraints.Null.message = muss null sein
jakarta.validation.constraints.Past.message = muss in der Vergangenheit liegen
jakarta.validation.constraints.Pattern.message = muss mit "{regexp}" übereinstimmen.
jakarta.validation.constraints.Size.message = Die Größe muss zwischen {min} und {max} liegen.
jakarta.validation.constraints.Email.message = keine wohlgeformte E-Mail-Adresse

org.hibernate.validator.constraints.CreditCardNumber.message = ungültige Kreditkartennummer
org.hibernate.validator.constraints.EAN.message = ungültiger {type} Barcode
org.hibernate.validator.constraints.Email.message = keine wohlgeformte E-Mail-Adresse
org.hibernate.validator.constraints.Length.message = Die Länge muss zwischen {min} und {max} liegen.
org.hibernate.validator.constraints.LuhnCheck.message = Die Prüfziffer für ${validatedValue} ist ungültig, Luhn Modulo 10 Checksumme ist fehlgeschlagen.
org.hibernate.validator.constraints.Mod10Check.message = Die Prüfziffer für ${validatedValue} ist ungültig, Modulo 10-Prüfsumme ist fehlgeschlagen.
org.hibernate.validator.constraints.Mod11Check.message = Die Prüfziffer für ${validatedValue} ist ungültig, Modulo 11-Prüfsumme ist fehlgeschlagen.
org.hibernate.validator.constraints.ModCheck.message = Die Prüfziffer für ${validatedValue} ist ungültig, ${modType} Checksumme ist fehlgeschlagen.
org.hibernate.validator.constraints.NotBlank.message = darf nicht leer sein
org.hibernate.validator.constraints.NotEmpty.message = darf nicht leer sein
org.hibernate.validator.constraints.ParametersScriptAssert.message = Der Script-Ausdruck "{script}" wurde nicht als wahr interpretiert.
org.hibernate.validator.constraints.Range.message = muss zwischen {min} und {max} liegen.
org.hibernate.validator.constraints.SafeHtml.message = kann unsicheren html-Inhalt haben
org.hibernate.validator.constraints.ScriptAssert.message = Der Script-Ausdruck "{script}" wurde nicht als wahr interpretiert.
org.hibernate.validator.constraints.URL.message = muss eine gültige URL sein
validation.defaultMsg=Inkorrekter Wert von Feld "%s"
validation.required.defaultMsg=%s erforderlich
