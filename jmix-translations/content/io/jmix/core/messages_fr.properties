# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

localeDisplayName.en = Anglais
localeDisplayName.fr = Français

# Date formats
dateFormat=dd/MM/yyyy
dateTimeFormat=dd/MM/yyyy HH:mm
timeFormat=HH:mm
offsetTimeFormat=HH:mm Z
offsetDateTimeFormat=dd/MM/yyyy HH:mm Z

#Number formats
integerFormat=#,##0
doubleFormat=#,##0.###
decimalFormat=#,##0.00

# Number separators
numberDecimalSeparator=.
numberGroupingSeparator=,

# Booleans
trueString=True
falseString=False




jakarta.validation.constraints.AssertFalse.message = doit être faux
jakarta.validation.constraints.AssertTrue.message = doit être vrai
jakarta.validation.constraints.DecimalMax.message = doit être inférieur à ${inclusive == true ? 'ou égale à ' : ''}{value}
jakarta.validation.constraints.DecimalMin.message = doit être supérieur à ${inclusive == true ? 'ou égale à ' : ''}{value}
jakarta.validation.constraints.Digits.message = valeur numérique hors limites (<{integer} chiffres>.<{fraction} chiffres> attendu)
jakarta.validation.constraints.Email.message = pas une adresse e-mail valide
jakarta.validation.constraints.Future.message = doit être dans le futur
jakarta.validation.constraints.Max.message = doit être inférieur ou égale à {value}
jakarta.validation.constraints.Min.message = doit être supérieur ou égale à {value}
jakarta.validation.constraints.Negative.message = doit être inférieur à 0
jakarta.validation.constraints.NegativeOrZero.message = doit être inférieur ou égal à 0
jakarta.validation.constraints.NotBlank.message = ne doit pas être vide
jakarta.validation.constraints.NotEmpty.message = ne doit pas être vide
jakarta.validation.constraints.NotNull.message = ne peut être nul
jakarta.validation.constraints.Null.message = doit être nul
jakarta.validation.constraints.Past.message = doit être dans le passé
jakarta.validation.constraints.Pattern.message = doit correspondre à "{regexp}"
jakarta.validation.constraints.Positive.message = doit être supérieur à 0
jakarta.validation.constraints.PositiveOrZero.message = doit être supérieur ou égal à 0
jakarta.validation.constraints.Size.message = la taille doit être comprise entre {min} et {max}


org.hibernate.validator.constraints.CreditCardNumber.message = numéro de carte de crédit invalide
org.hibernate.validator.constraints.EAN.message = code-barres {type} invalide
org.hibernate.validator.constraints.Email.message = pas une adresse e-mail valide
org.hibernate.validator.constraints.Length.message = La longueur doit être comprise entre {min} et {max}
org.hibernate.validator.constraints.LuhnCheck.message = Le chiffre de contrôle pour ${validatedValue} n'est pas valide, la somme de contrôle Luhn Modulo 10 a échoué
org.hibernate.validator.constraints.Mod10Check.message = Le chiffre de contrôle pour ${validatedValue} n'est pas valide, la somme de contrôle Modulo 10 a échoué
org.hibernate.validator.constraints.Mod11Check.message = Le chiffre de contrôle pour ${validatedValue} n'est pas valide, la somme de contrôle Modulo 11 a échoué
org.hibernate.validator.constraints.ModCheck.message = Le chiffre de contrôle pour ${validatedValue} n'est pas valide, la somme de contrôle de ${modType} a échoué
org.hibernate.validator.constraints.NotBlank.message = peut ne pas être vide
org.hibernate.validator.constraints.NotEmpty.message = peut ne pas être vide
org.hibernate.validator.constraints.ParametersScriptAssert.message = l'expression de script "{script}" n'a pas été évaluée comme vraie
org.hibernate.validator.constraints.Range.message = doit être compris entre {min} et {max}
org.hibernate.validator.constraints.SafeHtml.message = peut avoir un contenu html dangereux
org.hibernate.validator.constraints.ScriptAssert.message = l'expression de script "{script}" n'a pas été évaluée comme vraie
org.hibernate.validator.constraints.URL.message = doit être une URL valide

validation.defaultMsg = Valeur incorrecte du champ "%s"
validation.required.defaultMsg = %s requis


datatype.doubleOutOfRange.message = La valeur est en dehors de la plage d'un nombre décimal (type Double): '%s'
datatype.floatOutOfRange.message = La valeur est en dehors de la plage d'un nombre décimal (type Float): '%s'
datatype.integerOutOfRange.message = La valeur est en dehors de la plage d'un nombre entier (type Integer): '%s'
datatype.longOutOfRange.message = La valeur est en dehors de la plage d'un nombre entier (type Long): '%s'
datatype.shortOutOfRange.message = La valeur est en dehors de la plage d'un nombre entier (type Short): '%s'
datatype.unparseableBoolean.message = Impossible de parser le booléen: '%s'
datatype.unparseableCharacter.message = Chaîne de caractère '%s' trop longue
datatype.unparseableNumber.message = Impossible de parser le nombre: '%s'
datatype.unparseableUuid.message = Impossible de parser l'UUID: '%s'
