#
# Copyright 2021 Haulmont.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

localeDisplayName.en = Inglês
localeDisplayName.ckb = Curdo Central
localeDisplayName.de = Alemão
localeDisplayName.el = Grego moderno
localeDisplayName.es = Espanhol
localeDisplayName.fr = Francês
localeDisplayName.it = Italiano
localeDisplayName.nl = Holandês
localeDisplayName.pt_BR = Português do Brasil
localeDisplayName.ro = Romeno
localeDisplayName.ru = Russo
localeDisplayName.tr = Turco
localeDisplayName.zh_CN = Chinês

# Date formats
dateFormat=dd/MM/yyyy
dateTimeFormat=dd/MM/yyyy HH:mm
timeFormat=HH:mm
offsetTimeFormat=HH:mm Z
offsetDateTimeFormat=dd/MM/yyyy HH:mm Z

#Number formats
integerFormat=#,##0
doubleFormat=#,##0.###
decimalFormat=#,##0.00

# Number separators
numberDecimalSeparator=,
numberGroupingSeparator=.

# Booleans
trueString=Verdadeiro
falseString=Falso

jakarta.validation.constraints.NotBlank.message        = não pode estar em branco
jakarta.validation.constraints.NotEmpty.message        = não pode estar vazio
jakarta.validation.constraints.Negative.message        = deve ser menor que 0
jakarta.validation.constraints.NegativeOrZero.message  = deve ser menor ou igual a 0
jakarta.validation.constraints.Positive.message        = deve ser maior que 0
jakarta.validation.constraints.PositiveOrZero.message  = deve ser maior ou igual a 0
jakarta.validation.constraints.AssertFalse.message = deve ser falso
jakarta.validation.constraints.AssertTrue.message = deve ser verdadeiro
jakarta.validation.constraints.DecimalMax.message = deve ser menor que ${inclusive == true ? 'ou igual a ' : ''}{value}
jakarta.validation.constraints.DecimalMin.message = deve ser maior que ${inclusive == true ? 'ou igual a ' : ''}{value}
jakarta.validation.constraints.Digits.message = valor numérico fora dos limites (<{integer} dígitos>.<{fraction} dígitos> esperado)
jakarta.validation.constraints.Future.message = deve estar no futuro
jakarta.validation.constraints.Max.message = deve ser menor ou igual a {value}
jakarta.validation.constraints.Min.message = deve ser maior ou igual a {value}
jakarta.validation.constraints.NotNull.message = não deve ser nulo
jakarta.validation.constraints.Null.message = deve ser nulo
jakarta.validation.constraints.Past.message = deve estar no passado
jakarta.validation.constraints.Pattern.message = deve combinar com o padrão "{regexp}"
jakarta.validation.constraints.Size.message = tamanho deve estar entre {min} e {max}
jakarta.validation.constraints.Email.message = não é um endereço de email válido

org.hibernate.validator.constraints.CreditCardNumber.message = cartão de crédito inválido
org.hibernate.validator.constraints.EAN.message = código de barras {type} inválido
org.hibernate.validator.constraints.Email.message = não é um endereço de email válido
org.hibernate.validator.constraints.Length.message = comprimento deve estar entre {min} e {max}
org.hibernate.validator.constraints.LuhnCheck.message = O dígito verificador de ${validatedValue} é inválido, a soma de verificação do Módulo 10 de Luhn falhou
org.hibernate.validator.constraints.Mod10Check.message = O dígito verificador de ${validatedValue} é inválido, a soma de verificação do Módulo 10 falhou
org.hibernate.validator.constraints.Mod11Check.message = O dígito verificador de ${validatedValue} é inválido, a soma de verificação do Módulo 11 falhou
org.hibernate.validator.constraints.ModCheck.message = O dígito verificador de ${validatedValue} é inválido, ${modType} a soma de verificação falhou
org.hibernate.validator.constraints.NotBlank.message = não deve estar em branco
org.hibernate.validator.constraints.NotEmpty.message = não deve estar vazio
org.hibernate.validator.constraints.ParametersScriptAssert.message = a expressão "{script}" não foi avaliada como verdadeira
org.hibernate.validator.constraints.Range.message = deve estar entre {min} e {max}
org.hibernate.validator.constraints.SafeHtml.message = pode ter conteúdo HTML inseguro
org.hibernate.validator.constraints.ScriptAssert.message = a expressão "{script}" não foi avaliada como verdadeira
org.hibernate.validator.constraints.URL.message = deve ser um URL válido

validation.defaultMsg = Valor incorreto para o campo "%s"
validation.required.defaultMsg = %s requerido
