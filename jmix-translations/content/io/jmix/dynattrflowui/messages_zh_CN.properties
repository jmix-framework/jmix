#
# Copyright 2020 Haulmont.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

# CategoryBrowse
menu-config.dynat_Category.browse=动态属性
io.jmix.dynattrflowui.view.category/browseCaption=动态属性
io.jmix.dynattrflowui.view.category/categoriesTable.applyChanges=应用更改
io.jmix.dynattrflowui.view.category/notification.changesApplied=已应用更改

# CategoryEdit
io.jmix.dynattrflowui.view.category/editorCaption=分类编辑器
io.jmix.dynattrflowui.view.category/mainTab.caption=常规
io.jmix.dynattrflowui.view.category/attributesLocationTab.caption=属性位置
io.jmix.dynattrflowui.view.category/nameField.required=名称必需
io.jmix.dynattrflowui.view.category/entityTypeField.required=实体类型必需
io.jmix.dynattrflowui.view.category/localizationTab.caption=本地化

# CategoryAttrsFragment
io.jmix.dynattrflowui.view.categoryattr/categoryAttrsTable.defaultValue=默认值
io.jmix.dynattrflowui.view.categoryattr/categoryAttrsTable.currentDate=当前日期
io.jmix.dynattrflowui.view.categoryattr/categoryAttrsTable.entityNotFound=未找到实体
io.jmix.dynattrflowui.view.categoryattr/classNotFound=未找到类
io.jmix.dynattrflowui.view.categoryattr/editorCaption=分类属性编辑
# CategoryAttrsEdit
io.jmix.dynattrflowui.view.categoryattr/mainTab.caption=常规
io.jmix.dynattrflowui.view.categoryattr/nameField.required=名称必需
io.jmix.dynattrflowui.view.categoryattr/codeField.required=编码必填
io.jmix.dynattrflowui.view.categoryattr/dataTypeField.required=属性类型必须指定
io.jmix.dynattrflowui.view.categoryattr/enumerationField.required=枚举必需
io.jmix.dynattrflowui.view.categoryattr/lookupField.contextHelp=可通过查找字段来选择属性值。\
  在 "计算值和选项" 配置可能的值列表。\
  也可以配置 join 和 where 子句查找实体属性。
io.jmix.dynattrflowui.view.categoryattr/entityClassField.required=实体类型必需
io.jmix.dynattrflowui.view.categoryattr/viewField.required=实体界面必需
io.jmix.dynattrflowui.view.categoryattr/widthField.validationMessage=宽度不正确
io.jmix.dynattrflowui.view.categoryattr/rowsCountField.validationMessage=行数应该是介于1和40之间的数字
io.jmix.dynattrflowui.view.categoryattr/calculatedValuesAndOptionsTab.caption=计算值和选项
io.jmix.dynattrflowui.view.categoryattr/constraintWizardField.caption=约束创建向导
io.jmix.dynattrflowui.view.categoryattr/selectEntityType=选择实体类型
io.jmix.dynattrflowui.view.categoryattr/minGreaterThanMax=最小值不能大于最大值
io.jmix.dynattrflowui.view.categoryattr/defaultLessThanMin=默认值不能小于最小值
io.jmix.dynattrflowui.view.categoryattr/defaultGreaterThanMax=默认值不能大于最大值
io.jmix.dynattrflowui.view.categoryattr/defaultValueIsNotInEnumeration=默认值不是枚举
io.jmix.dynattrflowui.view.categoryattr/dependsOnAttributes.validationMsg=在 “属性依赖于” 列表中必须至少有一个属性，\
  否则，转换脚本将无法执行。
io.jmix.dynattrflowui.view.categoryattr/uniqueName=已存在相同名称的属性
io.jmix.dynattrflowui.view.categoryattr/uniqueCode=已存在相同编码的属性
io.jmix.dynattrflowui.view.categoryattr/localizationTab.caption=本地化
io.jmix.dynattrflowui.view.categoryattr/visibilityTab.caption=可见性
io.jmix.dynattrflowui.view.categoryattr/visibilityTab.help=<div>为需要展示动态属性的界面配置 <b>dynamicAttributes</b> facet。 </div>
io.jmix.dynattrflowui.view.categoryattr/targetViewsTable.create=添加目标界面
io.jmix.dynattrflowui.view.categoryattr/targetViewsTable.remove=删除目标界面
io.jmix.dynattrflowui.view.categoryattr/optionsLoaderGroovyScript=加载选项的 Groovy 脚本
io.jmix.dynattrflowui.view.categoryattr/optionsLoaderGroovyScriptHelp=<div>可以用 Groovy 脚本加载动态属性选项。\
  <br/>脚本需要返回选项列表。\
  <br/>脚本中可通过 <code>entity</code> 变量访问带有动态属性的实体。\
  <br/>\
  <br/>示例：\
  <br/><code>return ['code_1', 'code_2', entity.code]</code></div>
io.jmix.dynattrflowui.view.categoryattr/optionsLoaderSqlScript=加载选项的 SQL 脚本
io.jmix.dynattrflowui.view.categoryattr/optionsLoaderSqlScriptHelp=<div>可以用 SQL 脚本加载动态属性选项。\
  <br/>脚本需要返回选项列表。\
  <br/>脚本中可通过 <code>entity</code> 变量访问带有动态属性的实体。\
  <br/>\
  <br/>示例：\
  <br/><code>select street from db_Address e where e.strName = ${entity.+&lt;dynamicAttrCode&gt;}</code>\
  <br/>where &lt;dynamicAttrCode&gt; - code of the corresponding dynamic attribute</div>
io.jmix.dynattrflowui.view.categoryattr/joinClause=Join 子句
io.jmix.dynattrflowui.view.categoryattr/joinClauseHelp=<div>该字段的内容会被添加到 “from” 子句中。内容需要以逗号、“join” 或 “left join” 开头。\
  <br/>动态属性可以通过 <code>entity</code> 变量访问：\
  <br/>${entity.+&lt;dynamicAttrCode&gt;}, where &lt;dynamicAttrCode&gt; - 相应动态属性的编码\
  <br/>{E} 占位符用来表示需要抽取的实体别名。在执行时，会用查询语句中的真正别名替代。\
  <br/>\
  <br/>示例：\
  <br/><code>join {E}.seller s</code></div>
io.jmix.dynattrflowui.view.categoryattr/joinHelperText=<div>该字段的内容会被添加到 “from” 子句中。内容需要以逗号、\
  “join” 或 “left join” 开头。 示例：<code>join {E}.seller s</code></div>
io.jmix.dynattrflowui.view.categoryattr/whereClause=Where 子句
io.jmix.dynattrflowui.view.categoryattr/whereClauseHelp=<div>该字段的内容被通过 “and” 条件添加到 “where” 子句中。内容中不需要写 “where”，会自动添加。\
  <br/>{E} 占位符用来表示需要抽取的实体别名。在执行时，会用查询语句中的真正别名替代。\
  <br/>动态属性可以通过 <code>entity</code> 变量访问。\
  <br/>\
  <br/>示例：\
  <br/><code>{E}.salary > ${entity.+&lt;dynamicAttrCode&gt;} and {E}.department = 'abc'</code>\
  <br/>where &lt;dynamicAttrCode&gt; - 相应动态属性的编码</div>
io.jmix.dynattrflowui.view.categoryattr/validationScript=自定义验证
io.jmix.dynattrflowui.view.categoryattr/validationScriptHelp=</div>可以在保存前对参数应用该 Groovy 脚本进行验证。\
  <br/>如果验证失败，Groovy 脚本需要返回错误消息。否则，脚本不要做任何返回或仅返回 <code>null</code>。\
  <br/>值可以在脚本中通过 <code>value</code> 变量获取。\
  错误消息使用模板字符串返回，这里也可以用 '${value}' 来格式化输出。\
  <br/>\
  <br/>示例：\
  <br/><code>if (!value.startsWith("correctValue")) return "the value '\\${value}' is incorrect"</code></div>
io.jmix.dynattrflowui.view.categoryattr/recalculationScript=值转换脚本
io.jmix.dynattrflowui.view.categoryattr/recalculationScriptHelp=<div>用来对参数值进行转换的 Groovy 脚本。\
  <br/> 脚本中可以使用如下变量：\
  <br/>\
  <br/><code>entity</code> - 当前编辑的实体\
  <br/>\
  <br/><code>dynamicAttributes</code> - 映射（map），key 为属性编码，value 为动态属性值\
  <br/>\
  <br/>使用 dynamicAttributes 映射的转换脚本示例：\
  <br/>\
  <br/><code>if (dynamicAttributes['PassengerNumberOfSeats'] > 9) return 'Bus' else return 'Passenger'</code> \
  <br/>\
  <br/>使用 EntityValues 类的转换脚本示例： \
  <br/>\
  <br/><code>import io.jmix.core.entity.EntityValues;\
  <br/>\
  <br/>if(EntityValues.getValue(entity,"+PassengerNumberofseats") > 9) return 'Bus' else return 'Passenger'</code> \
  <br/>\
  <br/>当每次 “属性依赖于” 列表中的一个属性值发生改变时，都会执行该脚本。</div>
io.jmix.auditui.view.entitylog/entityViewAccessDeniedMessage=无权限访问实体界面，需添加打开界面的权限。
io.jmix.dynattrflowui.view.categoryattr/entityViewAccessDeniedMessage=无权限访问实体界面，需添加打开界面的权限。
# AttributeEnumerationView
io.jmix.dynattrflowui.view.categoryattr/enumerationView.caption=枚举编辑
io.jmix.dynattrflowui.view.categoryattr/localizationBox.caption=本地化
io.jmix.dynattrflowui.view.categoryattr/localizedEnumValuesDataGrid.add=添加
io.jmix.dynattrflowui.view.localization/localizedValuesDataGrid.columnDescription=双击编辑值
io.jmix.dynattrflowui.view.location/columnsCountLookupField.caption=列计数
io.jmix.dynattrflowui.view.location/saveConfigurationBtn.caption=保存配置
# AttributeLocalizationFragment

# AttributeLocationFragment
io.jmix.dynattrflowui.view.location/sourceDataGrid.sourceColumn.caption=属性
io.jmix.dynattrflowui.view.location/targetDataGrid.column.caption=列
# TargetViewComponent
io.jmix.dynattrui.impl.model/TargetViewComponent.view=界面
io.jmix.dynattrui.impl.model/TargetViewComponent.component=组件 ID
# AttributeLocalizedValue
io.jmix.dynattrui.impl.model/AttributeLocalizedValue.name=名称
io.jmix.dynattrui.impl.model/AttributeLocalizedValue.description=描述
io.jmix.dynattrui.impl.model/AttributeLocalizedValue.language=语言
io.jmix.dynattrui.impl.model/AttributeLocalizedValue.locale=语言环境
# AttributeLocalizedEnumValue
io.jmix.dynattrui.impl.model/AttributeLocalizedEnumValue.value=值
io.jmix.dynattrui.impl.model/AttributeLocalizedEnumValue.localizedValues=本地化值

io.jmix.dynattrui.panel/category=分类
io.jmix.dynattrflowui.view.category/categoriesTable.create=新建分类
io.jmix.dynattrflowui.view.category/categoriesTable.name=分类
io.jmix.dynattrflowui.view.category/categoryAttributes.caption=分类属性
io.jmix.dynattrflowui.view.category/nothingToExport=导出数据为空
io.jmix.dynattrflowui.view.category/export=导出
io.jmix.dynattrflowui.view.category/exportFailed=导出失败
io.jmix.dynattrflowui.view.category/exportJSON=导出为 JSON
io.jmix.dynattrflowui.view.category/exportZIP=导出为 ZIP
io.jmix.dynattrflowui.view.category/import=导入
io.jmix.dynattrflowui.view.category/importFailed=导入失败
io.jmix.dynattrflowui.view.category/importSuccessful=动态属性导入成功

