#
# Copyright 2022 Haulmont.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
#
menu-config.quartz=Quartz
io.jmix.quartzflowui.view.jobs/filter=Filtern
io.jmix.quartzflowui.view.jobs/apply=Anwenden
io.jmix.quartzflowui.view.jobs/triggerJob=Jetzt ausführen
io.jmix.quartzflowui.view.jobs/resumeJob=Fortsetzen
io.jmix.quartzflowui.view.jobs/column.jobScheduleDescription.header=Zeitplan Beschreibung
io.jmix.quartzflowui.view.jobs/column.triggerScheduleDescription.header=Beschreibung des Triggers
io.jmix.quartzflowui.view.jobs/column.lastFireDate.header=Datum der letzten Ausführung
io.jmix.quartzflowui.view.jobs/column.nextFireDate.header=Nächstes Ausführungsdatum
io.jmix.quartzflowui.view.jobs/column.startDate.header=Beginn
io.jmix.quartzflowui.view.jobs/column.endDate.header=Ende
io.jmix.quartzflowui.view.jobs/pauseJob=Pausieren
io.jmix.quartzflowui.view.jobs/triggersTabCaption=Trigger
io.jmix.quartzflowui.view.jobs/jobDataParamsTabCaption=Job-Daten-Parameter
io.jmix.quartzflowui.view.jobs/dateTimeWithSeconds=dd.MM.yyyy HH:mm:ss
io.jmix.quartzflowui.view.jobs/jobModelListView.title=Quartz-Jobs
io.jmix.quartzflowui.view.jobs/jobModelListView.menu=Quartz-Jobs
io.jmix.quartzflowui.view.jobs/jobModelDetailView.title=Job
io.jmix.quartzflowui.view.jobs/jobExecuted=Job %s zur Ausführung ausgelöst
io.jmix.quartzflowui.view.jobs/jobPaused=Job %s pausiert
io.jmix.quartzflowui.view.jobs/jobResumed=Job %s fortgesetzt
io.jmix.quartzflowui.view.jobs/jobDeleted=Job %s gelöscht
io.jmix.quartzflowui.view.jobs/nameContains=Name enthält
io.jmix.quartzflowui.view.jobs/classContains=Klasse enthält
io.jmix.quartzflowui.view.jobs/addNewDataParamCaption=Jobs-Datenparameter hinzufügen
io.jmix.quartzflowui.view.jobs/groupContains=Gruppe enthält
io.jmix.quartzflowui.view.jobs/jobState=Zustand des Jobs
io.jmix.quartzflowui.view.jobs/jobAlreadyExistsValidationMessage=Job mit Name: %s und Gruppe: %s kann nicht gespeichert werden, da bereits einer mit dieser Kennung existiert.
io.jmix.quartzflowui.view.jobs/triggerAlreadyExistsValidationMessage=Trigger mit Name: %s und Gruppe: %s kann nicht gespeichert werden, da bereits einer mit dieser Kennung existiert.
io.jmix.quartzflowui.view.jobs/jobDataParamKeyAlreadyExistsValidationMessage=Die Parameterschlüssel der Job-Daten sollten eindeutig sein.
io.jmix.quartzflowui.view.jobs/jobDataParamKeyIsRequired=Schlüssel ist erforderlich
io.jmix.quartzflowui.view.trigger/triggerModelDetailView.title=Trigger-Editor
io.jmix.quartzflowui.view.trigger/invalidCronExpressionValidationMessage=Cron-Ausdruck ist ungültig.
io.jmix.quartzflowui.view.trigger/triggerStartDateInThePastValidationMessage=Der Beginn kann nicht auf einen Zeitpunkt in der Vergangenheit verweisen. Legen Sie den Zeitpunkt in der Zukunft fest oder lassen Sie ihn leer, um den Trigger sofort zu starten.
io.jmix.quartzflowui.view.trigger/cronExpressionHelpText=<div> Cron-Ausdruck ist eine Folge von sechs oder sieben Feldern, die durch Leerzeichen getrennt sind: Sekunde, Minute, Stunde, Tag, Monat, Wochentag und Jahr (optional). Der Monat und der Wochentag können durch die ersten drei Buchstaben ihrer englischen Namen dargestellt werden. Beispiele:<ul><li>0 0/5 * ? * * - feuert alle 5 Minuten</li><li>0 0 0 ? * * - Ausführung jeden Tag um 00:00 Uhr</li><li>0 0 8-10 ? * * * - Ausführung um 8, 9 und 10 Uhr jeden Tag</li><li>0 0/30 8-10 ? * * * - Ausführung jeden Tag um 8:00, 8:30, 9:00, 9:30 und 10 Uhr</li><li>0 10,44 14 ? 3 WED - Ausführung um 14.10 Uhr und um 14.44 Uhr jeden Mittwoch im Monat März</li><li>0 15 10 ? * 6#3 - Ausführung um 10.15 Uhr am dritten Freitag jedes Monats</li><li>0 11 11 11 11 ? - Ausführung jeden 11. November um 11:11 Uhr</li><li>0 0 0 25 12 ? - Ausführung jedes Weihnachten um Mitternacht
io.jmix.quartzflowui.view.trigger/triggerRepeatMode=Wiederholungsmodus
io.jmix.quartzflowui.view.trigger/triggerRepeatModeHelpText=<div>Der Wiederholungsmodus legt fest, wie oft der Trigger ausgelöst werden kann:<ul><li>Einmalig ausführen - der Auslöser wird einmalig ausgelöst, ohne Wiederholung</li><li>Endliche Wiederholungen - Auslöser wird 'Wiederholungsanzahl' + 1 (initial) mal alle 'Wiederholungsintervall' ms ausgelöst</li><li>Für immer ausführen - der Trigger wird für immer alle 'Wiederholungsintervall' ms ausgelöst</li></ul>Die Modi "Endliche Wiederholungen" und "Für immer ausführen" sind durch das Ende (falls vorhanden) begrenzt.</div>
io.jmix.quartzflowui.view.trigger/triggerMisfireInstructionHelpText=<div>Die Fehlauslösungensanweisung definiert das Verhalten, wenn eine Fehlauslösung erkannt wird. Es gibt zwei Arten von Zeitplänen: Einfacher Zeitplan und Cron-Zeitplan.<p>Einfacher Zeitplan:<ul><li><b>Smart Policy</b> - hängt von der "Wiederholungszahl" ab:<ul><li>Ohne Wiederholungen verhält es sich wie <b>'Sofort auslösen'</b></li><li>Bei begrenzten Wiederholungen verhält es sich wie <b> 'Sofort neu ändern mit verbleibender Wiederholungszahl'</b></li><li>Bei unendlichen Wiederholungen verhält es sich wie<b> 'Bei nächster Ausführung ändern mit verbleibender Wiederholungszahl'</b></li></ul></li><li><b>Fehlauslösungen ignorieren</b> - Alle fehlgeschlagenen Ausführungen werden sofort der Reihe nach ausgeführt. Dann geht der Auslöser zurück zum Zeitplan.</li><li><b>Sofort auslösen</b> - führt sofort die erste fehlgeschlagene Ausführung aus. Hinweis: Diese Anweisung sollte nur mit einem "einmaligen" Auslöser (ohne Wiederholungen) verwendet werden. Andernfalls verhält sie sich wie <b>'Sofort neu ändern mit verbleibender Wiederholungszahl'</b></li><li><b>Bei nächster Ausführung ändern mit verbleibender Wiederholungszahl</b> - unternimmt der Scheduler nicht sofort etwas, sondern kehrt zum Zeitplan zurück. Alle fehlgeschlagenen Ausführungen werden später gemäß dem Zeitplan ausgeführt ("Fehlauslösungen" werden in die Zukunft verschoben).</li><li><b>Bei nächster Ausführung ändern mit verbleibender Wiederholungszahl</b> - verwirft der Scheduler fehlgeschlagene Ausführungen und kehrt zum Zeitplan zurück. Fehlgeschlagene Ausführungen gehen verloren (die Gesamtzahl der Ausführungen wird geringer sein als konfiguriert, wenn sie begrenzt sind)</li><li><b>Sofort ändern mit bestehender Wiederholungszahl</b> - führt der Planer die erste fehlgeschlagene Ausführung sofort aus. Die übrigen fehlgeschlagenen Ausführungen werden später gemäß dem Zeitplan ausgeführt (Fehlschläge werden in die Zukunft verschoben)</li><li><b>Sofort neu ändern mit verbleibender Wiederholungszahl</b> - führt der Scheduler die erste fehlgeschlagene Ausführung sofort aus und kehrt zum Zeitplan zurück. Die übrigen fehlgeschlagenen Ausführungen werden verworfen.</li></ul><p>Cron-Zeitplan:<ul><li><b>Smart Policy</b> - verhält sich derzeit wie <b>'Auslösen und Fortfahren'</b></li><li><b>Fehlauslösungen ignorieren</b> - werden alle fehlgeschlagenen Ausführungen sofort nacheinander ausgeführt. Dann geht der Auslöser zurück zum Zeitplan</li><li><b>Auslösen und Fortfahren</b> - führt der Scheduler sofort die erste fehlgeschlagene Ausführung aus und verwirft die anderen. Dann kehrt er zum Zeitplan zurück</li><li><b>Nichts tun</b> - alle fehlgeschlagenen Ausführungen werden verworfen, und der Auslöser kehrt einfach zum Zeitplan zurück</li></ul></div>
io.jmix.quartzflowui.view.trigger/repeatCountHelpText=<div>Definiert die Anzahl der zusätzlichen Ausführungen neben der ersten (Gesamtanzahl der Ausführungen ist 'Anzahl der Wiederholungen' + 1).</div>
io.jmix.quartzflowui.view.template/notification.template.validation.header=Warnung
