#
# Copyright 2022 Haulmont.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
#
menu-config.quartz=Quartz
io.jmix.quartzflowui.view.jobs/filter=Filtro
io.jmix.quartzflowui.view.jobs/apply=Aplicar
io.jmix.quartzflowui.view.jobs/triggerJob=Executar agora
io.jmix.quartzflowui.view.jobs/resumeJob=Retomar
io.jmix.quartzflowui.view.jobs/column.jobScheduleDescription.header=Descrição do agendamento
io.jmix.quartzflowui.view.jobs/column.triggerScheduleDescription.header=Descrição do gatilho
io.jmix.quartzflowui.view.jobs/column.lastFireDate.header=Última data de disparo
io.jmix.quartzflowui.view.jobs/column.nextFireDate.header=Próxima data de disparo
io.jmix.quartzflowui.view.jobs/column.startDate.header=Data de início
io.jmix.quartzflowui.view.jobs/column.endDate.header=Data de término
io.jmix.quartzflowui.view.jobs/pauseJob=Pausar
io.jmix.quartzflowui.view.jobs/triggersTabCaption=Gatilhos
io.jmix.quartzflowui.view.jobs/jobDataParamsTabCaption=Parâmetros de dados do trabalho
io.jmix.quartzflowui.view.jobs/dateTimeWithSeconds=dd/MM/yyyy HH:mm:ss
io.jmix.quartzflowui.view.jobs/jobModelListView.title=Trabalhos Quartz
io.jmix.quartzflowui.view.jobs/jobModelListView.menu=Trabalhos Quartz
io.jmix.quartzflowui.view.jobs/jobModelDetailView.title=Editor de trabalho
io.jmix.quartzflowui.view.jobs/jobExecuted=Trabalho %s acionado para execução
io.jmix.quartzflowui.view.jobs/jobPaused=Trabalho %s pausado
io.jmix.quartzflowui.view.jobs/jobResumed=Trabalho %s retomado
io.jmix.quartzflowui.view.jobs/jobDeleted=Trabalho %s excluído
io.jmix.quartzflowui.view.jobs/nameContains=Nome contém
io.jmix.quartzflowui.view.jobs/classContains=Classe contém
io.jmix.quartzflowui.view.jobs/addNewDataParamCaption=Adicionar parâmetro de dados do trabalho
io.jmix.quartzflowui.view.jobs/groupContains=Grupo contém
io.jmix.quartzflowui.view.jobs/jobState=Estado do trabalho
io.jmix.quartzflowui.view.jobs/jobAlreadyExistsValidationMessage=Não é possível armazenar o trabalho com nome: %s e grupo: %s, porque já existe um com essa identificação.
io.jmix.quartzflowui.view.jobs/triggerAlreadyExistsValidationMessage=Não é possível armazenar o gatilho com nome: %s e grupo: %s, porque já existe um com essa identificação.
io.jmix.quartzflowui.view.jobs/jobDataParamKeyAlreadyExistsValidationMessage=As chaves do parâmetro de dados do trabalho devem ser únicas.
io.jmix.quartzflowui.view.jobs/jobDataParamKeyIsRequired=Chave é obrigatória
io.jmix.quartzflowui.view.trigger/triggerModelDetailView.title=Editor de gatilho
io.jmix.quartzflowui.view.trigger/invalidCronExpressionValidationMessage=A expressão Cron é inválida.
io.jmix.quartzflowui.view.trigger/triggerStartDateInThePastValidationMessage=A data de início não pode apontar para o momento no passado. Defina o momento no futuro ou deixe-o vazio para iniciar o gatilho imediatamente.
io.jmix.quartzflowui.view.trigger/cronExpressionHelpText=<div> A expressão Cron é uma sequência de seis ou sete campos, separados por espaços: segundo, minuto, hora, dia, mês, dia da semana e ano(opcionalmente). \
                    O mês e o dia da semana podem ser representados pelas três primeiras letras de seus nomes em inglês. Exemplos:\
                    <ul>\
                        <li>0 0/5 * * * ? - dispara a cada 5 minutos</li>\
                        <li>0 0 0 * * ? - dispara às 00:00 AM todos os dias</li>\
                        <li>0 0 8-10 * * ? - dispara às 8, 9 e 10 horas todos os dias</li>\
                        <li>0 0/30 8-10 * * ? - dispara todos os dias às 8:00, 8:30, 9:00, 9:30 e 10 horas</li>\
                        <li>0 10,44 14 ? 3 WED - dispara às 2:10 PM e às 2:44 PM todas as quartas-feiras no mês de março</li>\
                        <li>0 15 10 ? * 6#3 - dispara às 10:15 AM na terceira sexta-feira de cada mês</li>\
                        <li>0 11 11 11 11 ? - dispara todos os dias 11 de novembro às 11:11 AM</li>\
                        <li>0 0 0 25 12 ? - dispara todos os Natais à meia-noite</li>\
                    </ul>\
                </div>
io.jmix.quartzflowui.view.trigger/triggerRepeatMode=Modo de repetição
io.jmix.quartzflowui.view.trigger/triggerRepeatModeHelpText=<div>O modo de repetição define quantas vezes o gatilho pode ser disparado:\
                <ul>\
                    <li>Executar uma vez - o gatilho será disparado uma vez, sem repetição</li>\
                    <li>Repetições finitas - o gatilho será disparado 'Contagem de repetição' + 1 (inicial) vezes a cada 'Intervalo de repetição' ms</li>\
                    <li>Executar para sempre - o gatilho será disparado para sempre a cada 'Intervalo de repetição' ms</li>\
                </ul>\
                Os modos 'Repetições Finitas' e 'Executar para Sempre' são limitados pela Data de Término (se existir).\
            </div>
io.jmix.quartzflowui.view.trigger/triggerMisfireInstructionHelpText=<div>A Instrução de Falha define o comportamento se uma falha do gatilho for detectada. Existem dois tipos de programações: Programação Simples e Programação Cron.\
            <p>Programação simples:\
            <ul>\
                 <li><b>Política inteligente</b> - depende da 'contagem de repetição':\
                     <ul>\
                         <li>Sem repetições, age como <b>'Disparar agora'</b></li>\
                         <li>Com repetições limitadas, age como <b>'Reagendar agora com contagem de repetição existente'</b></li>\
                         <li>Com repetições infinitas, age como <b>'Reagendar próximo com contagem de repetição restante'</b></li>\
                     </ul>\
                 </li>\
                 <li><b>Ignorar falhas</b> - todas as execuções com falha são imediatamente executadas uma a uma. Em seguida, o gatilho volta para a programação</li>\
                 <li><b>Disparar agora</b> - executa imediatamente a primeira execução com falha. Nota: esta instrução deve ser usada apenas com um gatilho 'único' (sem repetições). Caso contrário, age como <b>'Reagendar agora com contagem de repetição restante'</b></li>\
                 <li><b>Reagendar próximo com contagem de repetição existente</b> - o programador não faz nada imediatamente e volta para a programação. Todas as execuções com falha serão executadas mais tarde de acordo com a programação (as falhas são 'deslocadas' para o futuro)</li>\
                 <li><b>Reagendar próximo com contagem de repetição restante</b> - o programador descarta as execuções com falha e volta para a programação. As execuções com falha são perdidas (o número total de execuções será menor do que o configurado se forem limitadas)</li>\
                 <li><b>Reagendar agora com contagem de repetição existente</b> - o programador executa imediatamente a primeira execução com falha. O restante das execuções com falha será executado mais tarde de acordo com a programação (as falhas são 'deslocadas' para o futuro)</li>\
                 <li><b>Reagendar agora com contagem de repetição restante</b> - o programador executa imediatamente a primeira execução com falha e volta para a programação. As execuções com falha restantes são descartadas.</li>\
            </ul>\
            <p>Programação Cron:\
            <ul>\
                 <li><b>Política inteligente</b> - atualmente age como <b>'Disparar e prosseguir'</b></li>\
                 <li><b>Ignorar falhas</b> - todas as execuções com falha são imediatamente executadas uma a uma. Em seguida, o gatilho volta para a programação</li>\
                 <li><b>Disparar e prosseguir</b> - o programador executa imediatamente a primeira execução com falha e descarta as outras. Em seguida, ele volta para a programação</li>\
                 <li><b>Não fazer nada</b> - todas as execuções com falha são descartadas, e o gatilho simplesmente volta para a programação</li>\
            </ul>\
        </div>
io.jmix.quartzflowui.view.trigger/repeatCountHelpText=<div>Define a quantidade de execuções adicionais além da primeira \
                (a quantidade total de execuções será 'Contagem de repetição' + 1).</div>
io.jmix.quartzflowui.view.template/notification.template.validation.header=Alerta