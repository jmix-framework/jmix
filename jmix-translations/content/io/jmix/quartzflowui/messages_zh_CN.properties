#
# Copyright 2022 Haulmont.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
#
menu-config.quartz=Quartz
io.jmix.quartzflowui.view.jobs/filter=过滤器
io.jmix.quartzflowui.view.jobs/apply=应用
io.jmix.quartzflowui.view.jobs/triggerJob=执行
io.jmix.quartzflowui.view.jobs/resumeJob=继续
io.jmix.quartzflowui.view.jobs/column.lastFireDate.header=上次执行时间
io.jmix.quartzflowui.view.jobs/column.nextFireDate.header=下次执行时间
io.jmix.quartzflowui.view.jobs/column.startDate.header=开始时间
io.jmix.quartzflowui.view.jobs/column.endDate.header=结束时间
io.jmix.quartzflowui.view.jobs/pauseJob=暂停
io.jmix.quartzflowui.view.jobs/triggersTabCaption=触发器
io.jmix.quartzflowui.view.jobs/jobDataParamsTabCaption=作业数据参数
io.jmix.quartzflowui.view.jobs/dateTimeWithSeconds=yyyy-MM-dd HH:mm:ss
io.jmix.quartzflowui.view.jobs/jobModelListView.title=Quartz 作业
io.jmix.quartzflowui.view.jobs/jobModelListView.menu=Quartz 作业
io.jmix.quartzflowui.view.jobs/jobModelDetailView.title=作业编辑
io.jmix.quartzflowui.view.jobs/jobExecuted=作业 %s 开始执行
io.jmix.quartzflowui.view.jobs/jobPaused=作业 %s 已暂停
io.jmix.quartzflowui.view.jobs/jobResumed=作业 %s 已继续
io.jmix.quartzflowui.view.jobs/jobDeleted=作业 %s 已删除
io.jmix.quartzflowui.view.jobs/nameContains=名称包含
io.jmix.quartzflowui.view.jobs/classContains=类包含
io.jmix.quartzflowui.view.jobs/addNewDataParamCaption=添加作业数据参数
io.jmix.quartzflowui.view.jobs/groupContains=分组包含
io.jmix.quartzflowui.view.jobs/jobState=作业状态
io.jmix.quartzflowui.view.jobs/jobAlreadyExistsValidationMessage=作业无法保存，名称：%s 分组：%s，已存在同名作业。
io.jmix.quartzflowui.view.jobs/triggerAlreadyExistsValidationMessage=无法保存触发器，名称：%s 分组：%s，已存在同名触发器。
io.jmix.quartzflowui.view.jobs/jobDataParamKeyAlreadyExistsValidationMessage=作业数据参数键值需唯一。
io.jmix.quartzflowui.view.jobs/jobDataParamKeyIsRequired=键值必填
io.jmix.quartzflowui.view.trigger/invalidCronExpressionValidationMessage=Cron表达式错误。
io.jmix.quartzflowui.view.trigger/cronExpressionHelpText=<div> Cron 表达式是由以空格分隔的6位或者7位字段组成，分别表示秒、分、时、天、月、周、年（可选）。\
                    月和周可以用英语单词的前三个字母表示。示例：\
                    <ul>\
                        <li>0 0/5 * * * ? - 每五分钟触发</li>\
                        <li>0 0 0 * * ? - 每天 00:00 点触发</li>\
                        <li>0 0 8-10 * * ? - 每天8、9、10点触发</li>\
                        <li>0 0/30 8-10 * * ? - 每天 8:00、8:30、9:00、9:30、10:00 触发</li>\
                        <li>0 10,44 14 ? 3 WED - 3月的每个周三的下午 2:10 和 2:44 触发</li>\
                        <li>0 15 10 ? * 6#3 - 每月的第三个周五上午 10:15 触发</li>\
                        <li>0 11 11 11 11 ? - 每年11月11号上午 11:11 触发</li>\
                        <li>0 0 0 25 12 ? - 每个圣诞节的0点触发</li>\
                    </ul>\
                </div>
io.jmix.quartzflowui.view.jobs/column.jobScheduleDescription.header=计划
io.jmix.quartzflowui.view.jobs/column.triggerScheduleDescription.header=触发器
io.jmix.quartzflowui.view.trigger/triggerModelDetailView.title=触发器编辑
io.jmix.quartzflowui.view.trigger/triggerStartDateInThePastValidationMessage=开始日期不能指向过去的时间。设置将来的时间或留空立即开始执行。
io.jmix.quartzflowui.view.trigger/triggerRepeatMode=重复模式
io.jmix.quartzflowui.view.trigger/triggerRepeatModeHelpText=<div>重复模式定义触发器可以触发的次数：\
  <ul>\
      <li>执行一次 - 触发器仅触发一次，不会重复执行</li>\
      <li>有限次重复 - 触发器按设定的重复次数（n）执行 1+n 次，重复间隔为设定的时间（毫秒）</li>\
      <li>无限次重复 - 触发器以设定的时间间隔（毫秒）无限重复执行</li>\
  </ul>\
  ‘有限次重复’ 和 ‘无限次重复’ 受设置的结束时间限制。\
</div>
io.jmix.quartzflowui.view.trigger/triggerMisfireInstructionHelpText=<div>哑火指令定义当触发器哑火时该如何处理。支持两种类型的计划：简易计划和 Cron 计划。\
  <p>简易计划：\
  <ul>\
       <li><b>智能策略</b> - 依赖‘重复次数’的设置\
           <ul>\
               <li>如果配置不重复执行，则与 <b>‘立即执行’</b> 行为一致</li>\
               <li>如果配置有限次重复，则与 <b>‘按已配置重复次数计划立即运行’</b> 行为一致</li>\
               <li>如果配置无限次重复，则与 <b>‘按剩余置重复次数计划下一次运行’</b> 行为一致</li>\
           </ul>\
       </li>\
       <li><b>忽略哑火</b> - 所有哑火未执行的操作一个接一个执行。然后触发器按计划继续运行。</li>\
       <li><b>立即执行</b> - 立即执行第一个哑火的操作。该指令仅能用于单次的触发器（即不重复执行），否则，与 <b>‘按剩余重复次数计划立即运行’</b> 行为一致</li>\
       <li><b>按已配置重复次数计划下一次运行</b> - 当下不执行任何操作，触发器按计划继续运行。所有哑火的操作会在后续计划中执行（哑火的操作‘延后’执行）</li>\
       <li><b>按剩余置重复次数计划下一次运行</b> - 忽略哑火的操作，触发器按计划继续运行。丢弃哑火的操作（即在有限次重复执行的配置时，执行的总次数将减少）</li>\
       <li><b>按已配置重复次数计划立即运行</b> - 立即执行第一个哑火的操作，剩余哑火的操作会在后续计划中执行（哑火的操作‘延后’执行）</li>\
       <li><b>按剩余重复次数计划立即运行</b> - 立即执行第一个哑火的操作，然后触发器按计划继续运行。忽略剩余哑火的操作。</li>\
  </ul>\
  <p>Cron 计划：\
  <ul>\
       <li><b>智能策略</b> - 与 <b>‘执行并继续’</b> 行为一致</li>\
       <li><b>忽略哑火</b> - 所有哑火未执行的操作一个接一个执行。然后触发器按计划继续运行。</li>\
       <li><b>执行并继续</b> - 立即执行第一个哑火的操作，然后触发器按计划继续运行。忽略剩余哑火的操作。</li>\
       <li><b>不执行</b> - 忽略所有哑火的操作，触发器回到按计划执行</li>\
  </ul>\
</div>
io.jmix.quartzflowui.view.trigger/repeatCountHelpText=<div>定义除了第一次执行之外需要重复的执行次数 \
  （执行总次数为 ‘重复次数’+1）</div>
io.jmix.quartzflowui.view.template/notification.template.validation.header=警告

