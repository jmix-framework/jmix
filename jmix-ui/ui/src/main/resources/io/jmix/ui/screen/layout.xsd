<?xml version="1.0" encoding="UTF-8"?>
<!--
  ~ Copyright (c) 2008-2018 Haulmont.
  ~
  ~ Licensed under the Apache License, Version 2.0 (the "License");
  ~ you may not use this file except in compliance with the License.
  ~ You may obtain a copy of the License at
  ~
  ~     http://www.apache.org/licenses/LICENSE-2.0
  ~
  ~ Unless required by applicable law or agreed to in writing, software
  ~ distributed under the License is distributed on an "AS IS" BASIS,
  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  ~ See the License for the specific language governing permissions and
  ~ limitations under the License.
  -->

<xs:schema targetNamespace="http://jmix.io/schema/ui/layout"
           xmlns:xs="http://www.w3.org/2001/XMLSchema"
           xmlns="http://jmix.io/schema/ui/layout"
           elementFormDefault="qualified">

    <!-- Enums -->

    <xs:simpleType name="splitPanelDockMode">
        <xs:restriction base="xs:string">
            <xs:enumeration value="LEFT"/>
            <xs:enumeration value="RIGHT"/>
            <xs:enumeration value="TOP"/>
            <xs:enumeration value="BOTTOM"/>
        </xs:restriction>
    </xs:simpleType>

    <xs:simpleType name="filterMode">
        <xs:restriction base="xs:string">
            <xs:enumeration value="NO"/>
            <xs:enumeration value="STARTS_WITH"/>
            <xs:enumeration value="CONTAINS"/>
        </xs:restriction>
    </xs:simpleType>

    <xs:simpleType name="caseConversion">
        <xs:restriction base="xs:string">
            <xs:enumeration value="NONE"/>
            <xs:enumeration value="LOWER"/>
            <xs:enumeration value="UPPER"/>
        </xs:restriction>
    </xs:simpleType>

    <xs:simpleType name="textChangeEventMode">
        <xs:restriction base="xs:string">
            <xs:enumeration value="BLUR"/>
            <xs:enumeration value="LAZY"/>
            <xs:enumeration value="TIMEOUT"/>
            <xs:enumeration value="EAGER"/>
        </xs:restriction>
    </xs:simpleType>

    <xs:simpleType name="datatypeEnum">
        <xs:union>
            <xs:simpleType>
                <xs:restriction base="xs:string"/>
            </xs:simpleType>
            <xs:simpleType>
                <xs:restriction base="xs:string">
                    <xs:enumeration value="boolean"/>
                    <xs:enumeration value="byteArray"/>
                    <xs:enumeration value="date"/>
                    <xs:enumeration value="dateTime"/>
                    <xs:enumeration value="decimal"/>
                    <xs:enumeration value="double"/>
                    <xs:enumeration value="int"/>
                    <xs:enumeration value="localDate"/>
                    <xs:enumeration value="localDateTime"/>
                    <xs:enumeration value="localTime"/>
                    <xs:enumeration value="long"/>
                    <xs:enumeration value="offsetDateTime"/>
                    <xs:enumeration value="offsetTime"/>
                    <xs:enumeration value="string"/>
                    <xs:enumeration value="time"/>
                    <xs:enumeration value="uuid"/>
                </xs:restriction>
            </xs:simpleType>
        </xs:union>
    </xs:simpleType>

    <xs:simpleType name="numericDatatypeEnum">
        <xs:union>
            <xs:simpleType>
                <xs:restriction base="xs:string"/>
            </xs:simpleType>
            <xs:simpleType>
                <xs:restriction base="xs:string">
                    <xs:enumeration value="decimal"/>
                    <xs:enumeration value="double"/>
                    <xs:enumeration value="int"/>
                    <xs:enumeration value="long"/>
                </xs:restriction>
            </xs:simpleType>
        </xs:union>
    </xs:simpleType>

    <xs:simpleType name="dateTimeDatatypeEnum">
        <xs:union>
            <xs:simpleType>
                <xs:restriction base="xs:string"/>
            </xs:simpleType>
            <xs:simpleType>
                <xs:restriction base="xs:string">
                    <xs:enumeration value="date"/>
                    <xs:enumeration value="dateTime"/>
                    <xs:enumeration value="localDate"/>
                    <xs:enumeration value="localDateTime"/>
                    <xs:enumeration value="offsetDateTime"/>
                </xs:restriction>
            </xs:simpleType>
        </xs:union>
    </xs:simpleType>

    <xs:simpleType name="timeDatatypeEnum">
        <xs:union>
            <xs:simpleType>
                <xs:restriction base="xs:string"/>
            </xs:simpleType>
            <xs:simpleType>
                <xs:restriction base="xs:string">
                    <xs:enumeration value="localTime"/>
                    <xs:enumeration value="offsetTime"/>
                    <xs:enumeration value="time"/>
                </xs:restriction>
            </xs:simpleType>
        </xs:union>
    </xs:simpleType>

    <xs:simpleType name="timeModeEnum">
        <xs:restriction base="xs:string">
            <xs:enumeration value="H_12"/>
            <xs:enumeration value="H_24"/>
        </xs:restriction>
    </xs:simpleType>

    <xs:simpleType name="fileStoragePutMode">
        <xs:restriction base="xs:string">
            <xs:enumeration value="MANUAL"/>
            <xs:enumeration value="IMMEDIATE"/>
        </xs:restriction>
    </xs:simpleType>

    <xs:simpleType name="dateFieldResolution">
        <xs:restriction base="xs:string">
            <xs:enumeration value="SEC"/>
            <xs:enumeration value="MIN"/>
            <xs:enumeration value="HOUR"/>
            <xs:enumeration value="DAY"/>
            <xs:enumeration value="MONTH"/>
            <xs:enumeration value="YEAR"/>
        </xs:restriction>
    </xs:simpleType>

    <xs:simpleType name="timeFieldResolution">
        <xs:restriction base="xs:string">
            <xs:enumeration value="SEC"/>
            <xs:enumeration value="MIN"/>
            <xs:enumeration value="HOUR"/>
        </xs:restriction>
    </xs:simpleType>

    <xs:simpleType name="aggregation">
        <xs:restriction base="xs:string">
            <xs:enumeration value="SUM"/>
            <xs:enumeration value="COUNT"/>
            <xs:enumeration value="AVG"/>
            <xs:enumeration value="MIN"/>
            <xs:enumeration value="MAX"/>
        </xs:restriction>
    </xs:simpleType>

    <xs:simpleType name="aggregationPosition">
        <xs:restriction base="xs:string">
            <xs:enumeration value="TOP"/>
            <xs:enumeration value="BOTTOM"/>
        </xs:restriction>
    </xs:simpleType>

    <xs:simpleType name="componentSize">
        <xs:union>
            <xs:simpleType>
                <xs:restriction base="xs:string"/>
            </xs:simpleType>
            <xs:simpleType>
                <xs:restriction base="xs:string">
                    <xs:enumeration value="AUTO"/>
                    <xs:enumeration value="100%"/>
                </xs:restriction>
            </xs:simpleType>
        </xs:union>
    </xs:simpleType>

    <xs:simpleType name="dialogSize">
        <xs:union>
            <xs:simpleType>
                <xs:restriction base="xs:string"/>
            </xs:simpleType>
            <xs:simpleType>
                <xs:restriction base="xs:string">
                    <xs:enumeration value="AUTO"/>
                </xs:restriction>
            </xs:simpleType>
        </xs:union>
    </xs:simpleType>

    <xs:simpleType name="resourceString">
        <xs:union>
            <xs:simpleType>
                <xs:restriction base="xs:string"/>
            </xs:simpleType>
            <xs:simpleType>
                <xs:restriction base="xs:string">
                    <xs:enumeration value="msg://"/>
                </xs:restriction>
            </xs:simpleType>
        </xs:union>
    </xs:simpleType>

    <xs:simpleType name="popupPositionEnum">
        <xs:restriction base="xs:string">
            <xs:enumeration value="DEFAULT"/>
            <xs:enumeration value="TOP_RIGHT"/>
            <xs:enumeration value="TOP_LEFT"/>
            <xs:enumeration value="TOP_CENTER"/>
            <xs:enumeration value="MIDDLE_RIGHT"/>
            <xs:enumeration value="MIDDLE_LEFT"/>
            <xs:enumeration value="MIDDLE_CENTER"/>
            <xs:enumeration value="BOTTOM_RIGHT"/>
            <xs:enumeration value="BOTTOM_LEFT"/>
            <xs:enumeration value="BOTTOM_CENTER"/>
        </xs:restriction>
    </xs:simpleType>

    <xs:simpleType name="orientation">
        <xs:restriction base="xs:string">
            <xs:enumeration value="horizontal"/>
            <xs:enumeration value="vertical"/>
        </xs:restriction>
    </xs:simpleType>

    <xs:simpleType name="scrollBars">
        <xs:restriction base="xs:string">
            <xs:enumeration value="horizontal"/>
            <xs:enumeration value="vertical"/>
            <xs:enumeration value="both"/>
            <xs:enumeration value="none"/>
        </xs:restriction>
    </xs:simpleType>

    <xs:simpleType name="align">
        <xs:restriction base="xs:string">
            <xs:enumeration value="TOP_RIGHT"/>
            <xs:enumeration value="TOP_LEFT"/>
            <xs:enumeration value="TOP_CENTER"/>
            <xs:enumeration value="MIDDLE_RIGHT"/>
            <xs:enumeration value="MIDDLE_LEFT"/>
            <xs:enumeration value="MIDDLE_CENTER"/>
            <xs:enumeration value="BOTTOM_RIGHT"/>
            <xs:enumeration value="BOTTOM_LEFT"/>
            <xs:enumeration value="BOTTOM_CENTER"/>
        </xs:restriction>
    </xs:simpleType>

    <xs:simpleType name="notificationPositionEnum">
        <xs:restriction base="xs:string">
            <xs:enumeration value="DEFAULT"/>
            <xs:enumeration value="TOP_RIGHT"/>
            <xs:enumeration value="TOP_LEFT"/>
            <xs:enumeration value="TOP_CENTER"/>
            <xs:enumeration value="MIDDLE_RIGHT"/>
            <xs:enumeration value="MIDDLE_LEFT"/>
            <xs:enumeration value="MIDDLE_CENTER"/>
            <xs:enumeration value="BOTTOM_RIGHT"/>
            <xs:enumeration value="BOTTOM_LEFT"/>
            <xs:enumeration value="BOTTOM_CENTER"/>
        </xs:restriction>
    </xs:simpleType>

    <xs:simpleType name="rowHeaderMode">
        <xs:restriction base="xs:string">
            <xs:enumeration value="NONE"/>
            <xs:enumeration value="ICON"/>
        </xs:restriction>
    </xs:simpleType>

    <xs:simpleType name="openMode">
        <xs:restriction base="xs:string">
            <xs:enumeration value="NEW_TAB"/>
            <xs:enumeration value="THIS_TAB"/>
            <xs:enumeration value="DIALOG"/>
            <xs:enumeration value="NEW_WINDOW"/>
        </xs:restriction>
    </xs:simpleType>

    <xs:simpleType name="embeddedType">
        <xs:restriction base="xs:string">
            <xs:enumeration value="IMAGE"/>
            <xs:enumeration value="OBJECT"/>
            <xs:enumeration value="BROWSER"/>
        </xs:restriction>
    </xs:simpleType>

    <xs:simpleType name="sourceCodeEditorMode">
        <xs:restriction base="xs:string">
            <xs:enumeration value="Java"/>
            <xs:enumeration value="HTML"/>
            <xs:enumeration value="CSS"/>
            <xs:enumeration value="SCSS"/>
            <xs:enumeration value="XML"/>
            <xs:enumeration value="Groovy"/>
            <xs:enumeration value="SQL"/>
            <xs:enumeration value="JavaScript"/>
            <xs:enumeration value="Properties"/>
            <xs:enumeration value="Text"/>
        </xs:restriction>
    </xs:simpleType>

    <xs:simpleType name="borderMode">
        <xs:restriction base="xs:string">
            <xs:enumeration value="visible"/>
            <xs:enumeration value="hidden"/>
        </xs:restriction>
    </xs:simpleType>

    <xs:simpleType name="fieldGroupCaptionAlignment">
        <xs:restriction base="xs:string">
            <xs:enumeration value="TOP"/>
            <xs:enumeration value="LEFT"/>
        </xs:restriction>
    </xs:simpleType>

    <xs:simpleType name="captionPositionType">
        <xs:restriction base="xs:string">
            <xs:enumeration value="TOP"/>
            <xs:enumeration value="LEFT"/>
        </xs:restriction>
    </xs:simpleType>

    <xs:simpleType name="formChildrenCaptionAlignment">
        <xs:restriction base="xs:string">
            <xs:enumeration value="LEFT"/>
            <xs:enumeration value="RIGHT"/>
        </xs:restriction>
    </xs:simpleType>

    <xs:simpleType name="maskedFieldValueMode">
        <xs:restriction base="xs:string">
            <xs:enumeration value="masked"/>
            <xs:enumeration value="clear"/>
        </xs:restriction>
    </xs:simpleType>

    <xs:simpleType name="searchMode">
        <xs:restriction base="xs:string">
            <xs:enumeration value="CASE_SENSITIVE"/>
            <xs:enumeration value="LOWER_CASE"/>
            <xs:enumeration value="UPPER_CASE"/>
        </xs:restriction>
    </xs:simpleType>

    <xs:simpleType name="operatorType">
        <xs:restriction base="xs:string">
            <xs:enumeration value="EQUAL"/>
            <xs:enumeration value="IN"/>
            <xs:enumeration value="NOT_IN"/>
            <xs:enumeration value="NOT_EQUAL"/>
            <xs:enumeration value="GREATER"/>
            <xs:enumeration value="GREATER_OR_EQUAL"/>
            <xs:enumeration value="LESSER"/>
            <xs:enumeration value="LESSER_OR_EQUAL"/>
            <xs:enumeration value="CONTAINS"/>
            <xs:enumeration value="DOES_NOT_CONTAIN"/>
            <xs:enumeration value="EMPTY"/>
            <xs:enumeration value="NOT_EMPTY"/>
            <xs:enumeration value="STARTS_WITH"/>
            <xs:enumeration value="ENDS_WITH"/>
        </xs:restriction>
    </xs:simpleType>

    <xs:simpleType name="calendarTimeFormat">
        <xs:union>
            <xs:simpleType>
                <xs:restriction base="xs:string">
                    <xs:enumeration value="12H"/>
                    <xs:enumeration value="24H"/>
                </xs:restriction>
            </xs:simpleType>
        </xs:union>
    </xs:simpleType>

    <xs:simpleType name="linkTarget">
        <xs:union>
            <xs:simpleType>
                <xs:restriction base="xs:string"/>
            </xs:simpleType>
            <xs:simpleType>
                <xs:restriction base="xs:string">
                    <xs:enumeration value="_blank"/>
                    <xs:enumeration value="_self"/>
                    <xs:enumeration value="_parent"/>
                    <xs:enumeration value="_top"/>
                </xs:restriction>
            </xs:simpleType>
        </xs:union>
    </xs:simpleType>

    <xs:simpleType name="constraintEntityOp">
        <xs:restriction base="xs:string">
            <xs:enumeration value="none"/>
            <xs:enumeration value="create"/>
            <xs:enumeration value="read"/>
            <xs:enumeration value="update"/>
            <xs:enumeration value="delete"/>
        </xs:restriction>
    </xs:simpleType>

    <xs:simpleType name="dataGridSelectionMode">
        <xs:restriction base="xs:string">
            <xs:enumeration value="SINGLE"/>
            <xs:enumeration value="MULTI"/>
            <xs:enumeration value="MULTI_CHECK"/>
            <xs:enumeration value="NONE"/>
        </xs:restriction>
    </xs:simpleType>

    <xs:simpleType name="dataGridColumnResizeMode">
        <xs:restriction base="xs:string">
            <xs:enumeration value="ANIMATED"/>
            <xs:enumeration value="SIMPLE"/>
        </xs:restriction>
    </xs:simpleType>

    <xs:simpleType name="treeSelectionMode">
        <xs:restriction base="xs:string">
            <xs:enumeration value="SINGLE"/>
            <xs:enumeration value="MULTI"/>
            <xs:enumeration value="NONE"/>
        </xs:restriction>
    </xs:simpleType>

    <xs:simpleType name="dependencyType">
        <xs:restriction base="xs:string">
            <xs:enumeration value="STYLESHEET"/>
            <xs:enumeration value="JAVASCRIPT"/>
        </xs:restriction>
    </xs:simpleType>

    <xs:simpleType name="sortDirection">
        <xs:restriction base="xs:string">
            <xs:enumeration value="ASCENDING"/>
            <xs:enumeration value="DESCENDING"/>
        </xs:restriction>
    </xs:simpleType>

    <xs:simpleType name="contentMode">
        <xs:restriction base="xs:string">
            <xs:enumeration value="TEXT"/>
            <xs:enumeration value="PREFORMATTED"/>
            <xs:enumeration value="HTML"/>
        </xs:restriction>
    </xs:simpleType>

    <xs:simpleType name="notificationContentMode">
        <xs:restriction base="xs:string">
            <xs:enumeration value="TEXT"/>
            <xs:enumeration value="HTML"/>
        </xs:restriction>
    </xs:simpleType>

    <xs:simpleType name="responsiveGridContainerType">
        <xs:restriction base="xs:string">
            <xs:enumeration value="FIXED"/>
            <xs:enumeration value="FLUID"/>
        </xs:restriction>
    </xs:simpleType>

    <xs:simpleType name="responsiveGridRowAlignItems">
        <xs:restriction base="xs:string">
            <xs:enumeration value="START"/>
            <xs:enumeration value="CENTER"/>
            <xs:enumeration value="END"/>
            <xs:enumeration value="BASELINE"/>
            <xs:enumeration value="STRETCH"/>
        </xs:restriction>
    </xs:simpleType>

    <xs:simpleType name="responsiveGridRowJustifyContent">
        <xs:restriction base="xs:string">
            <xs:enumeration value="START"/>
            <xs:enumeration value="CENTER"/>
            <xs:enumeration value="END"/>
            <xs:enumeration value="AROUND"/>
            <xs:enumeration value="BETWEEN"/>
        </xs:restriction>
    </xs:simpleType>

    <xs:simpleType name="responsiveGridColumnAlignSelf">
        <xs:restriction base="xs:string">
            <xs:enumeration value="AUTO"/>
            <xs:enumeration value="START"/>
            <xs:enumeration value="CENTER"/>
            <xs:enumeration value="END"/>
            <xs:enumeration value="BASELINE"/>
            <xs:enumeration value="STRETCH"/>
        </xs:restriction>
    </xs:simpleType>

    <xs:simpleType name="responsiveGridColumnColumnsValue">
        <xs:union>
            <xs:simpleType>
                <xs:restriction base="xs:integer"/>
            </xs:simpleType>
            <xs:simpleType>
                <xs:restriction base="xs:string">
                    <xs:enumeration value="DEFAULT"/>
                    <xs:enumeration value="AUTO"/>
                </xs:restriction>
            </xs:simpleType>
        </xs:union>
    </xs:simpleType>

    <xs:simpleType name="responsiveGridColumnOrderValue">
        <xs:union>
            <xs:simpleType>
                <xs:restriction base="xs:integer"/>
            </xs:simpleType>
            <xs:simpleType>
                <xs:restriction base="xs:string">
                    <xs:enumeration value="FIRST"/>
                    <xs:enumeration value="LAST"/>
                </xs:restriction>
            </xs:simpleType>
        </xs:union>
    </xs:simpleType>

    <!-- Style names -->

    <xs:simpleType name="labelStylename">
        <xs:union>
            <xs:simpleType>
                <xs:restriction base="xs:string"/>
            </xs:simpleType>
            <xs:simpleType>
                <xs:restriction base="xs:string">
                    <xs:enumeration value="tiny"/>
                    <xs:enumeration value="small"/>
                    <xs:enumeration value="large"/>
                    <xs:enumeration value="huge"/>
                    <xs:enumeration value="h1"/>
                    <xs:enumeration value="h2"/>
                    <xs:enumeration value="h3"/>
                    <xs:enumeration value="h4"/>
                    <xs:enumeration value="no-margin"/>
                    <xs:enumeration value="light"/>
                    <xs:enumeration value="bold"/>
                    <xs:enumeration value="colored"/>
                    <xs:enumeration value="success"/>
                    <xs:enumeration value="failure"/>
                    <xs:enumeration value="spinner"/>
                    <xs:enumeration value="dropzone-description"/>
                </xs:restriction>
            </xs:simpleType>
        </xs:union>
    </xs:simpleType>

    <xs:simpleType name="textFieldStylename">
        <xs:union>
            <xs:simpleType>
                <xs:restriction base="xs:string"/>
            </xs:simpleType>
            <xs:simpleType>
                <xs:restriction base="xs:string">
                    <xs:enumeration value="tiny"/>
                    <xs:enumeration value="small"/>
                    <xs:enumeration value="large"/>
                    <xs:enumeration value="huge"/>
                    <xs:enumeration value="borderless"/>
                    <xs:enumeration value="align-right"/>
                    <xs:enumeration value="align-center"/>
                    <xs:enumeration value="inline-icon"/>
                </xs:restriction>
            </xs:simpleType>
        </xs:union>
    </xs:simpleType>

    <xs:simpleType name="progressBarStylename">
        <xs:union>
            <xs:simpleType>
                <xs:restriction base="xs:string"/>
            </xs:simpleType>
            <xs:simpleType>
                <xs:restriction base="xs:string">
                    <xs:enumeration value="point"/>
                </xs:restriction>
            </xs:simpleType>
        </xs:union>
    </xs:simpleType>

    <xs:simpleType name="buttonStylename">
        <xs:union>
            <xs:simpleType>
                <xs:restriction base="xs:string"/>
            </xs:simpleType>
            <xs:simpleType>
                <xs:restriction base="xs:string">
                    <xs:enumeration value="tiny"/>
                    <xs:enumeration value="small"/>
                    <xs:enumeration value="large"/>
                    <xs:enumeration value="huge"/>
                    <xs:enumeration value="primary"/>
                    <xs:enumeration value="friendly"/>
                    <xs:enumeration value="danger"/>
                    <xs:enumeration value="quiet"/>
                    <xs:enumeration value="icon-align-right"/>
                    <xs:enumeration value="icon-align-top"/>
                    <xs:enumeration value="icon-only"/>
                    <xs:enumeration value="borderless"/>
                    <xs:enumeration value="borderless-colored"/>
                </xs:restriction>
            </xs:simpleType>
        </xs:union>
    </xs:simpleType>

    <xs:simpleType name="layoutStylename">
        <xs:union>
            <xs:simpleType>
                <xs:restriction base="xs:string"/>
            </xs:simpleType>
            <xs:simpleType>
                <xs:restriction base="xs:string">
                    <xs:enumeration value="card"/>
                    <xs:enumeration value="well"/>
                    <xs:enumeration value="v-panel-caption"/>
                </xs:restriction>
            </xs:simpleType>
        </xs:union>
    </xs:simpleType>

    <xs:simpleType name="boxLayoutStylename">
        <xs:union>
            <xs:simpleType>
                <xs:restriction base="xs:string"/>
            </xs:simpleType>
            <xs:simpleType>
                <xs:restriction base="xs:string">
                    <xs:enumeration value="card"/>
                    <xs:enumeration value="well"/>
                    <xs:enumeration value="v-panel-caption"/>
                    <xs:enumeration value="dropzone-container"/>
                </xs:restriction>
            </xs:simpleType>
        </xs:union>
    </xs:simpleType>

    <xs:simpleType name="csslayoutStylename">
        <xs:union>
            <xs:simpleType>
                <xs:restriction base="xs:string"/>
            </xs:simpleType>
            <xs:simpleType>
                <xs:restriction base="xs:string">
                    <xs:enumeration value="card"/>
                    <xs:enumeration value="well"/>
                    <xs:enumeration value="v-component-group"/>
                    <xs:enumeration value="v-panel-caption"/>
                </xs:restriction>
            </xs:simpleType>
        </xs:union>
    </xs:simpleType>

    <xs:simpleType name="splitStylename">
        <xs:union>
            <xs:simpleType>
                <xs:restriction base="xs:string"/>
            </xs:simpleType>
            <xs:simpleType>
                <xs:restriction base="xs:string">
                    <xs:enumeration value="large"/>
                </xs:restriction>
            </xs:simpleType>
        </xs:union>
    </xs:simpleType>

    <xs:simpleType name="tabsheetStylename">
        <xs:union>
            <xs:simpleType>
                <xs:restriction base="xs:string"/>
            </xs:simpleType>
            <xs:simpleType>
                <xs:restriction base="xs:string">
                    <xs:enumeration value="framed"/>
                    <xs:enumeration value="padded-tabbar"/>
                    <xs:enumeration value="centered-tabs"/>
                    <xs:enumeration value="equal-width-tabs"/>
                    <xs:enumeration value="compact-tabbar"/>
                    <xs:enumeration value="icons-on-top"/>
                    <xs:enumeration value="only-selected-closable"/>
                </xs:restriction>
            </xs:simpleType>
        </xs:union>
    </xs:simpleType>

    <xs:simpleType name="accordionStylename">
        <xs:union>
            <xs:simpleType>
                <xs:restriction base="xs:string"/>
            </xs:simpleType>
            <xs:simpleType>
                <xs:restriction base="xs:string">
                    <xs:enumeration value="borderless"/>
                </xs:restriction>
            </xs:simpleType>
        </xs:union>
    </xs:simpleType>

    <xs:simpleType name="groupBoxStylename">
        <xs:union>
            <xs:simpleType>
                <xs:restriction base="xs:string"/>
            </xs:simpleType>
            <xs:simpleType>
                <xs:restriction base="xs:string">
                    <xs:enumeration value="borderless"/>
                    <xs:enumeration value="light"/>
                    <xs:enumeration value="well"/>
                </xs:restriction>
            </xs:simpleType>
        </xs:union>
    </xs:simpleType>

    <xs:simpleType name="comboBoxStylename">
        <xs:union>
            <xs:simpleType>
                <xs:restriction base="xs:string"/>
            </xs:simpleType>
            <xs:simpleType>
                <xs:restriction base="xs:string">
                    <xs:enumeration value="tiny"/>
                    <xs:enumeration value="small"/>
                    <xs:enumeration value="large"/>
                    <xs:enumeration value="huge"/>
                    <xs:enumeration value="borderless"/>
                    <xs:enumeration value="align-right"/>
                    <xs:enumeration value="align-center"/>
                </xs:restriction>
            </xs:simpleType>
        </xs:union>
    </xs:simpleType>

    <xs:simpleType name="valuePickerStylename">
        <xs:union>
            <xs:simpleType>
                <xs:restriction base="xs:string"/>
            </xs:simpleType>
            <xs:simpleType>
                <xs:restriction base="xs:string">
                    <xs:enumeration value="tiny"/>
                    <xs:enumeration value="small"/>
                    <xs:enumeration value="large"/>
                    <xs:enumeration value="huge"/>
                    <xs:enumeration value="borderless"/>
                    <xs:enumeration value="align-right"/>
                    <xs:enumeration value="align-center"/>
                </xs:restriction>
            </xs:simpleType>
        </xs:union>
    </xs:simpleType>

    <xs:simpleType name="entityPickerStylename">
        <xs:union>
            <xs:simpleType>
                <xs:restriction base="xs:string"/>
            </xs:simpleType>
            <xs:simpleType>
                <xs:restriction base="xs:string">
                    <xs:enumeration value="tiny"/>
                    <xs:enumeration value="small"/>
                    <xs:enumeration value="large"/>
                    <xs:enumeration value="huge"/>
                    <xs:enumeration value="borderless"/>
                    <xs:enumeration value="align-right"/>
                    <xs:enumeration value="align-center"/>
                </xs:restriction>
            </xs:simpleType>
        </xs:union>
    </xs:simpleType>

    <xs:simpleType name="entityComboBoxStylename">
        <xs:union>
            <xs:simpleType>
                <xs:restriction base="xs:string"/>
            </xs:simpleType>
            <xs:simpleType>
                <xs:restriction base="xs:string">
                    <xs:enumeration value="tiny"/>
                    <xs:enumeration value="small"/>
                    <xs:enumeration value="large"/>
                    <xs:enumeration value="huge"/>
                    <xs:enumeration value="borderless"/>
                    <xs:enumeration value="align-right"/>
                    <xs:enumeration value="align-center"/>
                </xs:restriction>
            </xs:simpleType>
        </xs:union>
    </xs:simpleType>

    <xs:simpleType name="textAreaStylename">
        <xs:union>
            <xs:simpleType>
                <xs:restriction base="xs:string"/>
            </xs:simpleType>
            <xs:simpleType>
                <xs:restriction base="xs:string">
                    <xs:enumeration value="tiny"/>
                    <xs:enumeration value="small"/>
                    <xs:enumeration value="large"/>
                    <xs:enumeration value="huge"/>
                    <xs:enumeration value="borderless"/>
                    <xs:enumeration value="align-right"/>
                    <xs:enumeration value="align-center"/>
                </xs:restriction>
            </xs:simpleType>
        </xs:union>
    </xs:simpleType>

    <xs:simpleType name="dateFieldStylename">
        <xs:union>
            <xs:simpleType>
                <xs:restriction base="xs:string"/>
            </xs:simpleType>
            <xs:simpleType>
                <xs:restriction base="xs:string">
                    <xs:enumeration value="tiny"/>
                    <xs:enumeration value="small"/>
                    <xs:enumeration value="borderless"/>
                </xs:restriction>
            </xs:simpleType>
        </xs:union>
    </xs:simpleType>

    <xs:simpleType name="shortcut">
        <xs:union>
            <xs:simpleType>
                <xs:restriction base="xs:string"/>
            </xs:simpleType>
            <xs:simpleType>
                <xs:restriction base="xs:string">
                    <xs:enumeration value="${TABLE_EDIT_SHORTCUT}"/>
                    <xs:enumeration value="${TABLE_INSERT_SHORTCUT}"/>
                    <xs:enumeration value="${TABLE_ADD_SHORTCUT}"/>
                    <xs:enumeration value="${TABLE_REMOVE_SHORTCUT}"/>
                    <xs:enumeration value="${COMMIT_SHORTCUT}"/>
                    <xs:enumeration value="${CLOSE_SHORTCUT}"/>
                    <xs:enumeration value="${NEXT_TAB_SHORTCUT}"/>
                    <xs:enumeration value="${PREVIOUS_TAB_SHORTCUT}"/>
                    <xs:enumeration value="${PICKER_LOOKUP_SHORTCUT}"/>
                    <xs:enumeration value="${PICKER_OPEN_SHORTCUT}"/>
                    <xs:enumeration value="${PICKER_CLEAR_SHORTCUT}"/>
                </xs:restriction>
            </xs:simpleType>
        </xs:union>
    </xs:simpleType>

    <xs:simpleType name="tableStylename">
        <xs:union>
            <xs:simpleType>
                <xs:restriction base="xs:string"/>
            </xs:simpleType>
            <xs:simpleType>
                <xs:restriction base="xs:string">
                    <xs:enumeration value="no-stripes"/>
                    <xs:enumeration value="no-vertical-lines"/>
                    <xs:enumeration value="no-horizontal-lines"/>
                    <xs:enumeration value="no-header"/>
                    <xs:enumeration value="borderless"/>
                </xs:restriction>
            </xs:simpleType>
        </xs:union>
    </xs:simpleType>

    <xs:simpleType name="dataGridStylename">
        <xs:union>
            <xs:simpleType>
                <xs:restriction base="xs:string"/>
            </xs:simpleType>
            <xs:simpleType>
                <xs:restriction base="xs:string">
                    <xs:enumeration value="no-stripes"/>
                    <xs:enumeration value="no-vertical-lines"/>
                    <xs:enumeration value="no-horizontal-lines"/>
                    <xs:enumeration value="borderless"/>
                </xs:restriction>
            </xs:simpleType>
        </xs:union>
    </xs:simpleType>

    <xs:simpleType name="currencyFieldStylename">
        <xs:union>
            <xs:simpleType>
                <xs:restriction base="xs:string"/>
            </xs:simpleType>
            <xs:simpleType>
                <xs:restriction base="xs:string">
                    <xs:enumeration value="huge"/>
                    <xs:enumeration value="large"/>
                    <xs:enumeration value="small"/>
                    <xs:enumeration value="tiny"/>
                </xs:restriction>
            </xs:simpleType>
        </xs:union>
    </xs:simpleType>

    <xs:simpleType name="suggestionFieldStylename">
        <xs:union>
            <xs:simpleType>
                <xs:restriction base="xs:string"/>
            </xs:simpleType>
            <xs:simpleType>
                <xs:restriction base="xs:string">
                    <xs:enumeration value="tiny"/>
                    <xs:enumeration value="small"/>
                    <xs:enumeration value="large"/>
                    <xs:enumeration value="huge"/>
                </xs:restriction>
            </xs:simpleType>
        </xs:union>
    </xs:simpleType>

    <xs:simpleType name="resizableDirection">
        <xs:restriction base="xs:string">
            <xs:enumeration value="HORIZONTAL"/>
            <xs:enumeration value="VERTICAL"/>
            <xs:enumeration value="BOTH"/>
            <xs:enumeration value="NONE"/>
        </xs:restriction>
    </xs:simpleType>

    <xs:simpleType name="popupOpenDirection">
        <xs:restriction base="xs:string">
            <xs:enumeration value="BOTTOM_LEFT"/>
            <xs:enumeration value="BOTTOM_RIGHT"/>
            <xs:enumeration value="BOTTOM_CENTER"/>
        </xs:restriction>
    </xs:simpleType>

    <xs:simpleType name="daysOfWeek">
        <xs:restriction>
            <xs:enumeration value="MONDAY"/>
            <xs:enumeration value="TUESDAY"/>
            <xs:enumeration value="WEDNESDAY"/>
            <xs:enumeration value="THURSDAY"/>
            <xs:enumeration value="FRIDAY"/>
            <xs:enumeration value="SATURDAY"/>
            <xs:enumeration value="SUNDAY"/>
        </xs:restriction>
    </xs:simpleType>

    <xs:simpleType name="monthOfYear">
        <xs:restriction>
            <xs:enumeration value="JANUARY"/>
            <xs:enumeration value="FEBRUARY"/>
            <xs:enumeration value="MARCH"/>
            <xs:enumeration value="APRIL"/>
            <xs:enumeration value="MAY"/>
            <xs:enumeration value="JUNE"/>
            <xs:enumeration value="JULY"/>
            <xs:enumeration value="AUGUST"/>
            <xs:enumeration value="SEPTEMBER"/>
            <xs:enumeration value="OCTOBER"/>
            <xs:enumeration value="NOVEMBER"/>
            <xs:enumeration value="DECEMBER"/>
        </xs:restriction>
    </xs:simpleType>

    <xs:simpleType name="sandbox">
        <xs:union>
            <xs:simpleType>
                <xs:restriction base="xs:string"/>
            </xs:simpleType>
            <xs:simpleType>
                <xs:restriction base="xs:string">
                    <xs:enumeration value="allow-forms"/>
                    <xs:enumeration value="allow-modals"/>
                    <xs:enumeration value="allow-orientation-lock"/>
                    <xs:enumeration value="allow-pointer-lock"/>
                    <xs:enumeration value="allow-popups"/>
                    <xs:enumeration value="allow-popups-to-escape-sandbox"/>
                    <xs:enumeration value="allow-presentation"/>
                    <xs:enumeration value="allow-same-origin"/>
                    <xs:enumeration value="allow-scripts"/>
                    <xs:enumeration value="allow-storage-access-by-user-activation"/>
                    <xs:enumeration value="allow-top-navigation"/>
                    <xs:enumeration value="allow-top-navigation-by-user-activation"/>
                    <xs:enumeration value="allow-downloads-without-user-activation"/>
                </xs:restriction>
            </xs:simpleType>
        </xs:union>
    </xs:simpleType>

    <xs:simpleType name="allow">
        <xs:union>
            <xs:simpleType>
                <xs:restriction base="xs:string"/>
            </xs:simpleType>
            <xs:simpleType>
                <xs:restriction base="xs:string">
                    <xs:enumeration value="autoplay"/>
                    <xs:enumeration value="camera"/>
                    <xs:enumeration value="document-domain"/>
                    <xs:enumeration value="encrypted-media"/>
                    <xs:enumeration value="fullscreen"/>
                    <xs:enumeration value="geolocation"/>
                    <xs:enumeration value="microphone"/>
                    <xs:enumeration value="midi"/>
                    <xs:enumeration value="payment"/>
                    <xs:enumeration value="vr"/>
                </xs:restriction>
            </xs:simpleType>
        </xs:union>
    </xs:simpleType>

    <xs:simpleType name="referrerpolicy">
        <xs:union>
            <xs:simpleType>
                <xs:restriction base="xs:string"/>
            </xs:simpleType>
            <xs:simpleType>
                <xs:restriction base="xs:string">
                    <xs:enumeration value="no-referrer"/>
                    <xs:enumeration value="no-referrer-when-downgrade"/>
                    <xs:enumeration value="origin"/>
                    <xs:enumeration value="origin-when-cross-origin"/>
                    <xs:enumeration value="same-origin"/>
                    <xs:enumeration value="strict-origin"/>
                    <xs:enumeration value="strict-origin-when-cross-origin"/>
                    <xs:enumeration value="unsafe-url"/>
                </xs:restriction>
            </xs:simpleType>
        </xs:union>
    </xs:simpleType>

    <xs:simpleType name="windowMode">
        <xs:restriction>
            <xs:enumeration value="NORMAL"/>
            <xs:enumeration value="MAXIMIZED"/>
        </xs:restriction>
    </xs:simpleType>

    <xs:simpleType name="tagPositionMode">
        <xs:restriction>
            <xs:enumeration value="TOP"/>
            <xs:enumeration value="RIGHT"/>
            <xs:enumeration value="BOTTOM"/>
            <xs:enumeration value="LEFT"/>
        </xs:restriction>
    </xs:simpleType>

    <xs:simpleType name="groupFilterOperation">
        <xs:restriction base="xs:string">
            <xs:enumeration value="AND"/>
            <xs:enumeration value="OR"/>
        </xs:restriction>
    </xs:simpleType>

    <xs:simpleType name="propertyFilterOperation">
        <xs:restriction base="xs:string">
            <xs:enumeration value="EQUAL"/>
            <xs:enumeration value="NOT_EQUAL"/>
            <xs:enumeration value="GREATER"/>
            <xs:enumeration value="GREATER_OR_EQUAL"/>
            <xs:enumeration value="LESS"/>
            <xs:enumeration value="LESS_OR_EQUAL"/>
            <xs:enumeration value="CONTAINS"/>
            <xs:enumeration value="NOT_CONTAINS"/>
            <xs:enumeration value="STARTS_WITH"/>
            <xs:enumeration value="ENDS_WITH"/>
            <xs:enumeration value="IS_SET"/>
            <xs:enumeration value="IN_LIST"/>
            <xs:enumeration value="NOT_IN_LIST"/>
            <xs:enumeration value="DATE_INTERVAL"/>
        </xs:restriction>
    </xs:simpleType>

    <!-- Interfaces -->

    <xs:attributeGroup name="hasId">
        <xs:attribute name="id" type="xs:string"/>

        <!-- additional in-place attributes for containers -->
        <xs:attribute name="box.expandRatio" type="xs:float"/>
        <xs:attribute name="colspan" type="xs:integer"/>
        <xs:attribute name="rowspan" type="xs:integer"/>

        <!-- enable XSD extension here -->
        <xs:anyAttribute namespace="##other" processContents="lax"/>
    </xs:attributeGroup>

    <xs:attributeGroup name="requiresId">
        <xs:attribute name="id" type="xs:string" use="required"/>
        <xs:anyAttribute namespace="##other" processContents="lax"/>
    </xs:attributeGroup>

    <xs:attributeGroup name="hasSize">
        <xs:attribute name="width" type="componentSize"/>
        <xs:attribute name="height" type="componentSize"/>
    </xs:attributeGroup>

    <xs:attributeGroup name="hasIcon">
        <xs:attribute name="icon" type="xs:string">
            <xs:annotation>
                <xs:documentation>
                    <![CDATA[
                        Allows to set an icon for the component.

                        Available prefixes:
                        1. "theme:" - an icon will be served from the current theme directory
                        2. "file:" - an icon will be served from the file system
                        3. "classpath:" - an icon will be served from classpath
                    ]]>
                </xs:documentation>
            </xs:annotation>
        </xs:attribute>
    </xs:attributeGroup>

    <xs:attributeGroup name="hasWidthProp">
        <xs:attribute name="width" type="xs:string"/>
    </xs:attributeGroup>

    <xs:attributeGroup name="hasHeightProp">
        <xs:attribute name="height" type="xs:string"/>
    </xs:attributeGroup>

    <xs:attributeGroup name="hasVisibility">
        <xs:attribute name="visible" type="xs:boolean"/>
    </xs:attributeGroup>

    <xs:attributeGroup name="hasAlign">
        <xs:attribute name="align" type="align"/>
    </xs:attributeGroup>

    <xs:attributeGroup name="hasStyle">
        <xs:attribute name="stylename" type="xs:string"/>
    </xs:attributeGroup>

    <xs:attributeGroup name="hasCss">
        <xs:attribute name="css" type="xs:string"/>
    </xs:attributeGroup>

    <xs:attributeGroup name="hasResponsive">
        <xs:attribute name="responsive" type="xs:boolean"/>
    </xs:attributeGroup>

    <xs:attributeGroup name="hasSpacingMargin">
        <xs:attribute name="spacing" type="xs:boolean"/>
        <xs:attribute name="margin" type="xs:string"/>
    </xs:attributeGroup>

    <xs:attributeGroup name="hasSpacing">
        <xs:attribute name="spacing" type="xs:boolean"/>
    </xs:attributeGroup>

    <xs:attributeGroup name="hasOuterMargin">
        <xs:attribute name="outerMargin" type="xs:string"/>
    </xs:attributeGroup>

    <xs:attributeGroup name="hasExpand">
        <xs:attribute name="expand" type="xs:string"/>
    </xs:attributeGroup>

    <xs:attributeGroup name="hasEditState">
        <xs:attribute name="editable" type="xs:boolean"/>
        <xs:attribute name="enable" type="xs:boolean"/>
    </xs:attributeGroup>

    <xs:attributeGroup name="hasEditable">
        <xs:attribute name="editable" type="xs:boolean"/>
    </xs:attributeGroup>

    <xs:attributeGroup name="hasEnableProp">
        <xs:attribute name="enable" type="xs:boolean"/>
    </xs:attributeGroup>

    <xs:attributeGroup name="hasResponsiveProp">
        <xs:attribute name="responsive" type="xs:boolean"/>
    </xs:attributeGroup>

    <xs:attributeGroup name="hasDataContainer">
        <xs:attribute name="dataContainer" type="xs:string"/>
        <xs:attribute name="property" type="xs:string"/>
    </xs:attributeGroup>

    <xs:attributeGroup name="hasValue">
        <xs:attribute name="value" type="xs:string"/>
    </xs:attributeGroup>

    <xs:attributeGroup name="hasCaption">
        <xs:attribute name="caption" type="resourceString"/>
        <xs:attribute name="description" type="resourceString"/>
    </xs:attributeGroup>

    <xs:attributeGroup name="hasHtmlCaption">
        <xs:attributeGroup ref="hasHtmlCaptionProp"/>
        <xs:attributeGroup ref="hasHtmlDescription"/>
    </xs:attributeGroup>

    <xs:attributeGroup name="hasHtmlDescription">
        <xs:attribute name="description" type="resourceString"/>
        <xs:attribute name="descriptionAsHtml" type="xs:boolean"/>
    </xs:attributeGroup>

    <xs:attributeGroup name="hasContextHelp">
        <xs:attribute name="contextHelpText" type="resourceString"/>
        <xs:attribute name="contextHelpTextHtmlEnabled" type="xs:boolean"/>
    </xs:attributeGroup>

    <xs:attributeGroup name="hasCaptionProp">
        <xs:attribute name="caption" type="resourceString"/>
    </xs:attributeGroup>

    <xs:attributeGroup name="hasHtmlCaptionProp">
        <xs:attribute name="caption" type="resourceString"/>
        <xs:attribute name="captionAsHtml" type="xs:boolean"/>
    </xs:attributeGroup>

    <xs:attributeGroup name="hasRequirements">
        <xs:attribute name="required" type="xs:boolean"/>
        <xs:attribute name="requiredMessage" type="resourceString"/>
    </xs:attributeGroup>

    <xs:attributeGroup name="hasBuffered">
        <xs:attribute name="buffered" type="xs:boolean"/>
    </xs:attributeGroup>

    <xs:attributeGroup name="hasDatatype">
        <xs:attribute name="datatype" type="datatypeEnum"/>
    </xs:attributeGroup>

    <xs:attributeGroup name="hasConversionErrorMessage">
        <xs:attribute name="conversionErrorMessage" type="resourceString"/>
    </xs:attributeGroup>

    <xs:attributeGroup name="hasCaptionSource">
        <xs:attribute name="captionProperty" type="xs:string"/>
    </xs:attributeGroup>

    <xs:attributeGroup name="hasTabIndex">
        <xs:attribute name="tabIndex" type="xs:int"/>
    </xs:attributeGroup>

    <xs:attributeGroup name="hasSandbox">
        <xs:attribute name="sandbox" type="sandbox"/>
    </xs:attributeGroup>

    <xs:attributeGroup name="hasSrcdoc">
        <xs:attribute name="srcdoc" type="resourceString"/>
        <xs:attribute name="srcdocFile" type="xs:string"/>
    </xs:attributeGroup>

    <xs:attributeGroup name="hasAllow">
        <xs:attribute name="allow" type="allow"/>
    </xs:attributeGroup>

    <xs:attributeGroup name="hasReferrerpolicy">
        <xs:attribute name="referrerpolicy" type="referrerpolicy"/>
    </xs:attributeGroup>

    <xs:attributeGroup name="hasHtmlSanitizer">
        <xs:attribute name="htmlSanitizerEnabled" type="xs:boolean"/>
    </xs:attributeGroup>

    <xs:attributeGroup name="isTableComponent">
        <xs:attribute name="dataContainer" type="xs:string"/>
        <xs:attribute name="rowHeaderMode" type="rowHeaderMode"/>

        <xs:attributeGroup ref="hasEditable"/>
        <xs:attributeGroup ref="hasTabIndex"/>

        <xs:attribute name="multiselect" type="xs:boolean"/>
        <xs:attribute name="sortable" type="xs:boolean"/>
        <xs:attribute name="reorderingAllowed" type="xs:boolean"/>
        <xs:attribute name="columnControlVisible" type="xs:boolean"/>
        <xs:attribute name="columnHeaderVisible" type="xs:boolean"/>
        <xs:attribute name="showSelection" type="xs:boolean"/>
        <xs:attribute name="textSelectionEnabled" type="xs:boolean"/>

        <xs:attribute name="aggregatable" type="xs:boolean"/>
        <xs:attribute name="aggregationStyle" type="aggregationPosition"/>
        <xs:attribute name="showTotalAggregation" type="xs:boolean"/>
        <xs:attribute name="contextMenuEnabled" type="xs:boolean"/>
        <xs:attribute name="multiLineCells" type="xs:boolean"/>
        <xs:attribute name="emptyStateMessage" type="resourceString"/>
        <xs:attribute name="emptyStateLinkMessage" type="resourceString"/>

        <xs:attribute name="minHeight" type="xs:string"/>
        <xs:attribute name="minWidth" type="xs:string"/>
    </xs:attributeGroup>

    <xs:attributeGroup name="isLayoutComponent">
        <xs:attributeGroup ref="hasSpacingMargin"/>

        <xs:attribute name="expand" type="xs:string"/>
    </xs:attributeGroup>

    <xs:attributeGroup name="isUploadComponent">
        <xs:attribute name="accept" type="xs:string"/>
        <xs:attribute name="permittedExtensions" type="xs:string"/>
        <xs:attribute name="fileSizeLimit" type="xs:long"/>
        <xs:attribute name="dropZone" type="xs:string"/>
        <xs:attribute name="pasteZone" type="xs:string"/>
        <xs:attribute name="dropZonePrompt" type="resourceString"/>
    </xs:attributeGroup>

    <xs:complexType name="baseMainElement">
        <xs:attribute name="id" type="xs:string"/>
        <xs:attribute name="icon" type="xs:string"/>
        <xs:attribute name="width" type="componentSize"/>
        <xs:attribute name="height" type="componentSize"/>
        <xs:attribute name="align" type="align"/>
        <xs:attribute name="stylename" type="xs:string"/>
        <xs:attribute name="enable" type="xs:boolean"/>
        <xs:attribute name="visible" type="xs:boolean"/>

        <xs:attributeGroup ref="hasHtmlCaption"/>
    </xs:complexType>

    <!-- Utils -->
    <xs:complexType name="frameAction">
        <xs:sequence>
            <xs:element name="properties" type="actionProperties" minOccurs="0"/>
        </xs:sequence>

        <xs:attributeGroup ref="requiresId"/>
        <xs:attributeGroup ref="hasCaption"/>
        <xs:attributeGroup ref="hasEnableProp"/>
        <xs:attributeGroup ref="hasVisibility"/>
        <xs:attributeGroup ref="hasIcon"/>

        <xs:attribute name="type" type="xs:string"/>

        <xs:attribute name="primary" type="xs:boolean"/>
        <xs:attribute name="shortcut" type="shortcut"/>
    </xs:complexType>

    <xs:complexType name="dialogMode">
        <xs:attribute name="width" type="dialogSize"/>
        <xs:attribute name="height" type="dialogSize"/>

        <xs:attribute name="closeable" type="xs:boolean"/>
        <xs:attribute name="resizable" type="xs:boolean"/>
        <xs:attribute name="modal" type="xs:boolean"/>

        <xs:attribute name="forceDialog" type="xs:boolean"/>
        <xs:attribute name="closeOnClickOutside" type="xs:boolean"/>
        <xs:attribute name="windowMode" type="windowMode"/>

        <xs:attribute name="positionX" type="xs:integer"/>
        <xs:attribute name="positionY" type="xs:integer"/>
    </xs:complexType>

    <xs:complexType name="formatterType">
        <xs:choice minOccurs="0">
            <xs:element name="collection" minOccurs="0"/>
            <xs:element name="custom" minOccurs="0" type="customFormatterType"/>
            <xs:element name="date" minOccurs="0" type="dateFormatterType"/>
            <xs:element name="number" minOccurs="0" type="formattableFormatterType"/>
        </xs:choice>
    </xs:complexType>

    <xs:complexType name="customFormatterType">
        <xs:attribute name="bean" type="xs:string" use="required"/>
    </xs:complexType>

    <xs:complexType name="formattableFormatterType">
        <xs:attribute name="format" type="xs:string"/>
    </xs:complexType>

    <xs:complexType name="dateFormatterType">
        <xs:complexContent>
            <xs:extension base="formattableFormatterType">
                <xs:attribute name="type" type="formatterDateType"/>
                <xs:attribute name="useUserTimezone" type="xs:boolean"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <xs:simpleType name="formatterDateType">
        <xs:restriction base="xs:string">
            <xs:enumeration value="DATE"/>
            <xs:enumeration value="DATETIME"/>
        </xs:restriction>
    </xs:simpleType>

    <xs:complexType name="rendererType">
        <xs:attribute name="nullRepresentation" type="xs:string"/>
    </xs:complexType>

    <xs:complexType name="formattableRendererType">
        <xs:complexContent>
            <xs:extension base="rendererType">
                <xs:attribute name="format" type="xs:string" use="required"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <xs:group name="renderers">
        <xs:sequence>
            <xs:choice maxOccurs="1">
                <xs:element name="checkBoxRenderer" minOccurs="0"/>
                <xs:element name="componentRenderer" minOccurs="0"/>
                <xs:element name="iconRenderer" minOccurs="0"/>
                <xs:element name="progressBarRenderer" minOccurs="0"/>
                <xs:element name="htmlRenderer" minOccurs="0" type="rendererType"/>
                <xs:element name="textRenderer" minOccurs="0" type="rendererType"/>
                <xs:element name="dateRenderer" minOccurs="0" type="formattableRendererType"/>
                <xs:element name="localDateRenderer" minOccurs="0" type="formattableRendererType"/>
                <xs:element name="localDateTimeRenderer" minOccurs="0" type="formattableRendererType"/>
                <xs:element name="numberRenderer" minOccurs="0" type="formattableRendererType"/>
            </xs:choice>
        </xs:sequence>
    </xs:group>

    <xs:complexType name="baseValidatorType">
        <xs:all>
            <xs:element name="notNull" minOccurs="0" type="messageValidatorType"/>
            <xs:element name="custom" minOccurs="0" type="customValidatorType"/>
        </xs:all>
    </xs:complexType>

    <xs:complexType name="collectionValidatorType">
        <xs:complexContent>
            <xs:extension base="baseValidatorType">
                <xs:all>
                    <xs:element name="size" minOccurs="0" type="sizeValidatorType"/>
                    <xs:element name="notEmpty" minOccurs="0" type="messageValidatorType"/>
                </xs:all>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <xs:complexType name="dateValidatorsType">
        <xs:complexContent>
            <xs:extension base="baseValidatorType">
                <xs:all>
                    <xs:element name="future" minOccurs="0" type="dateValidatorType"/>
                    <xs:element name="futureOrPresent" minOccurs="0" type="dateValidatorType"/>
                    <xs:element name="past" minOccurs="0" type="dateValidatorType"/>
                    <xs:element name="pastOrPresent" minOccurs="0" type="dateValidatorType"/>
                </xs:all>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <xs:complexType name="stringValidatorType">
        <xs:complexContent>
            <xs:extension base="collectionValidatorType">
                <xs:sequence>
                    <xs:element name="notBlank" minOccurs="0" type="messageValidatorType"/>
                    <xs:element name="regexp" minOccurs="0" type="regexpValidatorType"/>
                    <xs:element name="email" minOccurs="0" type="messageValidatorType"/>
                </xs:sequence>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <xs:complexType name="constraintValidatorType">
        <xs:complexContent>
            <xs:extension base="stringValidatorType">
                <xs:sequence>
                    <xs:element name="digits" minOccurs="0" type="digitsValidatorType"/>
                    <xs:element name="decimalMin" minOccurs="0" type="decimalMaxMinValidatorType"/>
                    <xs:element name="decimalMax" minOccurs="0" type="decimalMaxMinValidatorType"/>
                    <xs:element name="doubleMin" minOccurs="0" type="decimalMaxMinValidatorType"/>
                    <xs:element name="doubleMax" minOccurs="0" type="decimalMaxMinValidatorType"/>
                    <xs:element name="negativeOrZero" minOccurs="0" type="messageValidatorType"/>
                    <xs:element name="negative" minOccurs="0" type="messageValidatorType"/>
                    <xs:element name="positiveOrZero" minOccurs="0" type="messageValidatorType"/>
                    <xs:element name="positive" minOccurs="0" type="messageValidatorType"/>
                    <xs:element name="max" minOccurs="0" type="maxMinValidatorType"/>
                    <xs:element name="min" minOccurs="0" type="maxMinValidatorType"/>
                </xs:sequence>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <xs:complexType name="messageValidatorType">
        <xs:attribute name="message" type="resourceString"/>
    </xs:complexType>

    <xs:complexType name="dateValidatorType">
        <xs:complexContent>
            <xs:extension base="messageValidatorType">
                <xs:attribute name="checkSeconds" type="xs:boolean"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <xs:complexType name="regexpValidatorType">
        <xs:complexContent>
            <xs:extension base="messageValidatorType">
                <xs:attribute name="regexp" type="xs:string" use="required"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <xs:complexType name="digitsValidatorType">
        <xs:complexContent>
            <xs:extension base="messageValidatorType">
                <xs:attribute name="integer" type="xs:int" use="required"/>
                <xs:attribute name="fraction" type="xs:int" use="required"/>
            </xs:extension>
        </xs:complexContent>

    </xs:complexType>

    <xs:complexType name="decimalMaxMinValidatorType">
        <xs:complexContent>
            <xs:extension base="messageValidatorType">
                <xs:attribute name="value" type="xs:string" use="required"/>
                <xs:attribute name="inclusive" type="xs:boolean"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <xs:complexType name="maxMinValidatorType">
        <xs:complexContent>
            <xs:extension base="messageValidatorType">
                <xs:attribute name="value" type="xs:string" use="required"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <xs:complexType name="sizeValidatorType">
        <xs:complexContent>
            <xs:extension base="messageValidatorType">
                <xs:attribute name="min" type="xs:integer"/>
                <xs:attribute name="max" type="xs:integer"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <xs:complexType name="customValidatorType">
        <xs:complexContent>
            <xs:extension base="messageValidatorType">
                <xs:attribute name="bean" type="xs:string" use="required"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <xs:attributeGroup name="columnsLoadType">
        <xs:attribute name="includeAll" type="xs:boolean"/>
        <xs:attribute name="exclude" type="xs:string"/>
    </xs:attributeGroup>

    <xs:complexType name="tableColumnsList">
        <xs:sequence>
            <xs:element name="column" maxOccurs="unbounded" type="tableColumnComponent"/>
        </xs:sequence>
        <xs:attributeGroup ref="columnsLoadType"/>
    </xs:complexType>

    <xs:complexType name="groupTableColumnsType">
        <xs:sequence>
            <xs:element name="group" minOccurs="0">
                <xs:complexType>
                    <xs:sequence>
                        <xs:element name="column" maxOccurs="unbounded" type="groupTableColumnComponent"/>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element name="column" maxOccurs="unbounded" type="groupTableColumnComponent"/>
        </xs:sequence>
        <xs:attributeGroup ref="columnsLoadType"/>
    </xs:complexType>

    <xs:complexType name="dataGridColumnsList">
        <xs:sequence>
            <xs:element name="column" maxOccurs="unbounded" type="dataGridColumnComponent"/>
        </xs:sequence>
        <xs:attributeGroup ref="columnsLoadType"/>
    </xs:complexType>

    <xs:complexType name="days">
        <xs:sequence>
            <xs:choice minOccurs="7" maxOccurs="7">
                <xs:element name="day" type="day"/>
            </xs:choice>
        </xs:sequence>
    </xs:complexType>

    <xs:complexType name="day">
        <xs:attribute name="dayOfWeek" type="daysOfWeek"/>
        <xs:attribute name="value" type="resourceString"/>
    </xs:complexType>

    <xs:complexType name="months">
        <xs:sequence>
            <xs:choice minOccurs="12" maxOccurs="12">
                <xs:element name="month" type="month"/>
            </xs:choice>
        </xs:sequence>
    </xs:complexType>

    <xs:complexType name="month">
        <xs:attribute name="month" type="monthOfYear"/>
        <xs:attribute name="value" type="resourceString"/>
    </xs:complexType>

    <xs:complexType name="componentAction">
        <xs:sequence>
            <xs:element name="properties" type="actionProperties" minOccurs="0"/>
        </xs:sequence>

        <xs:attributeGroup ref="requiresId"/>
        <xs:attributeGroup ref="hasCaption"/>
        <xs:attributeGroup ref="hasEnableProp"/>
        <xs:attributeGroup ref="hasVisibility"/>
        <xs:attributeGroup ref="hasIcon"/>

        <xs:attribute name="type" type="xs:string"/>

        <xs:attribute name="trackSelection" type="xs:boolean"/>
        <xs:attribute name="shortcut" type="shortcut"/>
        <xs:attribute name="constraintEntityOp" type="constraintEntityOp"/>
    </xs:complexType>

    <xs:complexType name="listComponentComponentAction">
        <xs:complexContent>
            <xs:extension base="componentAction">
                <xs:attribute name="primary" type="xs:boolean"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <xs:complexType name="actionProperties">
        <xs:sequence>
            <xs:element name="property" type="actionProperty" minOccurs="0"/>
        </xs:sequence>
    </xs:complexType>

    <xs:complexType name="actionProperty">
        <xs:attribute name="name" type="xs:string" use="required"/>
        <xs:attribute name="value" type="xs:string"/>
    </xs:complexType>

    <xs:complexType name="popupButtonAction">
        <xs:attributeGroup ref="requiresId"/>
        <xs:attributeGroup ref="hasCaption"/>
        <xs:attributeGroup ref="hasEnableProp"/>
        <xs:attributeGroup ref="hasVisibility"/>
        <xs:attributeGroup ref="hasIcon"/>
        <xs:attribute name="type" type="xs:string"/>
    </xs:complexType>

    <xs:complexType name="suggestionFieldQuery">
        <xs:simpleContent>
            <xs:extension base="xs:string">
                <xs:attribute name="entityClass" type="xs:string" use="required"/>
                <xs:attribute name="searchStringFormat" type="xs:string"/>
                <xs:attribute name="fetchPlan" type="xs:string"/>
                <xs:attribute name="escapeValueForLike" type="xs:boolean"/>
            </xs:extension>
        </xs:simpleContent>
    </xs:complexType>

    <xs:complexType name="dependencies">
        <xs:sequence>
            <xs:choice minOccurs="0">
                <xs:element name="dependency" type="dependency"/>
            </xs:choice>
        </xs:sequence>
    </xs:complexType>

    <xs:complexType name="dependency">
        <xs:attribute name="path" type="xs:string" use="required"/>
        <xs:attribute name="type" type="dependencyType"/>
    </xs:complexType>

    <xs:attributeGroup name="responsiveGridColumnColumnsValueGroup">
        <xs:attribute name="xs" type="responsiveGridColumnColumnsValue"/>
        <xs:attribute name="sm" type="responsiveGridColumnColumnsValue"/>
        <xs:attribute name="md" type="responsiveGridColumnColumnsValue"/>
        <xs:attribute name="lg" type="responsiveGridColumnColumnsValue"/>
        <xs:attribute name="xl" type="responsiveGridColumnColumnsValue"/>
    </xs:attributeGroup>

    <xs:attributeGroup name="responsiveGridColumnAlignGroup">
        <xs:attribute name="alignSelf" type="responsiveGridColumnAlignSelf"/>
        <xs:attribute name="alignSelfSm" type="responsiveGridColumnAlignSelf"/>
        <xs:attribute name="alignSelfMd" type="responsiveGridColumnAlignSelf"/>
        <xs:attribute name="alignSelfLg" type="responsiveGridColumnAlignSelf"/>
        <xs:attribute name="alignSelfXl" type="responsiveGridColumnAlignSelf"/>
    </xs:attributeGroup>

    <xs:attributeGroup name="responsiveGridColumnOrderValue">
        <xs:attribute name="order" type="responsiveGridColumnOrderValue"/>
        <xs:attribute name="orderSm" type="responsiveGridColumnOrderValue"/>
        <xs:attribute name="orderMd" type="responsiveGridColumnOrderValue"/>
        <xs:attribute name="orderLg" type="responsiveGridColumnOrderValue"/>
        <xs:attribute name="orderXl" type="responsiveGridColumnOrderValue"/>
    </xs:attributeGroup>

    <xs:attributeGroup name="responsiveGridColumnOffsetGroup">
        <xs:attribute name="offset" type="xs:integer"/>
        <xs:attribute name="offsetSm" type="xs:integer"/>
        <xs:attribute name="offsetMd" type="xs:integer"/>
        <xs:attribute name="offsetLg" type="xs:integer"/>
        <xs:attribute name="offsetXl" type="xs:integer"/>
    </xs:attributeGroup>

    <xs:attributeGroup name="responsiveGridRowColumnsGroup">
        <xs:attribute name="cols" type="xs:integer"/>
        <xs:attribute name="colsSm" type="xs:integer"/>
        <xs:attribute name="colsMd" type="xs:integer"/>
        <xs:attribute name="colsLg" type="xs:integer"/>
        <xs:attribute name="colsXl" type="xs:integer"/>
    </xs:attributeGroup>

    <xs:attributeGroup name="responsiveGridRowAlignItemsGroup">
        <xs:attribute name="alignItems" type="responsiveGridRowAlignItems"/>
        <xs:attribute name="alignItemsSm" type="responsiveGridRowAlignItems"/>
        <xs:attribute name="alignItemsMd" type="responsiveGridRowAlignItems"/>
        <xs:attribute name="alignItemsLg" type="responsiveGridRowAlignItems"/>
        <xs:attribute name="alignItemsXl" type="responsiveGridRowAlignItems"/>
    </xs:attributeGroup>

    <xs:attributeGroup name="responsiveGridRowJustifyContentGroup">
        <xs:attribute name="justifyContent" type="responsiveGridRowJustifyContent"/>
        <xs:attribute name="justifyContentSm" type="responsiveGridRowJustifyContent"/>
        <xs:attribute name="justifyContentMd" type="responsiveGridRowJustifyContent"/>
        <xs:attribute name="justifyContentLg" type="responsiveGridRowJustifyContent"/>
        <xs:attribute name="justifyContentXl" type="responsiveGridRowJustifyContent"/>
    </xs:attributeGroup>

    <!-- Components -->

    <!-- Label -->
    <xs:complexType name="labelComponent">
        <xs:all>
            <xs:element name="formatter" minOccurs="0" type="formatterType"/>
        </xs:all>

        <xs:attributeGroup ref="hasId"/>
        <xs:attributeGroup ref="hasIcon"/>
        <xs:attributeGroup ref="hasVisibility"/>
        <xs:attributeGroup ref="hasSize"/>
        <xs:attributeGroup ref="hasAlign"/>
        <xs:attributeGroup ref="hasDataContainer"/>
        <xs:attributeGroup ref="hasContextHelp"/>
        <xs:attributeGroup ref="hasHtmlDescription"/>

        <xs:attributeGroup ref="hasHtmlSanitizer"/>

        <xs:attributeGroup ref="hasCss"/>

        <xs:attribute name="stylename" type="labelStylename"/>
        <xs:attribute name="value" type="resourceString"/>
        <xs:attribute name="htmlEnabled" type="xs:boolean"/>
    </xs:complexType>

    <!-- Link -->
    <xs:complexType name="linkComponent">
        <xs:complexContent>
            <xs:extension base="baseComponent">
                <xs:attribute name="url" type="xs:anyURI"/>
                <xs:attribute name="target" type="linkTarget"/>
                <xs:attribute name="rel" type="xs:string"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <!-- CheckBox -->
    <xs:complexType name="checkBoxComponent">
        <xs:complexContent>
            <xs:extension base="baseComponent">
                <xs:attributeGroup ref="hasBuffered"/>
                <xs:attributeGroup ref="hasTabIndex"/>
                <xs:attributeGroup ref="hasEditable"/>
                <xs:attributeGroup ref="hasDataContainer"/>
                <xs:attributeGroup ref="hasContextHelp"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <!-- Slider -->
    <xs:complexType name="sliderComponent">
        <xs:complexContent>
            <xs:extension base="baseFieldComponent">
                <xs:attribute name="datatype" type="numericDatatypeEnum"/>

                <xs:attribute name="min" type="xs:double"/>
                <xs:attribute name="max" type="xs:double"/>

                <xs:attribute name="orientation" type="orientation"/>
                <xs:attribute name="resolution" type="xs:int"/>

                <xs:attribute name="updateValueOnClick" type="xs:boolean"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <!-- DatePicker -->
    <xs:complexType name="datePickerComponent">
        <xs:complexContent>
            <xs:extension base="baseComponent">
                <xs:attribute name="resolution">
                    <xs:simpleType>
                        <xs:restriction base="xs:string">
                            <xs:enumeration value="DAY"/>
                            <xs:enumeration value="MONTH"/>
                            <xs:enumeration value="YEAR"/>
                        </xs:restriction>
                    </xs:simpleType>
                </xs:attribute>

                <xs:attribute name="rangeStart" type="xs:string"/>
                <xs:attribute name="rangeEnd" type="xs:string"/>
                <xs:attribute name="datatype" type="dateTimeDatatypeEnum"/>

                <xs:attributeGroup ref="hasTabIndex"/>
                <xs:attributeGroup ref="hasEditable"/>
                <xs:attributeGroup ref="hasDataContainer"/>
                <xs:attributeGroup ref="hasContextHelp"/>
                <xs:attributeGroup ref="hasBuffered"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <!-- BaseComponent -->
    <xs:complexType name="baseComponent">
        <xs:attributeGroup ref="hasId"/>
        <xs:attributeGroup ref="hasHtmlCaption"/>
        <xs:attributeGroup ref="hasIcon"/>
        <xs:attributeGroup ref="hasSize"/>
        <xs:attributeGroup ref="hasStyle"/>
        <xs:attributeGroup ref="hasVisibility"/>
        <xs:attributeGroup ref="hasAlign"/>
        <xs:attributeGroup ref="hasEnableProp"/>
        <xs:attributeGroup ref="hasResponsiveProp"/>

        <xs:attributeGroup ref="hasCss"/>
        <xs:attributeGroup ref="hasHtmlSanitizer"/>
    </xs:complexType>

    <!-- BaseField -->
    <xs:complexType name="baseFieldComponent">
        <xs:complexContent>
            <xs:extension base="baseComponent">
                <xs:attributeGroup ref="hasEditable"/>
                <xs:attributeGroup ref="hasRequirements"/>
                <xs:attributeGroup ref="hasDataContainer"/>
                <xs:attributeGroup ref="hasContextHelp"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <!-- BaseTextComponent -->
    <xs:complexType name="baseTextComponent">
        <xs:complexContent>
            <xs:extension base="baseFieldComponent">
                <xs:attributeGroup ref="hasTabIndex"/>
                <xs:attributeGroup ref="hasContextHelp"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <!-- Calendar -->
    <xs:complexType name="calendarComponent">
        <xs:complexContent>
            <xs:extension base="baseComponent">
                <xs:all>
                    <xs:element name="dayNames" minOccurs="0" type="days"/>
                    <xs:element name="monthNames" minOccurs="0" type="months"/>
                </xs:all>

                <xs:attributeGroup ref="hasContextHelp"/>

                <xs:attribute name="dataContainer" type="xs:string"/>

                <xs:attribute name="datatype" type="dateTimeDatatypeEnum"/>

                <xs:attribute name="startDate" type="xs:string"/>
                <xs:attribute name="endDate" type="xs:string"/>
                <xs:attribute name="timeFormat" type="calendarTimeFormat"/>
                <xs:attribute name="navigationButtonsVisible" type="xs:boolean"/>

                <xs:attribute name="startDateProperty" type="xs:string"/>
                <xs:attribute name="endDateProperty" type="xs:string"/>
                <xs:attribute name="captionProperty" type="xs:string"/>
                <xs:attribute name="descriptionProperty" type="xs:string"/>
                <xs:attribute name="stylenameProperty" type="xs:string"/>
                <xs:attribute name="isAllDayProperty" type="xs:string"/>

                <xs:attribute name="firstVisibleHourOfDay" type="xs:int"/>
                <xs:attribute name="lastVisibleHourOfDay" type="xs:int"/>
                <xs:attribute name="firstVisibleDayOfWeek" type="xs:int"/>
                <xs:attribute name="lastVisibleDayOfWeek" type="xs:int"/>

                <xs:attribute name="weeklyCaptionFormat" type="xs:string"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <!-- TextField -->
    <xs:complexType name="textFieldComponent">
        <xs:complexContent>
            <xs:extension base="baseTextComponent">
                <xs:sequence>
                    <xs:element name="formatter" minOccurs="0" type="formatterType"/>
                    <xs:element name="validators" minOccurs="0" type="constraintValidatorType"/>
                </xs:sequence>

                <xs:attributeGroup ref="hasBuffered"/>
                <xs:attributeGroup ref="hasDatatype"/>
                <xs:attributeGroup ref="hasConversionErrorMessage"/>

                <xs:attribute name="stylename" type="textFieldStylename"/>
                <xs:attribute name="maxLength" type="xs:int"/>
                <xs:attribute name="trim" type="xs:boolean"/>
                <xs:attribute name="inputPrompt" type="resourceString"/>
                <xs:attribute name="caseConversion" type="caseConversion"/>
                <xs:attribute name="textChangeEventMode" type="textChangeEventMode"/>
                <xs:attribute name="textChangeTimeout" type="xs:int"/>
                <xs:attribute name="htmlName" type="xs:string"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <!-- CurrencyField -->
    <xs:simpleType name="currencyAlignMode">
        <xs:restriction>
            <xs:enumeration value="LEFT"/>
            <xs:enumeration value="RIGHT"/>
        </xs:restriction>
    </xs:simpleType>

    <xs:complexType name="currencyFieldComponent">
        <xs:complexContent>
            <xs:extension base="baseFieldComponent">
                <xs:attributeGroup ref="hasConversionErrorMessage"/>
                <xs:attributeGroup ref="hasBuffered"/>

                <xs:attribute name="currency" type="xs:string"/>
                <xs:attribute name="showCurrencyLabel" type="xs:boolean"/>
                <xs:attribute name="currencyLabelPosition" type="currencyAlignMode"/>
                <xs:attribute name="datatype" type="numericDatatypeEnum"/>
                <xs:attribute name="stylename" type="currencyFieldStylename"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <!-- TextArea -->
    <xs:complexType name="textAreaComponent">
        <xs:complexContent>
            <xs:extension base="baseTextComponent">
                <xs:sequence>
                    <xs:element name="validators" minOccurs="0" type="constraintValidatorType"/>
                </xs:sequence>
                <xs:attribute name="rows" type="xs:int"/>

                <xs:attribute name="caseConversion" type="caseConversion"/>

                <xs:attributeGroup ref="hasBuffered"/>
                <xs:attributeGroup ref="hasDatatype"/>
                <xs:attributeGroup ref="hasConversionErrorMessage"/>

                <xs:attribute name="stylename" type="textAreaStylename"/>
                <xs:attribute name="maxLength" type="xs:int"/>
                <xs:attribute name="trim" type="xs:boolean"/>
                <xs:attribute name="inputPrompt" type="resourceString"/>
                <xs:attribute name="wordWrap" type="xs:boolean"/>
                <xs:attribute name="textChangeEventMode" type="textChangeEventMode"/>
                <xs:attribute name="textChangeTimeout" type="xs:int"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <!-- ResizableTextArea -->
    <xs:complexType name="resizableTextAreaComponent">
        <xs:complexContent>
            <xs:extension base="textAreaComponent">
                <xs:attribute name="resizableDirection" type="resizableDirection"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <!-- SourceCodeEditor -->
    <xs:complexType name="sourceCodeEditorComponent">
        <xs:complexContent>
            <xs:extension base="baseTextComponent">
                <xs:sequence>
                    <xs:element name="validators" minOccurs="0" type="stringValidatorType"/>
                </xs:sequence>
                <xs:attribute name="mode" type="sourceCodeEditorMode"/>
                <xs:attribute name="printMargin" type="xs:boolean"/>
                <xs:attribute name="printMarginColumn" type="xs:integer"/>
                <xs:attribute name="showGutter" type="xs:boolean"/>
                <xs:attribute name="highlightActiveLine" type="xs:boolean"/>
                <xs:attribute name="handleTabKey" type="xs:boolean"/>
                <xs:attribute name="suggestOnDot" type="xs:boolean"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <!-- MaskedField -->
    <xs:complexType name="maskedFieldComponent">
        <xs:complexContent>
            <xs:extension base="baseTextComponent">
                <xs:sequence>
                    <xs:element name="validators" minOccurs="0" type="constraintValidatorType"/>
                </xs:sequence>
                <xs:attribute name="mask" type="xs:string" use="required"/>
                <xs:attribute name="valueMode" type="maskedFieldValueMode"/>

                <xs:attributeGroup ref="hasBuffered"/>
                <xs:attributeGroup ref="hasDatatype"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <!-- PasswordField -->
    <xs:complexType name="passwordFieldComponent">
        <xs:complexContent>
            <xs:extension base="baseTextComponent">
                <xs:sequence>
                    <xs:element name="validators" minOccurs="0" type="stringValidatorType"/>
                </xs:sequence>
                <xs:attribute name="maxLength" type="xs:int"/>
                <xs:attribute name="autocomplete" type="xs:boolean"/>
                <xs:attribute name="capsLockIndicator" type="xs:string"/>
                <xs:attribute name="inputPrompt" type="resourceString"/>
                <xs:attribute name="htmlName" type="xs:string"/>

                <xs:attributeGroup ref="hasBuffered"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <!-- RichTextArea -->
    <xs:complexType name="richTextAreaComponent">
        <xs:complexContent>
            <xs:extension base="baseTextComponent">
                <xs:sequence>
                    <xs:element name="validators" minOccurs="0" type="stringValidatorType"/>
                </xs:sequence>
                <xs:attributeGroup ref="hasBuffered"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <!-- DateField -->
    <xs:complexType name="dateFieldComponent">
        <xs:complexContent>
            <xs:extension base="baseFieldComponent">
                <xs:sequence>
                    <xs:element name="validators" minOccurs="0" type="dateValidatorsType"/>
                </xs:sequence>

                <xs:attribute name="stylename" type="dateFieldStylename"/>
                <xs:attribute name="rangeStart" type="xs:string"/>
                <xs:attribute name="rangeEnd" type="xs:string"/>

                <xs:attribute name="resolution" type="dateFieldResolution"/>
                <xs:attribute name="dateFormat" type="xs:string"/>
                <xs:attribute name="datatype" type="dateTimeDatatypeEnum"/>
                <xs:attribute name="timeMode" type="timeModeEnum"/>

                <xs:attribute name="autofill" type="xs:boolean"/>

                <xs:attributeGroup ref="hasBuffered"/>
                <xs:attributeGroup ref="hasTabIndex"/>
                <xs:attributeGroup ref="hasContextHelp"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <!-- ColorPicker -->
    <xs:complexType name="colorPickerComponent">

        <xs:complexContent>
            <xs:extension base="baseFieldComponent">
                <xs:attribute name="popupCaption" type="resourceString"/>
                <xs:attribute name="confirmButtonCaption" type="resourceString"/>
                <xs:attribute name="cancelButtonCaption" type="resourceString"/>
                <xs:attribute name="swatchesTabCaption" type="resourceString"/>
                <xs:attribute name="lookupAllCaption" type="resourceString"/>
                <xs:attribute name="lookupRedCaption" type="resourceString"/>
                <xs:attribute name="lookupGreenCaption" type="resourceString"/>
                <xs:attribute name="lookupBlueCaption" type="resourceString"/>
                <xs:attribute name="buttonCaption" type="resourceString"/>
                <xs:attribute name="redSliderCaption" type="resourceString"/>
                <xs:attribute name="greenSliderCaption" type="resourceString"/>
                <xs:attribute name="blueSliderCaption" type="resourceString"/>
                <xs:attribute name="hueSliderCaption" type="resourceString"/>
                <xs:attribute name="saturationSliderCaption" type="resourceString"/>
                <xs:attribute name="valueSliderCaption" type="resourceString"/>

                <xs:attribute name="swatchesVisible" type="xs:boolean"/>
                <xs:attribute name="rgbVisible" type="xs:boolean"/>
                <xs:attribute name="hsvVisible" type="xs:boolean"/>
                <xs:attribute name="historyVisible" type="xs:boolean"/>
                <xs:attribute name="defaultCaptionEnabled" type="xs:boolean"/>

                <xs:attributeGroup ref="hasTabIndex"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <!-- TimeField -->
    <xs:complexType name="timeFieldComponent">
        <xs:complexContent>
            <xs:extension base="baseFieldComponent">
                <xs:sequence>
                    <xs:element name="validators" minOccurs="0" type="dateValidatorsType"/>
                </xs:sequence>
                <xs:attribute name="timeFormat" type="xs:string"/>
                <xs:attribute name="resolution" type="timeFieldResolution"/>
                <xs:attribute name="datatype" type="timeDatatypeEnum"/>
                <xs:attribute name="timeMode" type="timeModeEnum"/>

                <xs:attributeGroup ref="hasBuffered"/>
                <xs:attributeGroup ref="hasTabIndex"/>
                <xs:attributeGroup ref="hasContextHelp"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <!-- Progress bar -->
    <xs:complexType name="progressBarComponent">
        <xs:complexContent>
            <xs:extension base="baseComponent">
                <xs:attributeGroup ref="hasContextHelp"/>

                <xs:attribute name="stylename" type="progressBarStylename"/>
                <xs:attribute name="indeterminate" type="xs:boolean"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <!-- ComboBox-->
    <xs:complexType name="comboBoxComponent">
        <xs:complexContent>
            <xs:extension base="baseFieldComponent">
                <xs:sequence>
                    <xs:element name="validators" minOccurs="0" type="constraintValidatorType"/>
                </xs:sequence>

                <xs:attributeGroup ref="hasBuffered"/>

                <xs:attribute name="stylename" type="comboBoxStylename"/>
                <xs:attribute name="filterMode" type="filterMode"/>
                <xs:attribute name="nullName" type="xs:string"/>
                <xs:attribute name="pageLength" type="xs:int"/>

                <xs:attribute name="textInputAllowed" type="xs:boolean"/>
                <xs:attribute name="nullOptionVisible" type="xs:boolean"/>
                <xs:attribute name="inputPrompt" type="resourceString"/>

                <xs:attribute name="optionsEnum" type="xs:string"/>

                <xs:attributeGroup ref="hasTabIndex"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <xs:simpleType name="popupWidthType">
        <xs:union>
            <xs:simpleType>
                <xs:restriction base="resourceString"/>
            </xs:simpleType>
            <xs:simpleType>
                <xs:restriction base="xs:string">
                    <xs:enumeration value="auto"/>
                    <xs:enumeration value="parent"/>
                </xs:restriction>
            </xs:simpleType>
        </xs:union>
    </xs:simpleType>


    <xs:complexType name="baseSuggestionFieldComponent">
        <xs:complexContent>
            <xs:extension base="baseFieldComponent">
                <xs:attribute name="stylename" type="suggestionFieldStylename"/>

                <xs:attribute name="asyncSearchDelayMs" type="xs:integer"/>
                <xs:attribute name="minSearchStringLength" type="xs:integer"/>
                <xs:attribute name="suggestionsLimit" type="xs:integer"/>

                <xs:attribute name="inputPrompt" type="resourceString"/>

                <xs:attribute name="popupWidth" type="popupWidthType"/>

                <xs:attributeGroup ref="hasTabIndex"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <!-- SuggestionField -->
    <xs:complexType name="suggestionFieldComponent">
        <xs:complexContent>
            <xs:extension base="baseSuggestionFieldComponent">
                <xs:all>
                    <xs:element name="validators" minOccurs="0" type="baseValidatorType"/>
                    <xs:element name="formatter" minOccurs="0" type="formatterType"/>
                </xs:all>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <!-- EntitySuggestionField -->
    <xs:complexType name="entitySuggestionFieldComponent">
        <xs:complexContent>
            <xs:extension base="suggestionFieldComponent">
                <xs:all>
                    <xs:element name="actions" minOccurs="0" type="componentActions"/>
                    <xs:element name="query" minOccurs="0" type="suggestionFieldQuery"/>
                </xs:all>

                <xs:attribute name="metaClass" type="xs:string"/>
                <xs:attributeGroup ref="hasTabIndex"/>
                <xs:attributeGroup ref="hasCaptionSource"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <xs:complexType name="baseValuePickerComponent">
        <xs:complexContent>
            <xs:extension base="baseFieldComponent">
                <xs:sequence>
                    <xs:element name="actions" minOccurs="0" type="componentActions"/>
                    <xs:element name="formatter" minOccurs="0" type="formatterType"/>
                </xs:sequence>

                <xs:attributeGroup ref="hasBuffered"/>
                <xs:attributeGroup ref="hasTabIndex"/>

                <xs:attribute name="fieldEditable" type="xs:boolean"/>
                <xs:attribute name="stylename" type="valuePickerStylename"/>
                <xs:attribute name="inputPrompt" type="resourceString"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <!-- ValuePicker -->
    <xs:complexType name="valuePickerComponent">
        <xs:complexContent>
            <xs:extension base="baseValuePickerComponent">
                <xs:sequence>
                    <xs:element name="validators" minOccurs="0" type="baseValidatorType"/>
                </xs:sequence>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <!-- ValuesPicker -->
    <xs:complexType name="valuesPickerComponent">
        <xs:complexContent>
            <xs:extension base="baseValuePickerComponent">
                <xs:sequence>
                    <xs:element name="validators" minOccurs="0" type="collectionValidatorType"/>
                </xs:sequence>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <!-- EntityPicker -->
    <xs:complexType name="entityPickerComponent">
        <xs:complexContent>
            <xs:extension base="baseFieldComponent">
                <xs:sequence>
                    <xs:element name="actions" minOccurs="0" type="componentActions"/>
                    <xs:element name="validators" minOccurs="0" type="baseValidatorType"/>
                    <xs:element name="formatter" minOccurs="0" type="formatterType"/>
                </xs:sequence>

                <xs:attributeGroup ref="hasBuffered"/>
                <xs:attributeGroup ref="hasCaptionSource"/>
                <xs:attributeGroup ref="hasTabIndex"/>

                <xs:attribute name="metaClass" type="xs:string"/>
                <xs:attribute name="fieldEditable" type="xs:boolean"/>
                <xs:attribute name="stylename" type="entityPickerStylename"/>
                <xs:attribute name="inputPrompt" type="resourceString"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <!-- EntityComboBox -->
    <xs:complexType name="entityComboBoxComponent">
        <xs:complexContent>
            <xs:extension base="baseFieldComponent">
                <xs:sequence>
                    <xs:element name="actions" minOccurs="0" type="componentActions"/>
                    <xs:element name="validators" minOccurs="0" type="baseValidatorType"/>
                </xs:sequence>

                <xs:attribute name="stylename" type="entityComboBoxStylename"/>

                <xs:attributeGroup ref="hasBuffered"/>
                <xs:attributeGroup ref="hasCaptionSource"/>
                <xs:attributeGroup ref="hasTabIndex"/>

                <xs:attribute name="optionsContainer" type="xs:string"/>
                <xs:attribute name="nullOptionVisible" type="xs:boolean"/>
                <xs:attribute name="textInputAllowed" type="xs:boolean"/>
                <xs:attribute name="filterMode" type="filterMode"/>
                <xs:attribute name="nullName" type="resourceString"/>
                <xs:attribute name="metaClass" type="xs:string"/>
                <xs:attribute name="pageLength" type="xs:int"/>
                <xs:attribute name="inputPrompt" type="resourceString"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <xs:complexType name="optionsBaseFieldComponent">
        <xs:complexContent>
            <xs:extension base="baseFieldComponent">
                <xs:sequence>
                    <xs:element name="validators" minOccurs="0" type="collectionValidatorType"/>
                </xs:sequence>

                <xs:attributeGroup ref="hasCaptionSource"/>
                <xs:attributeGroup ref="hasTabIndex"/>

                <xs:attribute name="optionsContainer" type="xs:string"/>
                <xs:attribute name="optionsEnum" type="xs:string"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <!-- SingleSelectList -->
    <xs:complexType name="singleSelectListComponent">
        <xs:complexContent>
            <xs:extension base="optionsBaseFieldComponent">
                <xs:attribute name="nullOptionVisible" type="xs:boolean"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <!-- RadioButtonGroup -->
    <xs:complexType name="radioButtonGroupComponent">
        <xs:complexContent>
            <xs:extension base="optionsBaseFieldComponent">
                <xs:attribute name="orientation" type="orientation"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <!-- CheckBoxGroup -->
    <xs:complexType name="checkBoxGroupComponent">
        <xs:complexContent>
            <xs:extension base="optionsBaseFieldComponent">
                <xs:attribute name="orientation" type="orientation"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <!-- FileUploadField -->
    <xs:complexType name="fileUploadComponent">
        <xs:complexContent>
            <xs:extension base="baseFieldComponent">
                <xs:attributeGroup ref="hasDataContainer"/>
                <xs:attributeGroup ref="hasRequirements"/>
                <xs:attributeGroup ref="hasEditable"/>
                <xs:attributeGroup ref="isUploadComponent"/>
                <xs:attributeGroup ref="hasTabIndex"/>
                <xs:attributeGroup ref="hasContextHelp"/>
                <xs:attributeGroup ref="hasBuffered"/>

                <xs:attribute name="showClearButton" type="xs:boolean"/>
                <xs:attribute name="clearButtonCaption" type="resourceString"/>
                <xs:attribute name="clearButtonIcon" type="resourceString"/>
                <xs:attribute name="clearButtonDescription" type="resourceString"/>

                <xs:attribute name="uploadButtonCaption" type="resourceString"/>
                <xs:attribute name="uploadButtonIcon" type="resourceString"/>
                <xs:attribute name="uploadButtonDescription" type="resourceString"/>

                <xs:attribute name="showFileName" type="xs:boolean"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <!-- FileStorageUploadField -->
    <xs:complexType name="fileStorageUploadComponent">
        <xs:complexContent>
            <xs:extension base="fileUploadComponent">
                <xs:attribute name="fileStoragePutMode" type="fileStoragePutMode"/>
                <xs:attribute name="fileStorage" type="xs:string"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <!-- FileMultiUploadField -->
    <xs:complexType name="multiuploadComponent">
        <xs:complexContent>
            <xs:extension base="baseComponent">
                <xs:attributeGroup ref="isUploadComponent"/>

                <xs:attributeGroup ref="hasTabIndex"/>
                <xs:attributeGroup ref="hasContextHelp"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <!-- Embedded -->
    <xs:complexType name="embeddedComponent">
        <xs:complexContent>
            <xs:extension base="baseComponent">
                <xs:attributeGroup ref="hasContextHelp"/>

                <xs:attribute name="src" type="xs:string"/>
                <xs:attribute name="relativeSrc" type="xs:string"/>
                <xs:attribute name="type" type="embeddedType"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <xs:attributeGroup name="hasStreamSettings">
        <xs:attribute name="cacheTime" type="xs:long"/>
        <xs:attribute name="bufferSize" type="xs:integer"/>
    </xs:attributeGroup>

    <xs:simpleType name="mimeType">
        <xs:union>
            <xs:simpleType>
                <xs:restriction base="xs:string"/>
            </xs:simpleType>
            <xs:simpleType>
                <xs:restriction base="xs:string">
                    <xs:enumeration value="image/bmp"/>
                    <xs:enumeration value="image/gif"/>
                    <xs:enumeration value="image/jpeg"/>
                    <xs:enumeration value="image/png"/>
                    <xs:enumeration value="image/svg+xml"/>
                    <xs:enumeration value="image/tiff"/>
                </xs:restriction>
            </xs:simpleType>
        </xs:union>
    </xs:simpleType>

    <xs:complexType name="fileResource">
        <xs:attribute name="path" type="xs:string" use="required"/>
        <xs:attributeGroup ref="hasStreamSettings"/>
    </xs:complexType>

    <xs:complexType name="themeResource">
        <xs:attribute name="path" type="xs:string" use="required"/>
    </xs:complexType>

    <xs:complexType name="classpathResource">
        <xs:attribute name="path" type="xs:string" use="required"/>
        <xs:attribute name="mimeType" type="mimeType"/>
        <xs:attributeGroup ref="hasStreamSettings"/>
    </xs:complexType>

    <xs:complexType name="urlResource">
        <xs:attribute name="url" type="xs:string" use="required"/>
        <xs:attribute name="mimeType" type="mimeType"/>
    </xs:complexType>

    <xs:complexType name="relativePathResource">
        <xs:attribute name="path" type="xs:string" use="required"/>
        <xs:attribute name="mimeType" type="mimeType"/>
    </xs:complexType>

    <xs:simpleType name="scaleMode">
        <xs:restriction base="xs:string">
            <xs:enumeration value="NONE"/>
            <xs:enumeration value="FILL"/>
            <xs:enumeration value="CONTAIN"/>
            <xs:enumeration value="COVER"/>
            <xs:enumeration value="SCALE_DOWN"/>
        </xs:restriction>
    </xs:simpleType>

    <xs:complexType name="resourceType">
        <xs:choice minOccurs="0">
            <xs:element name="file" type="fileResource"/>
            <xs:element name="theme" type="themeResource"/>
            <xs:element name="classpath" type="classpathResource"/>
            <xs:element name="url" type="urlResource"/>
            <xs:element name="relativePath" type="relativePathResource"/>
        </xs:choice>
    </xs:complexType>

    <xs:complexType name="resourceViewComponent">
        <xs:complexContent>
            <xs:extension base="baseComponent">
                <xs:all>
                    <xs:element name="resource" minOccurs="0" type="resourceType"/>
                </xs:all>

                <xs:attribute name="alternateText" type="xs:string"/>

                <xs:attributeGroup ref="hasContextHelp"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <xs:complexType name="browserFrameComponent">
        <xs:complexContent>
            <xs:extension base="resourceViewComponent">
                <xs:attributeGroup ref="hasSandbox"/>
                <xs:attributeGroup ref="hasSrcdoc"/>
                <xs:attributeGroup ref="hasAllow"/>
                <xs:attributeGroup ref="hasReferrerpolicy"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <xs:complexType name="imageComponent">
        <xs:complexContent>
            <xs:extension base="resourceViewComponent">
                <xs:attribute name="scaleMode" type="scaleMode"/>

                <xs:attributeGroup ref="hasEditable"/>
                <xs:attributeGroup ref="hasRequirements"/>
                <xs:attributeGroup ref="hasDataContainer"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <!-- Tree -->
    <xs:complexType name="treeComponent">
        <xs:complexContent>
            <xs:extension base="baseComponent">
                <xs:all>
                    <xs:element name="actions" minOccurs="0" type="listComponentComponentActions"/>
                    <xs:element name="buttonsPanel" minOccurs="0" type="buttonsPanelComponent"/>
                </xs:all>

                <xs:attribute name="dataContainer" type="xs:string"/>
                <xs:attribute name="hierarchyProperty" type="xs:string"/>
                <xs:attribute name="showOrphans" type="xs:boolean"/>
                <xs:attributeGroup ref="hasCaptionSource"/>

                <xs:attribute name="selectionMode" type="treeSelectionMode"/>

                <xs:attribute name="contentMode" type="contentMode"/>

                <xs:attribute name="rowHeight" type="xs:double"/>

                <xs:attributeGroup ref="hasTabIndex"/>
                <xs:attributeGroup ref="hasContextHelp"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <!-- Button -->
    <xs:complexType name="buttonComponent">
        <xs:complexContent>
            <xs:extension base="baseComponent">
                <xs:attributeGroup ref="hasTabIndex"/>

                <xs:attribute name="action" type="xs:string"/>
                <xs:attribute name="disableOnClick" type="xs:boolean"/>
                <xs:attribute name="shortcut" type="shortcut"/>

                <xs:attribute name="stylename" type="buttonStylename"/>

                <xs:attribute name="primary" type="xs:boolean"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <!-- PopupButton -->
    <xs:complexType name="popupButtonComponent">
        <xs:complexContent>
            <xs:extension base="baseComponent">
                <xs:sequence>
                    <xs:choice minOccurs="0">
                        <xs:element name="actions" nillable="true" minOccurs="0">
                            <xs:complexType>
                                <xs:sequence>
                                    <xs:choice maxOccurs="unbounded">
                                        <xs:element name="action" type="popupButtonAction"/>
                                    </xs:choice>
                                </xs:sequence>
                            </xs:complexType>
                        </xs:element>

                        <xs:element name="popup">
                            <xs:complexType>
                                <xs:sequence>
                                    <xs:group ref="singleLayoutOrComponent"/>
                                </xs:sequence>
                            </xs:complexType>
                        </xs:element>
                    </xs:choice>
                </xs:sequence>

                <xs:attribute name="showActionIcons" type="xs:boolean"/>

                <xs:attribute name="menuWidth" type="componentSize"/>
                <xs:attribute name="autoClose" type="xs:boolean"/>
                <xs:attribute name="closePopupOnOutsideClick" type="xs:boolean"/>
                <xs:attribute name="togglePopupVisibilityOnClick" type="xs:boolean"/>
                <xs:attribute name="popupOpenDirection" type="popupOpenDirection"/>

                <xs:attributeGroup ref="hasTabIndex"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <!-- PopupView -->
    <xs:complexType name="popupViewComponent">
        <xs:complexContent>
            <xs:extension base="baseComponent">
                <xs:sequence>
                    <xs:group ref="singleLayoutOrComponent"/>
                </xs:sequence>

                <xs:attribute name="minimizedValue" type="resourceString"/>
                <xs:attribute name="captionAsHtml" type="xs:boolean"/>
                <xs:attribute name="hideOnMouseOut" type="xs:boolean"/>

                <xs:attribute name="popupPosition" type="popupPositionEnum"/>
                <xs:attribute name="popupTop" type="xs:int"/>
                <xs:attribute name="popupLeft" type="xs:int"/>

                <xs:attributeGroup ref="hasTabIndex"/>
                <xs:attributeGroup ref="hasContextHelp"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <!-- Pagination -->
    <xs:complexType name="paginationComponent">
        <xs:complexContent>
            <xs:extension base="basePaginationDataBinding">
                <xs:attribute name="maxVisiblePages" type="xs:integer"/>

                <xs:attributeGroup ref="basePaginationAttributesGroup"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <!-- SimplePagination -->
    <xs:complexType name="simplePaginationComponent">
        <xs:complexContent>
            <xs:extension base="basePaginationDataBinding">
                <xs:attribute name="autoLoad" type="xs:boolean"/>

                <xs:attributeGroup ref="basePaginationAttributesGroup"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <!-- ListComponent's SimplePagination   -->
    <xs:complexType name="listComponentSimplePaginationComponent">
        <xs:attributeGroup ref="basePaginationAttributesGroup"/>

        <xs:attribute name="autoLoad" type="xs:boolean"/>
    </xs:complexType>

    <xs:attributeGroup name="basePaginationAttributesGroup">
        <xs:attributeGroup ref="hasId"/>
        <xs:attributeGroup ref="hasSize"/>
        <xs:attributeGroup ref="hasStyle"/>
        <xs:attributeGroup ref="hasVisibility"/>
        <xs:attributeGroup ref="hasAlign"/>
        <xs:attributeGroup ref="hasCss"/>

        <xs:attribute name="itemsPerPageDefaultValue" type="xs:integer"/>
        <xs:attribute name="itemsPerPageOptions" type="resourceString"/>
        <xs:attribute name="itemsPerPageVisible" type="xs:boolean"/>
        <xs:attribute name="itemsPerPageUnlimitedOptionVisible" type="xs:boolean"/>
    </xs:attributeGroup>

    <xs:complexType name="basePaginationDataBinding">
        <xs:all>
            <xs:element name="loaderProvider">
                <xs:complexType>
                    <xs:attribute name="loaderId" use="required"/>
                </xs:complexType>
            </xs:element>
            <xs:element name="containerProvider" minOccurs="0">
                <xs:complexType>
                    <xs:attribute name="dataContainer" use="required"/>
                </xs:complexType>
            </xs:element>
        </xs:all>
    </xs:complexType>

    <!-- ButtonsPanel -->
    <xs:complexType name="buttonsPanelComponent">
        <xs:complexContent>
            <xs:extension base="baseComponent">
                <xs:sequence>
                    <xs:choice minOccurs="0" maxOccurs="unbounded">
                        <xs:group ref="layoutOrComponent"/>
                    </xs:choice>
                </xs:sequence>

                <xs:attributeGroup ref="hasContextHelp"/>
                <xs:attributeGroup ref="hasSpacingMargin"/>

                <xs:attribute name="providerClass" type="xs:string"/>
                <xs:attribute name="alwaysVisible" type="xs:boolean"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <!-- Table.Column -->
    <xs:complexType name="tableColumnComponent">
        <xs:sequence>
            <xs:element name="aggregation" minOccurs="0">
                <xs:complexType>
                    <xs:all>
                        <xs:element name="formatter" minOccurs="0" type="formatterType"/>
                    </xs:all>
                    <xs:attribute name="type" type="aggregation"/>
                    <xs:attribute name="editable" type="xs:boolean"/>
                    <xs:attribute name="strategyClass" type="xs:string"/>
                    <xs:attribute name="valueDescription" type="resourceString"/>
                </xs:complexType>
            </xs:element>

            <xs:all>
                <xs:element name="formatter" minOccurs="0" type="formatterType"/>
            </xs:all>
        </xs:sequence>

        <xs:attributeGroup ref="requiresId"/>
        <xs:attributeGroup ref="hasWidthProp"/>
        <xs:attributeGroup ref="hasCaption"/>
        <xs:attributeGroup ref="hasVisibility"/>

        <xs:attribute name="generator" type="xs:string"/>

        <xs:attribute name="collapsed" type="xs:boolean"/>
        <xs:attribute name="sortable" type="xs:boolean"/>
        <xs:attribute name="maxTextLength" type="xs:integer"/>
        <xs:attribute name="align" type="columnAlignment"/>
        <xs:attribute name="captionAsHtml" type="xs:boolean"/>
        <xs:attribute name="expandRatio" type="xs:float"/>
        <xs:attribute name="optionsContainer" type="xs:string"/>

        <!-- Show entity reference as clickable link -->
        <xs:attribute name="link" type="xs:boolean"/>
        <xs:attribute name="linkScreenId" type="xs:string"/>
        <xs:attribute name="linkScreenOpenMode" type="openMode"/>

        <!-- Additional attributes, use only for editable table -->
        <xs:attributeGroup ref="hasEditable"/>
        <xs:attributeGroup ref="hasRequirements"/>
        <xs:attributeGroup ref="hasCaptionSource"/>
        <xs:attribute name="resolution" type="dateFieldResolution"/>
        <xs:attribute name="dateFormat" type="xs:string"/>

        <xs:attribute name="sort" type="sortDirection"/>
    </xs:complexType>

    <!-- GroupTable.Column -->
    <xs:complexType name="groupTableColumnComponent">
        <xs:complexContent>
            <xs:extension base="tableColumnComponent">
                <xs:attribute name="groupAllowed" type="xs:boolean"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <!-- Table -->
    <xs:complexType name="tableComponent">
        <xs:complexContent>
            <xs:extension base="baseComponent">
                <xs:all>
                    <xs:element name="actions" minOccurs="0" type="listComponentComponentActions"/>
                    <xs:element name="buttonsPanel" minOccurs="0" type="buttonsPanelComponent"/>
                    <xs:element name="simplePagination" minOccurs="0" type="listComponentSimplePaginationComponent"/>
                    <xs:element name="columns" type="tableColumnsList"/>
                </xs:all>

                <xs:attribute name="stylename" type="tableStylename"/>
                <xs:attribute name="metaClass" type="xs:string"/>
                <xs:attributeGroup ref="isTableComponent"/>
                <xs:attributeGroup ref="hasContextHelp"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <!-- TreeTable -->
    <xs:complexType name="treeTableComponent">
        <xs:complexContent>
            <xs:extension base="baseComponent">
                <xs:all>
                    <xs:element name="actions" minOccurs="0" type="listComponentComponentActions"/>
                    <xs:element name="buttonsPanel" minOccurs="0" type="buttonsPanelComponent"/>
                    <xs:element name="simplePagination" minOccurs="0" type="listComponentSimplePaginationComponent"/>
                    <xs:element name="columns" type="tableColumnsList"/>
                </xs:all>

                <xs:attribute name="hierarchyProperty" type="xs:string"/>
                <xs:attribute name="showOrphans" type="xs:boolean"/>
                <xs:attribute name="stylename" type="tableStylename"/>
                <xs:attribute name="metaClass" type="xs:string"/>
                <xs:attributeGroup ref="isTableComponent"/>
                <xs:attributeGroup ref="hasContextHelp"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <!-- GroupTable -->
    <xs:complexType name="groupTableComponent">
        <xs:complexContent>
            <xs:extension base="baseComponent">
                <xs:all>
                    <xs:element name="actions" minOccurs="0" type="listComponentComponentActions"/>
                    <xs:element name="buttonsPanel" minOccurs="0" type="buttonsPanelComponent"/>
                    <xs:element name="simplePagination" minOccurs="0" type="listComponentSimplePaginationComponent"/>
                    <xs:element name="columns" type="groupTableColumnsType"/>
                </xs:all>

                <xs:attributeGroup ref="isTableComponent"/>
                <xs:attributeGroup ref="hasContextHelp"/>

                <xs:attribute name="stylename" type="tableStylename"/>
                <xs:attribute name="fixedGrouping" type="xs:boolean"/>
                <xs:attribute name="metaClass" type="xs:string"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <!-- DataGrid.Column -->
    <xs:complexType name="dataGridColumnComponent">
        <xs:sequence>
            <xs:element name="aggregation" minOccurs="0">
                <xs:complexType>
                    <xs:all>
                        <xs:element name="formatter" minOccurs="0" type="formatterType"/>
                    </xs:all>

                    <xs:attribute name="type" type="aggregation"/>
                    <xs:attribute name="strategyClass" type="xs:string"/>
                    <xs:attribute name="valueDescription" type="resourceString"/>
                </xs:complexType>
            </xs:element>
            <xs:group ref="renderers" minOccurs="0"/>
        </xs:sequence>

        <xs:attributeGroup ref="hasId"/>
        <xs:attributeGroup ref="hasEditable"/>
        <xs:attribute name="property" type="xs:string"/>

        <xs:attribute name="caption" type="resourceString"/>
        <xs:attribute name="expandRatio" type="xs:integer"/>
        <xs:attribute name="collapsible" type="xs:boolean"/>
        <xs:attribute name="collapsed" type="xs:boolean"/>
        <xs:attribute name="collapsingToggleCaption" type="resourceString"/>
        <xs:attribute name="resizable" type="xs:boolean"/>
        <xs:attribute name="sortable" type="xs:boolean"/>

        <xs:attributeGroup ref="hasWidthProp"/>
        <xs:attribute name="minimumWidth" type="xs:string"/>
        <xs:attribute name="maximumWidth" type="xs:string"/>

        <xs:attribute name="sort" type="sortDirection"/>
    </xs:complexType>

    <!-- DataGrid -->
    <xs:complexType name="dataGridComponent">
        <xs:complexContent>
            <xs:extension base="baseComponent">
                <xs:all>
                    <xs:element name="actions" minOccurs="0" type="listComponentComponentActions"/>
                    <xs:element name="buttonsPanel" minOccurs="0" type="buttonsPanelComponent"/>
                    <xs:element name="simplePagination" minOccurs="0" type="listComponentSimplePaginationComponent"/>
                    <xs:element name="columns" type="dataGridColumnsList"/>
                </xs:all>

                <xs:attribute name="columnsCollapsingAllowed" type="xs:boolean"/>
                <xs:attribute name="columnResizeMode" type="dataGridColumnResizeMode"/>
                <xs:attribute name="contextMenuEnabled" type="xs:boolean"/>
                <xs:attribute name="dataContainer" type="xs:string"/>
                <xs:attribute name="metaClass" type="xs:string"/>
                <xs:attribute name="frozenColumnCount" type="xs:integer"/>
                <xs:attribute name="headerVisible" type="xs:boolean"/>
                <xs:attribute name="footerVisible" type="xs:boolean"/>
                <xs:attribute name="bodyRowHeight" type="xs:integer"/>
                <xs:attribute name="headerRowHeight" type="xs:integer"/>
                <xs:attribute name="footerRowHeight" type="xs:integer"/>
                <xs:attribute name="reorderingAllowed" type="xs:boolean"/>
                <xs:attribute name="selectionMode" type="dataGridSelectionMode"/>
                <xs:attribute name="sortable" type="xs:boolean"/>
                <xs:attribute name="textSelectionEnabled" type="xs:boolean"/>
                <xs:attribute name="editorEnabled" type="xs:boolean"/>
                <xs:attribute name="editorCrossFieldValidate" type="xs:boolean"/>
                <xs:attribute name="editorBuffered" type="xs:boolean"/>
                <xs:attribute name="editorSaveCaption" type="resourceString"/>
                <xs:attribute name="editorCancelCaption" type="resourceString"/>
                <xs:attribute name="emptyStateMessage" type="resourceString"/>
                <xs:attribute name="emptyStateLinkMessage" type="resourceString"/>
                <xs:attribute name="aggregatable" type="xs:boolean"/>
                <xs:attribute name="aggregationPosition" type="aggregationPosition"/>
                <xs:attribute name="minHeight" type="xs:string"/>
                <xs:attribute name="minWidth" type="xs:string"/>

                <xs:attributeGroup ref="hasTabIndex"/>
                <xs:attributeGroup ref="hasContextHelp"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <!-- TreeDataGrid -->
    <xs:complexType name="treeDataGridComponent">
        <xs:complexContent>
            <xs:extension base="dataGridComponent">
                <xs:attribute name="hierarchyProperty" type="xs:string"/>
                <xs:attribute name="hierarchyColumn" type="xs:string"/>
                <xs:attribute name="showOrphans" type="xs:boolean"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <!-- Form -->
    <xs:complexType name="formComponent">
        <xs:complexContent>
            <xs:extension base="baseComponent">
                <xs:choice maxOccurs="unbounded" minOccurs="0">
                    <xs:group ref="layoutOrComponent"/>
                    <xs:element name="field" type="formFieldType"/>
                    <xs:element name="column">
                        <xs:complexType>
                            <xs:sequence>
                                <xs:choice minOccurs="0" maxOccurs="unbounded">
                                    <xs:group ref="layoutOrComponent"/>
                                    <xs:element name="field" type="formFieldType"/>
                                </xs:choice>
                            </xs:sequence>

                            <xs:attribute name="id" type="xs:string"/>
                            <xs:attribute name="width" type="xs:string"/>
                            <xs:attribute name="childrenCaptionAlignment" type="formChildrenCaptionAlignment"/>
                            <xs:attribute name="childrenCaptionWidth" type="xs:string"/>
                            <xs:attribute name="flex" type="xs:float"/>

                            <xs:anyAttribute namespace="##other" processContents="lax"/>
                        </xs:complexType>
                    </xs:element>
                </xs:choice>

                <xs:attributeGroup ref="hasEditState"/>
                <xs:attributeGroup ref="hasContextHelp"/>

                <xs:attribute name="dataContainer" type="xs:string"/>
                <xs:attribute name="captionPosition" type="captionPositionType"/>
                <xs:attribute name="childrenCaptionAlignment" type="formChildrenCaptionAlignment"/>
                <xs:attribute name="childrenCaptionWidth" type="xs:string"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <xs:complexType name="formFieldType">
        <xs:attributeGroup ref="hasId"/>

        <xs:attribute name="property" type="xs:string" use="required"/>
        <xs:attribute name="dataContainer" type="xs:string"/>
        <xs:attribute name="optionsContainer" type="xs:string"/>

        <xs:attributeGroup ref="hasEditState"/>
        <xs:attributeGroup ref="hasVisibility"/>
        <xs:attributeGroup ref="hasHtmlCaption"/>
        <xs:attributeGroup ref="hasIcon"/>
        <xs:attributeGroup ref="hasContextHelp"/>
        <xs:attributeGroup ref="hasSize"/>
        <xs:attributeGroup ref="hasResponsiveProp"/>
        <xs:attributeGroup ref="hasStyle"/>
        <xs:attributeGroup ref="hasCss"/>
    </xs:complexType>

    <xs:complexType name="tagFieldComponent">
        <xs:complexContent>
            <xs:extension base="baseSuggestionFieldComponent">
                <xs:all>
                    <xs:element name="validators" minOccurs="0" type="collectionValidatorType"/>
                    <xs:element name="formatter" minOccurs="0" type="formatterType"/>
                    <xs:element name="query" minOccurs="0" type="suggestionFieldQuery"/>
                </xs:all>

                <xs:attribute name="clearAllVisible" type="xs:boolean"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <!-- TagPicker   -->
    <xs:complexType name="tagPickerComponent">
        <xs:complexContent>
            <xs:extension base="baseComponent">
                <xs:sequence>
                    <xs:element name="actions" minOccurs="0" type="componentActions"/>
                    <xs:element name="validators" minOccurs="0" type="collectionValidatorType"/>
                </xs:sequence>

                <xs:attribute name="optionsContainer" type="xs:string"/>
                <xs:attribute name="metaClass" type="xs:string"/>

                <xs:attribute name="tagPosition" type="tagPositionMode"/>
                <xs:attribute name="inlineTags" type="xs:boolean"/>
                <xs:attribute name="hideSelectedOptions" type="xs:boolean"/>

                <!-- comboBox attributes -->
                <xs:attribute name="filterMode" type="filterMode"/>
                <xs:attribute name="inputPrompt" type="resourceString"/>

                <xs:attributeGroup ref="hasDataContainer"/>
                <xs:attributeGroup ref="hasRequirements"/>
                <xs:attributeGroup ref="hasEditable"/>
                <xs:attributeGroup ref="hasTabIndex"/>
                <xs:attributeGroup ref="hasContextHelp"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <!-- TwinColumn -->
    <xs:complexType name="twinColumnComponent">
        <xs:complexContent>
            <xs:extension base="baseComponent">
                <xs:sequence>
                    <xs:element name="validators" minOccurs="0" type="collectionValidatorType"/>
                </xs:sequence>

                <xs:attributeGroup ref="hasEditable"/>
                <xs:attributeGroup ref="hasDataContainer"/>
                <xs:attributeGroup ref="hasCaptionSource"/>
                <xs:attributeGroup ref="hasRequirements"/>
                <xs:attributeGroup ref="hasTabIndex"/>
                <xs:attributeGroup ref="hasContextHelp"/>

                <xs:attribute name="optionsContainer" type="xs:string"/>

                <xs:attribute name="leftColumnCaption" type="resourceString"/>
                <xs:attribute name="rightColumnCaption" type="resourceString"/>

                <xs:attribute name="rows" type="xs:string"/>
                <xs:attribute name="addAllBtnEnabled" type="xs:boolean"/>

                <xs:attribute name="reorderable" type="xs:boolean"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <!-- Layouts && Containers -->

    <!-- HtmlBoxLayout -->
    <xs:complexType name="htmlBoxLayout">
        <xs:complexContent>
            <xs:extension base="baseComponent">
                <xs:sequence>
                    <xs:element name="templateContents" minOccurs="0">
                        <xs:complexType mixed="true"/>
                    </xs:element>

                    <xs:group ref="layoutOrComponent"/>
                </xs:sequence>

                <xs:attributeGroup ref="hasContextHelp"/>

                <xs:attribute name="stylename" type="layoutStylename"/>
                <xs:attribute name="template" type="xs:string"/>
                <xs:attribute name="requiredIndicatorVisible" type="xs:boolean"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <!-- BoxLayout -->
    <xs:complexType name="boxLayout">
        <xs:complexContent>
            <xs:extension base="baseComponent">
                <xs:group ref="layoutOrComponent"/>
                <xs:attributeGroup ref="isLayoutComponent"/>

                <xs:attributeGroup ref="hasSpacingMargin"/>
                <xs:attributeGroup ref="hasContextHelp"/>

                <xs:attribute name="stylename" type="boxLayoutStylename"/>
                <xs:attribute name="expand" type="xs:string"/>
                <xs:attribute name="requiredIndicatorVisible" type="xs:boolean"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <!-- FlowBoxLayout -->
    <xs:complexType name="flowBoxLayout">
        <xs:complexContent>
            <xs:extension base="baseComponent">
                <xs:group ref="layoutOrComponent"/>

                <xs:attribute name="stylename" type="layoutStylename"/>
                <xs:attribute name="requiredIndicatorVisible" type="xs:boolean"/>

                <xs:attributeGroup ref="hasSpacingMargin"/>
                <xs:attributeGroup ref="hasContextHelp"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <!-- CssLayout -->
    <xs:complexType name="cssLayout">
        <xs:complexContent>
            <xs:extension base="baseComponent">
                <xs:group ref="layoutOrComponent"/>

                <xs:attribute name="stylename" type="csslayoutStylename"/>
                <xs:attribute name="requiredIndicatorVisible" type="xs:boolean"/>

                <xs:attributeGroup ref="hasResponsive"/>
                <xs:attributeGroup ref="hasContextHelp"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <xs:complexType name="baseResponsiveGridElement">
        <xs:attribute name="id" type="xs:string"/>
        <xs:attribute name="stylename" type="xs:string"/>
    </xs:complexType>

    <!-- ResponsiveGridLayout.Column -->
    <xs:complexType name="responsiveGridColumn">
        <xs:complexContent>
            <xs:extension base="baseResponsiveGridElement">
                <xs:group ref="layoutOrComponent"/>

                <xs:attributeGroup ref="responsiveGridColumnColumnsValueGroup"/>
                <xs:attributeGroup ref="responsiveGridColumnAlignGroup"/>
                <xs:attributeGroup ref="responsiveGridColumnOrderValue"/>
                <xs:attributeGroup ref="responsiveGridColumnOffsetGroup"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <!-- ResponsiveGridLayout.Row -->
    <xs:complexType name="responsiveGridRow">
        <xs:complexContent>
            <xs:extension base="baseResponsiveGridElement">
                <xs:sequence>
                    <xs:element name="col" type="responsiveGridColumn" maxOccurs="unbounded"/>
                </xs:sequence>

                <xs:attribute name="guttersEnabled" type="xs:boolean"/>
                <xs:attribute name="height" type="componentSize"/>

                <xs:attributeGroup ref="responsiveGridRowColumnsGroup"/>
                <xs:attributeGroup ref="responsiveGridRowAlignItemsGroup"/>
                <xs:attributeGroup ref="responsiveGridRowJustifyContentGroup"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <!-- ResponsiveGridLayout -->
    <xs:complexType name="responsiveGridLayout">

        <xs:sequence>
            <xs:element name="row" type="responsiveGridRow" maxOccurs="unbounded"/>
        </xs:sequence>

        <xs:attributeGroup ref="hasId"/>

        <xs:attributeGroup ref="hasVisibility"/>
        <xs:attributeGroup ref="hasEnableProp"/>

        <xs:attributeGroup ref="hasAlign"/>

        <xs:attributeGroup ref="hasStyle"/>
        <xs:attributeGroup ref="hasCss"/>

        <xs:attributeGroup ref="hasHtmlSanitizer"/>

        <xs:attribute name="height" type="componentSize"/>

        <xs:attribute name="containerType" type="responsiveGridContainerType"/>
    </xs:complexType>

    <!-- ScrollBoxLayout -->
    <xs:complexType name="scrollBoxLayout">
        <xs:complexContent>
            <xs:extension base="baseComponent">
                <xs:group ref="layoutOrComponent"/>

                <xs:attributeGroup ref="hasSpacingMargin"/>
                <xs:attributeGroup ref="hasContextHelp"/>

                <xs:attribute name="stylename" type="layoutStylename"/>
                <xs:attribute name="orientation" type="orientation"/>
                <xs:attribute name="scrollBars" type="scrollBars"/>

                <xs:attribute name="contentWidth" type="componentSize"/>
                <xs:attribute name="contentHeight" type="componentSize"/>

                <xs:attribute name="contentMinHeight" type="componentSize"/>
                <xs:attribute name="contentMinWidth" type="componentSize"/>

                <xs:attribute name="contentMaxHeight" type="componentSize"/>
                <xs:attribute name="contentMaxWidth" type="componentSize"/>

                <xs:attribute name="requiredIndicatorVisible" type="xs:boolean"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <!-- SplitPanel -->
    <xs:complexType name="splitContainer">
        <xs:complexContent>
            <xs:extension base="baseComponent">
                <xs:sequence minOccurs="2" maxOccurs="2">
                    <xs:group ref="layoutOrComponent"/>
                </xs:sequence>

                <xs:attributeGroup ref="hasContextHelp"/>

                <xs:attribute name="stylename" type="splitStylename"/>
                <xs:attribute name="orientation" type="orientation"/>
                <xs:attribute name="pos" type="xs:string"/>
                <xs:attribute name="minSplitPosition" type="xs:string"/>
                <xs:attribute name="maxSplitPosition" type="xs:string"/>
                <xs:attribute name="reversePosition" type="xs:boolean"/>
                <xs:attribute name="locked" type="xs:boolean"/>
                <xs:attribute name="dockable" type="xs:boolean"/>
                <xs:attribute name="dockMode" type="splitPanelDockMode"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <!-- Tabsheet -->
    <xs:complexType name="tabsheetContainer">
        <xs:complexContent>
            <xs:extension base="baseComponent">
                <xs:sequence minOccurs="0" maxOccurs="unbounded">
                    <xs:element name="tab">
                        <xs:complexType>
                            <xs:group ref="layoutOrComponent"/>

                            <xs:attributeGroup ref="requiresId"/>
                            <xs:attributeGroup ref="hasCaption"/>
                            <xs:attributeGroup ref="hasIcon"/>
                            <xs:attributeGroup ref="hasSpacingMargin"/>
                            <xs:attributeGroup ref="hasVisibility"/>
                            <xs:attributeGroup ref="hasEnableProp"/>
                            <xs:attributeGroup ref="hasStyle"/>

                            <xs:attribute name="lazy" type="xs:boolean"/>

                            <xs:attribute name="expand" type="xs:string"/>
                            <xs:attribute name="closable" type="xs:boolean"/>
                        </xs:complexType>
                    </xs:element>
                </xs:sequence>

                <xs:attribute name="stylename" type="tabsheetStylename"/>
                <xs:attribute name="tabCaptionsAsHtml" type="xs:boolean"/>
                <xs:attribute name="tabsVisible" type="xs:boolean"/>

                <xs:attributeGroup ref="hasTabIndex"/>
                <xs:attributeGroup ref="hasContextHelp"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <!-- Accordion -->
    <xs:complexType name="accordionContainer">
        <xs:complexContent>
            <xs:extension base="baseComponent">
                <xs:sequence minOccurs="0" maxOccurs="unbounded">
                    <xs:element name="tab">
                        <xs:complexType>
                            <xs:group ref="layoutOrComponent"/>

                            <xs:attributeGroup ref="requiresId"/>
                            <xs:attributeGroup ref="hasIcon"/>
                            <xs:attributeGroup ref="hasSpacingMargin"/>
                            <xs:attributeGroup ref="hasVisibility"/>
                            <xs:attributeGroup ref="hasEnableProp"/>
                            <xs:attributeGroup ref="hasStyle"/>

                            <xs:attribute name="caption" type="resourceString"/>

                            <xs:attribute name="lazy" type="xs:boolean"/>
                            <xs:attribute name="expand" type="xs:string"/>
                        </xs:complexType>
                    </xs:element>
                </xs:sequence>

                <xs:attribute name="stylename" type="accordionStylename"/>
                <xs:attribute name="tabCaptionsAsHtml" type="xs:boolean"/>

                <xs:attributeGroup ref="hasTabIndex"/>
                <xs:attributeGroup ref="hasContextHelp"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <!-- GridLayout -->
    <xs:complexType name="gridLayout">
        <xs:complexContent>
            <xs:extension base="baseComponent">
                <xs:sequence>
                    <xs:element name="columns" maxOccurs="unbounded">
                        <xs:complexType>
                            <xs:sequence>
                                <xs:element name="column" minOccurs="0" maxOccurs="unbounded">
                                    <xs:complexType>
                                        <xs:attributeGroup ref="hasId"/>

                                        <xs:attribute name="flex" type="xs:float"/>
                                    </xs:complexType>
                                </xs:element>
                            </xs:sequence>
                            <xs:attribute name="count" type="xs:int"/>
                        </xs:complexType>
                    </xs:element>
                    <xs:element name="rows">
                        <xs:complexType>
                            <xs:sequence>
                                <xs:element name="row" maxOccurs="unbounded">
                                    <xs:complexType>
                                        <xs:group ref="layoutOrComponent"/>

                                        <xs:attributeGroup ref="hasId"/>

                                        <xs:attribute name="flex" type="xs:float"/>
                                    </xs:complexType>
                                </xs:element>
                            </xs:sequence>
                        </xs:complexType>
                    </xs:element>
                </xs:sequence>

                <xs:attribute name="requiredIndicatorVisible" type="xs:boolean"/>

                <xs:attributeGroup ref="hasSpacingMargin"/>
                <xs:attributeGroup ref="hasContextHelp"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <!-- GroupBox -->
    <xs:complexType name="groupBoxLayout">
        <xs:complexContent>
            <xs:extension base="baseComponent">
                <xs:group ref="layoutOrComponent" minOccurs="0"/>

                <xs:attributeGroup ref="hasSpacing"/>
                <xs:attributeGroup ref="hasOuterMargin"/>
                <xs:attributeGroup ref="hasExpand"/>
                <xs:attributeGroup ref="hasContextHelp"/>

                <xs:attribute name="stylename" type="groupBoxStylename"/>
                <xs:attribute name="collapsable" type="xs:boolean"/>
                <xs:attribute name="collapsed" type="xs:boolean"/>
                <xs:attribute name="orientation" type="orientation"/>
                <xs:attribute name="showAsPanel" type="xs:boolean"/>
                <xs:attribute name="requiredIndicatorVisible" type="xs:boolean"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <!-- Fragment -->
    <xs:complexType name="fragmentContainer">
        <xs:complexContent>
            <xs:extension base="baseComponent">
                <xs:all>
                    <xs:element name="properties" type="screenProperties" minOccurs="0"/>
                </xs:all>

                <xs:attribute name="screen" type="xs:string"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <xs:complexType name="screenProperties">
        <xs:sequence>
            <xs:element name="property" type="screenProperty" minOccurs="0"/>
        </xs:sequence>
    </xs:complexType>

    <xs:complexType name="screenProperty">
        <xs:attribute name="name" type="xs:string" use="required"/>
        <xs:attribute name="value" type="xs:string"/>
        <xs:attribute name="ref" type="xs:string"/>
    </xs:complexType>

    <xs:complexType name="relatedComponent">
        <xs:complexContent>
            <xs:extension base="baseComponent">
                <xs:sequence>
                    <xs:element name="property" minOccurs="0" maxOccurs="unbounded">
                        <xs:complexType>
                            <xs:attribute name="name" type="xs:string" use="required"/>
                            <xs:attribute name="screen" type="xs:string"/>
                            <xs:attribute name="caption" type="resourceString"/>
                            <xs:attribute name="configurationName" type="resourceString"/>
                        </xs:complexType>
                    </xs:element>
                </xs:sequence>

                <xs:attribute name="openMode" type="openMode"/>
                <xs:attribute name="for" type="xs:string" use="required"/>
                <xs:attribute name="exclude" type="xs:string"/>

                <xs:attributeGroup ref="hasTabIndex"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <!-- JavaScriptComponent -->
    <xs:complexType name="javaScriptComponent">
        <xs:complexContent>
            <xs:extension base="baseComponent">
                <xs:all>
                    <xs:element name="dependencies" minOccurs="0" type="dependencies"/>
                </xs:all>

                <xs:attribute name="initFunctionName" type="xs:string"/>
                <xs:attribute name="requiredIndicatorVisible" type="xs:boolean"/>

                <xs:attributeGroup ref="hasContextHelp"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <!-- CapsLockIndicator Component-->
    <xs:complexType name="capsLockIndicatorComponent">
        <xs:attributeGroup ref="hasId"/>
        <xs:attributeGroup ref="hasVisibility"/>
        <xs:attributeGroup ref="hasSize"/>
        <xs:attributeGroup ref="hasAlign"/>
        <xs:attributeGroup ref="hasStyle"/>
        <xs:attribute name="capsLockOnMessage" type="resourceString"/>
        <xs:attribute name="capsLockOffMessage" type="resourceString"/>
    </xs:complexType>

    <!-- Notification Facet -->
    <xs:complexType name="notificationType">
        <xs:attribute name="id" type="xs:string" use="required"/>

        <xs:attribute name="caption" type="resourceString"/>
        <xs:attribute name="description" type="resourceString"/>
        <xs:attribute name="type" type="notificationTypeEnum"/>
        <xs:attribute name="delay" type="xs:int"/>

        <xs:attribute name="contentMode" type="notificationContentMode"/>
        <xs:attribute name="stylename" type="xs:string"/>
        <xs:attribute name="position" type="notificationPositionEnum"/>

        <xs:attributeGroup ref="facetTriggerType"/>

        <xs:attributeGroup ref="hasHtmlSanitizer"/>
    </xs:complexType>

    <xs:simpleType name="notificationTypeEnum">
        <xs:restriction base="xs:string">
            <xs:enumeration value="TRAY"/>
            <xs:enumeration value="HUMANIZED"/>
            <xs:enumeration value="WARNING"/>
            <xs:enumeration value="ERROR"/>
            <xs:enumeration value="SYSTEM"/>
        </xs:restriction>
    </xs:simpleType>

    <!-- Dialog Facets Base -->

    <xs:complexType name="dialogType">
        <xs:attribute name="id" type="xs:string" use="required"/>
        <xs:attribute name="caption" type="resourceString"/>

        <xs:attributeGroup ref="hasSize"/>
        <xs:attributeGroup ref="facetTriggerType"/>
    </xs:complexType>

    <!-- MessageDialog Facet -->
    <xs:complexType name="messageDialogType">
        <xs:complexContent>
            <xs:extension base="dialogType">
                <xs:attribute name="message" type="resourceString"/>
                <xs:attribute name="contentMode" type="contentMode"/>
                <xs:attribute name="windowMode" type="windowMode"/>
                <xs:attribute name="stylename" type="xs:string"/>

                <xs:attribute name="closeOnClickOutside" type="xs:boolean"/>
                <xs:attribute name="modal" type="xs:boolean"/>
                <xs:attributeGroup ref="hasHtmlSanitizer"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <!-- OptionDialog Facet -->
    <xs:complexType name="optionDialogType">
        <xs:complexContent>
            <xs:extension base="dialogType">
                <xs:sequence>
                    <xs:element name="actions" type="dialogActionsType" minOccurs="0"/>
                </xs:sequence>

                <xs:attribute name="message" type="resourceString"/>
                <xs:attribute name="contentMode" type="contentMode"/>
                <xs:attribute name="windowMode" type="windowMode"/>
                <xs:attribute name="stylename" type="xs:string"/>

                <xs:attributeGroup ref="hasHtmlSanitizer"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <!-- InputDialog Facet -->
    <xs:complexType name="inputDialogType">
        <xs:complexContent>
            <xs:extension base="dialogType">
                <xs:sequence>
                    <xs:element name="parameters" type="inputDialogParamsType"/>
                    <xs:element name="actions" type="dialogActionsType" minOccurs="0"/>
                </xs:sequence>

                <xs:attribute name="dialogActions" type="inputDialogActionsType"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <xs:simpleType name="inputDialogActionsType">
        <xs:restriction base="xs:string">
            <xs:enumeration value="OK"/>
            <xs:enumeration value="OK_CANCEL"/>
            <xs:enumeration value="YES_NO"/>
            <xs:enumeration value="YES_NO_CANCEL"/>
        </xs:restriction>
    </xs:simpleType>

    <xs:complexType name="dialogActionsType">
        <xs:sequence>
            <xs:choice maxOccurs="unbounded">
                <xs:element name="action" type="dialogActionType"/>
            </xs:choice>
        </xs:sequence>
    </xs:complexType>

    <xs:complexType name="inputDialogParamsType">
        <xs:sequence>
            <xs:choice minOccurs="0" maxOccurs="unbounded">
                <xs:element name="stringParameter" type="inputDialogPrimitiveParam"/>

                <xs:element name="intParameter" type="inputDialogPrimitiveParam"/>
                <xs:element name="doubleParameter" type="inputDialogPrimitiveParam"/>
                <xs:element name="longParameter" type="inputDialogPrimitiveParam"/>
                <xs:element name="bigDecimalParameter" type="inputDialogPrimitiveParam"/>

                <xs:element name="booleanParameter" type="inputDialogBooleanParam"/>

                <xs:element name="dateParameter" type="inputDialogPrimitiveParam"/>
                <xs:element name="timeParameter" type="inputDialogPrimitiveParam"/>
                <xs:element name="dateTimeParameter" type="inputDialogDateTimeParam"/>
                <xs:element name="localDateParameter" type="inputDialogPrimitiveParam"/>
                <xs:element name="localTimeParameter" type="inputDialogPrimitiveParam"/>
                <xs:element name="localDateTimeParameter" type="inputDialogPrimitiveParam"/>
                <xs:element name="offsetDateTimeParameter" type="inputDialogOffsetDateTimeParam"/>
                <xs:element name="offsetTimeParameter" type="inputDialogPrimitiveParam"/>

                <xs:element name="entityParameter" type="inputDialogEntityParameter"/>
                <xs:element name="enumParameter" type="inputDialogEnumParameter"/>
            </xs:choice>
        </xs:sequence>
    </xs:complexType>

    <xs:complexType name="inputDialogParameter">
        <xs:sequence>
            <xs:group ref="singleLayoutOrComponent"/>
        </xs:sequence>

        <xs:attribute name="id" type="xs:string" use="required"/>
        <xs:attribute name="caption" type="resourceString"/>
    </xs:complexType>

    <xs:complexType name="inputDialogPrimitiveParam">
        <xs:complexContent>
            <xs:extension base="inputDialogParameter">
                <xs:attribute name="defaultValue"/>

                <xs:attribute name="required" type="xs:boolean"/>
                <xs:attribute name="requiredMessage" type="resourceString"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <xs:complexType name="inputDialogBooleanParam">
        <xs:complexContent>
            <xs:extension base="inputDialogParameter">
                <xs:attribute name="defaultValue"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <xs:complexType name="inputDialogOffsetDateTimeParam">
        <xs:complexContent>
            <xs:extension base="inputDialogPrimitiveParam">
                <xs:attributeGroup ref="inputDialogParameterHasTimeZone"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <xs:complexType name="inputDialogDateTimeParam">
        <xs:complexContent>
            <xs:extension base="inputDialogPrimitiveParam">
                <xs:attributeGroup ref="inputDialogParameterHasTimeZone"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <xs:complexType name="inputDialogEntityParameter">
        <xs:complexContent>
            <xs:extension base="inputDialogParameter">
                <xs:attribute name="entityClass" use="required" type="xs:string"/>

                <xs:attribute name="required" type="xs:boolean"/>
                <xs:attribute name="requiredMessage" type="resourceString"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <xs:complexType name="inputDialogEnumParameter">
        <xs:complexContent>
            <xs:extension base="inputDialogParameter">
                <xs:attribute name="enumClass" use="required" type="xs:string"/>

                <xs:attribute name="required" type="xs:boolean"/>
                <xs:attribute name="requiredMessage" type="resourceString"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <xs:attributeGroup name="inputDialogParameterHasTimeZone">
        <xs:attribute name="useUserTimeZone" type="xs:boolean"/>
        <xs:attribute name="timeZoneId" type="resourceString"/>
    </xs:attributeGroup>

    <xs:complexType name="dialogActionType">
        <xs:attribute name="id" type="xs:string" use="required"/>
        <xs:attribute name="caption" type="resourceString"/>
        <xs:attribute name="description" type="resourceString"/>
        <xs:attribute name="icon" type="xs:string"/>
        <xs:attribute name="primary" type="xs:boolean"/>
    </xs:complexType>

    <!-- Screen Facet -->
    <xs:complexType name="screenType">
        <xs:all>
            <xs:element name="properties" type="screenProperties" minOccurs="0"/>
        </xs:all>

        <xs:attribute name="id" type="xs:string" use="required"/>
        <xs:attribute name="screenId" type="xs:string"/>
        <xs:attribute name="screenClass" type="xs:string"/>
        <xs:attribute name="openMode" type="screenOpenModeType"/>

        <xs:attributeGroup ref="facetTriggerType"/>
    </xs:complexType>

    <xs:simpleType name="screenOpenModeType">
        <xs:restriction>
            <xs:enumeration value="NEW_TAB"/>
            <xs:enumeration value="THIS_TAB"/>
            <xs:enumeration value="DIALOG"/>
            <xs:enumeration value="NEW_WINDOW"/>
            <xs:enumeration value="ROOT"/>
        </xs:restriction>
    </xs:simpleType>

    <!-- EditorScreen Facet -->
    <xs:complexType name="editorScreenType">
        <xs:complexContent>
            <xs:extension base="screenType">
                <xs:attribute name="editMode" type="editorScreenFacetEditMode"/>
                <xs:attribute name="addFirst" type="xs:boolean"/>

                <xs:attribute name="entityClass" type="xs:string"/>
                <xs:attribute name="field" type="xs:string"/>
                <xs:attribute name="listComponent" type="xs:string"/>
                <xs:attribute name="container" type="xs:string"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <!-- LookupScreen Facet -->
    <xs:complexType name="lookupScreenType">
        <xs:complexContent>
            <xs:extension base="screenType">
                <xs:attribute name="entityClass" type="xs:string"/>
                <xs:attribute name="field" type="xs:string"/>
                <xs:attribute name="listComponent" type="xs:string"/>
                <xs:attribute name="container" type="xs:string"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <xs:simpleType name="editorScreenFacetEditMode">
        <xs:restriction>
            <xs:enumeration value="CREATE"/>
            <xs:enumeration value="EDIT"/>
        </xs:restriction>
    </xs:simpleType>

    <xs:attributeGroup name="facetTriggerType">
        <xs:attribute name="onAction" type="xs:string"/>
        <xs:attribute name="onButton" type="xs:string"/>
    </xs:attributeGroup>

    <xs:complexType name="timerType">
        <xs:attribute name="id" type="xs:string" use="required"/>
        <xs:attribute name="delay" type="xs:integer" use="required"/>
        <xs:attribute name="repeating" type="xs:boolean"/>
        <xs:attribute name="autostart" type="xs:boolean"/>
    </xs:complexType>

    <xs:complexType name="clipboardTriggerType">
        <xs:attribute name="id" type="xs:string"/>
        <xs:attribute name="button" type="xs:string"/>
        <xs:attribute name="input" type="xs:string"/>
    </xs:complexType>

    <xs:complexType name="dataLoadCoordinatorType">
        <xs:sequence>
            <xs:choice minOccurs="0" maxOccurs="unbounded">
                <xs:element name="refresh" type="dataLoadCoordinatorTriggerType" minOccurs="0" maxOccurs="unbounded"/>
            </xs:choice>
        </xs:sequence>
        <xs:attribute name="id" type="xs:string"/>
        <xs:attribute name="auto" type="xs:boolean"/>
        <xs:attribute name="containerPrefix" type="xs:string"/>
        <xs:attribute name="componentPrefix" type="xs:string"/>
    </xs:complexType>

    <xs:complexType name="dataLoadCoordinatorTriggerType">
        <xs:attribute name="loader" type="xs:string" use="required"/>

        <xs:sequence>
            <xs:choice minOccurs="0" maxOccurs="unbounded">
                <xs:element name="onScreenEvent" type="onScreenEventType"/>
                <xs:element name="onFragmentEvent" type="onFragmentEventType"/>
                <xs:element name="onContainerItemChanged" type="onContainerItemChangedType"/>
                <xs:element name="onComponentValueChanged" type="onComponentValueChangedType"/>
            </xs:choice>
        </xs:sequence>
    </xs:complexType>

    <xs:complexType name="onScreenEventType">
        <xs:attribute name="type" type="onScreenEventEnum" use="required"/>
    </xs:complexType>

    <xs:simpleType name="onScreenEventEnum">
        <xs:restriction base="xs:string">
            <xs:enumeration value="Init"/>
            <xs:enumeration value="AfterInit"/>
            <xs:enumeration value="BeforeShow"/>
            <xs:enumeration value="AfterShow"/>
        </xs:restriction>
    </xs:simpleType>

    <xs:complexType name="onFragmentEventType">
        <xs:attribute name="type" type="onFragmentEventEnum" use="required"/>
    </xs:complexType>

    <xs:simpleType name="onFragmentEventEnum">
        <xs:restriction base="xs:string">
            <xs:enumeration value="Init"/>
            <xs:enumeration value="AfterInit"/>
            <xs:enumeration value="Attach"/>
        </xs:restriction>
    </xs:simpleType>

    <xs:complexType name="onContainerItemChangedType">
        <xs:attribute name="container" use="required"/>
        <xs:attribute name="param" type="xs:string"/>
    </xs:complexType>

    <xs:complexType name="onComponentValueChangedType">
        <xs:attribute name="component" use="required"/>
        <xs:attribute name="param" type="xs:string"/>
        <xs:attribute name="likeClause" type="likeClauseEnum"/>
    </xs:complexType>

    <xs:simpleType name="likeClauseEnum">
        <xs:restriction base="xs:string">
            <xs:enumeration value="NONE"/>
            <xs:enumeration value="CASE_SENSITIVE"/>
            <xs:enumeration value="CASE_INSENSITIVE"/>
        </xs:restriction>
    </xs:simpleType>

    <!-- ScreenSettingsFacet -->
    <xs:complexType name="screenSettingsType">
        <xs:sequence>
            <xs:element name="components" minOccurs="0" type="screenSettingsComponentsType"/>
        </xs:sequence>

        <xs:attribute name="id" type="xs:string"/>
        <xs:attribute name="auto" type="xs:boolean"/>
    </xs:complexType>

    <xs:complexType name="screenSettingsComponentsType">
        <xs:sequence maxOccurs="unbounded">
            <xs:element name="component" type="screenSettingsComponentType" minOccurs="0"/>
        </xs:sequence>
    </xs:complexType>

    <xs:complexType name="screenSettingsComponentType">
        <xs:attribute name="id" type="xs:string" use="required"/>
    </xs:complexType>

    <!-- PresentationsFacet   -->

    <xs:complexType name="presentationsType">
        <xs:sequence>
            <xs:element name="components" minOccurs="0" type="screenSettingsComponentsType"/>
        </xs:sequence>

        <xs:attribute name="id" type="xs:string"/>
        <xs:attribute name="auto" type="xs:boolean"/>
    </xs:complexType>

    <xs:complexType name="facets">
        <xs:sequence>
            <xs:choice minOccurs="0" maxOccurs="unbounded">
                <xs:element name="timer" type="timerType" minOccurs="0" maxOccurs="unbounded"/>
                <xs:element name="clipboardTrigger" type="clipboardTriggerType" minOccurs="0" maxOccurs="unbounded"/>
                <xs:element name="dataLoadCoordinator" type="dataLoadCoordinatorType" minOccurs="0"/>

                <xs:element name="notification" type="notificationType" minOccurs="0"/>

                <xs:element name="messageDialog" type="messageDialogType" minOccurs="0"/>
                <xs:element name="optionDialog" type="optionDialogType" minOccurs="0"/>
                <xs:element name="inputDialog" type="inputDialogType" minOccurs="0"/>

                <xs:element name="screen" type="screenType" minOccurs="0"/>
                <xs:element name="editorScreen" type="editorScreenType" minOccurs="0"/>
                <xs:element name="lookupScreen" type="lookupScreenType" minOccurs="0"/>

                <xs:element name="screenSettings" type="screenSettingsType" minOccurs="0"/>
                <xs:element name="presentations" type="presentationsType" minOccurs="0"/>

                <!-- allow custom facets from any namespace -->
                <xs:any/>
            </xs:choice>
        </xs:sequence>
    </xs:complexType>

    <xs:complexType name="timer">
        <xs:sequence>
            <xs:choice maxOccurs="unbounded">
                <xs:element name="timer" type="timerType"/>
            </xs:choice>
        </xs:sequence>
    </xs:complexType>

    <xs:complexType name="menuComponent">
        <xs:complexContent>
            <xs:extension base="baseMainElement">

            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <xs:complexType name="sideMenuComponent">
        <xs:complexContent>
            <xs:extension base="baseMainElement">
                <xs:attribute name="selectOnClick" type="xs:boolean"/>
                <xs:attribute name="loadMenuConfig" type="xs:boolean"/>
                <xs:attribute name="sidePanel" type="xs:string"/>
                <xs:attribute name="sidePanelToggleButton" type="xs:string"/>
                <xs:attribute name="showSingleExpandedMenu" type="xs:boolean"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <xs:complexType name="initialLayoutComponent">
        <xs:sequence>
            <xs:group ref="layoutOrComponent"/>
        </xs:sequence>

        <xs:attribute name="id" type="xs:string"/>
        <xs:attribute name="stylename" type="xs:string"/>
        <xs:attribute name="enable" type="xs:boolean"/>
        <xs:attribute name="visible" type="xs:boolean"/>

        <xs:attribute name="expand" type="xs:string"/>
        <xs:attributeGroup ref="hasSpacingMargin"/>
    </xs:complexType>

    <xs:complexType name="workAreaComponent">
        <xs:complexContent>
            <xs:extension base="baseMainElement">
                <xs:sequence>
                    <xs:element name="initialLayout" type="initialLayoutComponent"/>
                </xs:sequence>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <xs:complexType name="drawerComponent">
        <xs:sequence>
            <xs:group ref="layoutOrComponent"/>
        </xs:sequence>
        <xs:attributeGroup ref="hasId"/>
        <xs:attributeGroup ref="hasStyle"/>
        <xs:attributeGroup ref="hasCss"/>
        <xs:attribute name="expandOnHover" type="xs:boolean"/>
    </xs:complexType>

    <xs:complexType name="timeZoneIndicatorComponent">
        <xs:complexContent>
            <xs:extension base="baseMainElement">
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <xs:complexType name="userIndicatorComponent">
        <xs:complexContent>
            <xs:extension base="baseMainElement">

            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <xs:complexType name="ftsFieldComponent">
        <xs:complexContent>
            <xs:extension base="baseMainElement">

            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <xs:complexType name="newWindowButtonComponent">
        <xs:complexContent>
            <xs:extension base="baseMainElement"/>
        </xs:complexContent>
    </xs:complexType>

    <xs:complexType name="userActionsButton">
        <xs:complexContent>
            <xs:extension base="baseMainElement"/>
        </xs:complexContent>
    </xs:complexType>

    <xs:complexType name="logoutButtonComponent">
        <xs:complexContent>
            <xs:extension base="baseMainElement"/>
        </xs:complexContent>
    </xs:complexType>

    <xs:group name="standardComponent">
        <xs:sequence>
            <xs:choice maxOccurs="unbounded">
                <!-- Layout -->
                <xs:element name="vbox" type="boxLayout"/>
                <xs:element name="hbox" type="boxLayout"/>
                <xs:element name="flowBox" type="flowBoxLayout"/>
                <xs:element name="cssLayout" type="cssLayout"/>

                <xs:element name="htmlBox" type="htmlBoxLayout"/>
                <xs:element name="scrollBox" type="scrollBoxLayout"/>
                <xs:element name="gridLayout" type="gridLayout"/>
                <xs:element name="groupBox" type="groupBoxLayout"/>

                <xs:element name="split" type="splitContainer"/>
                <xs:element name="tabSheet" type="tabsheetContainer"/>
                <xs:element name="accordion" type="accordionContainer"/>

                <xs:element name="responsiveGridLayout" type="responsiveGridLayout"/>

                <xs:element name="fragment" type="fragmentContainer"/>

                <!-- Component -->
                <xs:element name="button" type="buttonComponent"/>
                <xs:element name="linkButton" type="buttonComponent"/>
                <xs:element name="popupButton" type="popupButtonComponent"/>
                <xs:element name="popupView" type="popupViewComponent"/>

                <xs:element name="label" type="labelComponent"/>
                <xs:element name="link" type="linkComponent"/>
                <xs:element name="checkBox" type="checkBoxComponent"/>
                <xs:element name="datePicker" type="datePickerComponent"/>
                <xs:element name="slider" type="sliderComponent"/>

                <xs:element name="textArea" type="textAreaComponent"/>
                <xs:element name="resizableTextArea" type="resizableTextAreaComponent"/>
                <xs:element name="textField" type="textFieldComponent"/>
                <xs:element name="currencyField" type="currencyFieldComponent"/>
                <xs:element name="passwordField" type="passwordFieldComponent"/>
                <xs:element name="richTextArea" type="richTextAreaComponent"/>
                <xs:element name="sourceCodeEditor" type="sourceCodeEditorComponent"/>
                <xs:element name="maskedField" type="maskedFieldComponent"/>

                <xs:element name="dateField" type="dateFieldComponent"/>
                <xs:element name="timeField" type="timeFieldComponent"/>

                <xs:element name="comboBox" type="comboBoxComponent"/>
                <xs:element name="suggestionField" type="suggestionFieldComponent"/>
                <xs:element name="entitySuggestionField" type="entitySuggestionFieldComponent"/>
                <xs:element name="valuePicker" type="valuePickerComponent"/>
                <xs:element name="valuesPicker" type="valuesPickerComponent"/>
                <xs:element name="entityPicker" type="entityPickerComponent"/>
                <xs:element name="entityComboBox" type="entityComboBoxComponent"/>

                <xs:element name="colorPicker" type="colorPickerComponent"/>
                <xs:element name="radioButtonGroup" type="radioButtonGroupComponent"/>
                <xs:element name="checkBoxGroup" type="checkBoxGroupComponent"/>
                <xs:element name="multiSelectList" type="optionsBaseFieldComponent"/>
                <xs:element name="singleSelectList" type="singleSelectListComponent"/>
                <xs:element name="progressBar" type="progressBarComponent"/>

                <xs:element name="fileUpload" type="fileUploadComponent"/>
                <xs:element name="fileStorageUpload" type="fileStorageUploadComponent"/>
                <xs:element name="fileMultiUpload" type="multiuploadComponent"/>
                <xs:element name="embedded" type="embeddedComponent"/>
                <xs:element name="image" type="imageComponent"/>
                <xs:element name="browserFrame" type="browserFrameComponent"/>

                <xs:element name="tree" type="treeComponent"/>
                <xs:element name="table" type="tableComponent"/>
                <xs:element name="treeTable" type="treeTableComponent"/>
                <xs:element name="groupTable" type="groupTableComponent"/>
                <xs:element name="dataGrid" type="dataGridComponent"/>
                <xs:element name="treeDataGrid" type="treeDataGridComponent"/>
                <xs:element name="buttonsPanel" type="buttonsPanelComponent"/>
                <xs:element name="pagination" type="paginationComponent"/>
                <xs:element name="simplePagination" type="simplePaginationComponent"/>
                <xs:element name="calendar" type="calendarComponent"/>

                <xs:element name="tagPicker" type="tagPickerComponent"/>
                <xs:element name="tagField" type="tagFieldComponent"/>
                <xs:element name="twinColumn" type="twinColumnComponent"/>
                <xs:element name="relatedEntities" type="relatedComponent"/>

                <xs:element name="form" type="formComponent"/>

                <xs:element name="filter" type="filterComponent"/>
                <xs:element name="propertyFilter" type="propertyFilterComponent"/>

                <xs:element name="capsLockIndicator" type="capsLockIndicatorComponent"/>

                <xs:element name="jsComponent" type="javaScriptComponent"/>

                <!-- Main window -->

                <xs:element name="userActionsButton" type="userActionsButton"/>
                <xs:element name="logoutButton" type="logoutButtonComponent"/>
                <xs:element name="newWindowButton" type="newWindowButtonComponent"/>
                <xs:element name="ftsField" type="ftsFieldComponent"/>
                <xs:element name="userIndicator" type="userIndicatorComponent"/>
                <xs:element name="timeZoneIndicator" type="timeZoneIndicatorComponent"/>
                <xs:element name="workArea" type="workAreaComponent"/>
                <xs:element name="drawer" type="drawerComponent"/>
                <xs:element name="sideMenu" type="sideMenuComponent"/>
                <xs:element name="menu" type="menuComponent"/>
            </xs:choice>
        </xs:sequence>
    </xs:group>

    <!-- Inner element choice -->
    <xs:group name="layoutOrComponent">
        <xs:sequence>
            <xs:choice minOccurs="0" maxOccurs="unbounded">
                <xs:group ref="standardComponent"/>
                <xs:any namespace="##other" minOccurs="0" maxOccurs="unbounded"/>
            </xs:choice>
        </xs:sequence>
    </xs:group>

    <xs:group name="singleLayoutOrComponent">
        <xs:sequence>
            <xs:choice minOccurs="0">
                <xs:group ref="standardComponent"/>
                <xs:any namespace="##other" minOccurs="0" maxOccurs="unbounded"/>
            </xs:choice>
        </xs:sequence>
    </xs:group>

    <xs:complexType name="rootLayout">
        <xs:group ref="layoutOrComponent"/>

        <xs:attribute name="expand" type="xs:string"/>

        <xs:attributeGroup ref="hasSize"/>
        <xs:attributeGroup ref="hasStyle"/>
        <xs:attributeGroup ref="hasSpacingMargin"/>
        <xs:attributeGroup ref="hasResponsive"/>
    </xs:complexType>

    <xs:complexType name="componentActions">
        <xs:sequence>
            <xs:choice maxOccurs="unbounded">
                <xs:element name="action" type="componentAction"/>
            </xs:choice>
        </xs:sequence>
    </xs:complexType>

    <xs:complexType name="listComponentComponentActions">
        <xs:sequence>
            <xs:choice maxOccurs="unbounded">
                <xs:element name="action" type="listComponentComponentAction"/>
            </xs:choice>
        </xs:sequence>
    </xs:complexType>

    <xs:simpleType name="columnAlignment">
        <xs:restriction base="xs:string">
            <xs:enumeration value="LEFT"/>
            <xs:enumeration value="RIGHT"/>
            <xs:enumeration value="CENTER"/>
        </xs:restriction>
    </xs:simpleType>

    <!-- Composite Component -->
    <xs:complexType name="compositeType">
        <xs:sequence>
            <xs:group ref="singleLayoutOrComponent"/>
        </xs:sequence>
    </xs:complexType>

    <!-- Filter -->
    <xs:complexType name="filterComponent">
        <xs:complexContent>
            <xs:extension base="baseComponent">
                <xs:sequence>
                    <xs:element name="actions" minOccurs="0" type="componentActions"/>
                    <xs:element name="conditions" minOccurs="0" type="filterConditions"/>
                    <xs:element name="configurations" minOccurs="0" type="filterConfigurations"/>
                    <xs:element name="properties" minOccurs="0">
                        <xs:complexType>
                            <xs:attribute name="include" type="xs:string" use="required"/>
                            <xs:attribute name="exclude" type="xs:string"/>
                            <xs:attribute name="excludeProperties" type="xs:string"/>
                            <xs:attribute name="excludeRecursively" type="xs:boolean"/>
                        </xs:complexType>
                    </xs:element>
                </xs:sequence>

                <xs:attributeGroup ref="hasContextHelp"/>

                <xs:attribute name="dataLoader" type="xs:string" use="required"/>
                <xs:attribute name="autoApply" type="xs:boolean"/>
                <xs:attribute name="collapsable" type="xs:boolean"/>
                <xs:attribute name="collapsed" type="xs:boolean"/>
                <xs:attribute name="columnsCount" type="xs:int"/>
                <xs:attribute name="captionPosition" type="captionPositionType"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <xs:complexType name="filterConditions">
        <xs:sequence>
            <xs:element name="groupFilter" type="baseGroupFilterComponent" minOccurs="0"/>
            <xs:element name="propertyFilter" type="basePropertyFilterComponent" minOccurs="0"/>
            <xs:element name="jpqlFilter" type="baseJpqlFilterComponent" minOccurs="0"/>
        </xs:sequence>
    </xs:complexType>

    <xs:complexType name="filterConfigurations">
        <xs:sequence>
            <xs:element name="configuration" type="filterConfiguration"/>
        </xs:sequence>
    </xs:complexType>

    <!-- Filter.Configuration -->
    <xs:complexType name="filterConfiguration">
        <xs:sequence>
            <xs:element name="groupFilter" type="baseGroupFilterComponent" minOccurs="0"/>
            <xs:element name="propertyFilter" type="basePropertyFilterComponent" minOccurs="0"/>
            <xs:element name="jpqlFilter" type="baseJpqlFilterComponent" minOccurs="0"/>
        </xs:sequence>
        <xs:attribute name="id" type="xs:string" use="required"/>
        <xs:attribute name="name" type="resourceString"/>
        <xs:attribute name="default" type="xs:boolean"/>
        <xs:attribute name="operation" type="groupFilterOperation"/>
    </xs:complexType>

    <!-- GroupFilter for Filter-->
    <xs:complexType name="baseGroupFilterComponent">
        <xs:complexContent>
            <xs:extension base="baseComponent">
                <xs:sequence>
                    <xs:element name="groupFilter" type="baseGroupFilterComponent" minOccurs="0"/>
                    <xs:element name="propertyFilter" type="basePropertyFilterComponent" minOccurs="0"/>
                    <xs:element name="jpqlFilter" type="baseJpqlFilterComponent" minOccurs="0"/>
                </xs:sequence>
                <xs:attribute name="operation" type="groupFilterOperation" use="required"/>
                <xs:attribute name="operationCaptionVisible" type="xs:boolean"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <!-- GroupFilter -->
    <xs:complexType name="groupFilterComponent">
        <xs:complexContent>
            <xs:extension base="baseGroupFilterComponent">
                <xs:attribute name="dataLoader" type="xs:string" use="required"/>
                <xs:attribute name="autoApply" type="xs:boolean"/>
                <xs:attribute name="captionPosition" type="captionPositionType"/>
                <xs:attribute name="columnsCount" type="xs:int"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <!-- PropertyFilter for Filter-->
    <xs:complexType name="basePropertyFilterComponent">
        <xs:complexContent>
            <xs:extension base="baseComponent">
                <xs:sequence>
                    <xs:group ref="layoutOrComponent"/>
                </xs:sequence>

                <xs:attributeGroup ref="hasTabIndex"/>
                <xs:attributeGroup ref="hasEditable"/>
                <xs:attributeGroup ref="hasRequirements"/>
                <xs:attributeGroup ref="hasContextHelp"/>

                <xs:attribute name="property" type="xs:string" use="required"/>
                <xs:attribute name="operation" type="propertyFilterOperation" use="required"/>
                <xs:attribute name="operationEditable" type="xs:boolean"/>
                <xs:attribute name="operationCaptionVisible" type="xs:boolean"/>
                <xs:attribute name="parameterName" type="xs:string"/>
                <xs:attribute name="defaultValue" type="xs:string"/>
                <xs:attribute name="captionVisible" type="xs:boolean"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <!-- PropertyFilter -->
    <xs:complexType name="propertyFilterComponent">
        <xs:complexContent>
            <xs:extension base="basePropertyFilterComponent">
                <xs:attribute name="dataLoader" type="xs:string" use="required"/>
                <xs:attribute name="captionWidth" type="xs:string"/>
                <xs:attribute name="autoApply" type="xs:boolean"/>
                <xs:attribute name="captionPosition" type="captionPositionType"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <!-- JpqlFilter for Filter-->
    <xs:complexType name="baseJpqlFilterComponent">
        <xs:complexContent>
            <xs:extension base="baseComponent">
                <xs:sequence>
                    <xs:group ref="layoutOrComponent"/>
                    <xs:element name="condition" type="conditionType" minOccurs="1" maxOccurs="1"/>
                </xs:sequence>

                <xs:attributeGroup ref="hasTabIndex"/>
                <xs:attributeGroup ref="hasEditable"/>
                <xs:attributeGroup ref="hasRequirements"/>
                <xs:attributeGroup ref="hasContextHelp"/>

                <xs:attribute name="parameterName" type="xs:string"/>
                <xs:attribute name="parameterClass" type="xs:string" use="required"/>
                <xs:attribute name="defaultValue" type="xs:string"/>
                <xs:attribute name="hasInExpression" type="xs:boolean"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <!-- JpqlFilter -->
    <xs:complexType name="jpqlFilterComponent">
        <xs:complexContent>
            <xs:extension base="baseJpqlFilterComponent">
                <xs:attribute name="dataLoader" type="xs:string" use="required"/>
                <xs:attribute name="captionWidth" type="xs:string"/>
                <xs:attribute name="autoApply" type="xs:boolean"/>
                <xs:attribute name="captionPosition" type="captionPositionType"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <xs:complexType name="conditionType">
        <xs:sequence>
            <xs:any namespace="##other" minOccurs="1" maxOccurs="1"/>
        </xs:sequence>
    </xs:complexType>

</xs:schema>
